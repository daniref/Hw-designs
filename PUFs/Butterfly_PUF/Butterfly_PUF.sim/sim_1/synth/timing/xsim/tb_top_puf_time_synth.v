// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2020.2 (lin64) Build 3064766 Wed Nov 18 09:12:47 MST 2020
// Date        : Wed Oct  9 21:34:55 2024
// Host        : puftester-Latitude-E7240 running 64-bit Ubuntu 18.04.6 LTS
// Command     : write_verilog -mode timesim -nolib -sdf_anno true -force -file
//               /home/puftester/PhD/repo/Hw-designs/PUFs/Butterfly_PUF/Butterfly_PUF.sim/sim_1/synth/timing/xsim/tb_top_puf_time_synth.v
// Design      : top_puf
// Purpose     : This verilog netlist is a timing simulation representation of the design and should not be modified or
//               synthesized. Please ensure that this netlist is used with the corresponding SDF file.
// Device      : xczu3eg-sbva484-1-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps
`define XIL_TIMING

module IBUF_UNIQ_BASE_
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD47
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD48
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD49
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD50
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD51
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD52
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD53
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD54
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD55
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD56
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD57
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD58
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD59
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD60
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD61
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD62
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD63
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD64
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD65
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD66
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD67
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD68
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD69
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD70
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD71
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD72
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD73
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD74
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD75
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD76
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD77
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD78
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD79
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD80
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD81
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD82
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD83
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD84
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD85
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module IBUF_HD86
   (O,
    I);
  output O;
  input I;

  wire I;
  wire O;
  wire OUT;
  wire NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED;
  wire NLW_IBUFCTRL_INST_T_UNCONNECTED;
  wire NLW_INBUF_INST_OSC_EN_UNCONNECTED;
  wire NLW_INBUF_INST_VREF_UNCONNECTED;
  wire [3:0]NLW_INBUF_INST_OSC_UNCONNECTED;

  IBUFCTRL IBUFCTRL_INST
       (.I(OUT),
        .IBUFDISABLE(NLW_IBUFCTRL_INST_IBUFDISABLE_UNCONNECTED),
        .INTERMDISABLE(NLW_IBUFCTRL_INST_INTERMDISABLE_UNCONNECTED),
        .O(O),
        .T(NLW_IBUFCTRL_INST_T_UNCONNECTED));
  INBUF INBUF_INST
       (.O(OUT),
        .OSC(NLW_INBUF_INST_OSC_UNCONNECTED[3:0]),
        .OSC_EN(NLW_INBUF_INST_OSC_EN_UNCONNECTED),
        .PAD(I),
        .VREF(NLW_INBUF_INST_VREF_UNCONNECTED));
endmodule

module Arbys
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair495" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair495" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__1
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__10
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__100
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__101
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__102
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__103
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__104
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__105
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__106
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__107
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__108
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__109
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__11
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__110
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__111
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__112
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__113
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__114
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__115
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__116
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__117
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__118
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__119
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__12
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__120
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__121
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__122
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__123
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__124
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__125
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__126
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__127
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__128
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__129
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__13
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__130
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__131
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__132
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__133
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__134
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__135
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__136
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__137
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__138
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__139
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__14
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__140
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__141
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__142
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__143
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__144
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__145
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__146
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__147
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__148
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__149
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__15
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__150
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__151
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__152
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__153
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__154
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__155
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__156
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__157
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__158
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__159
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__16
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__160
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__161
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__162
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__163
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__164
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__165
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__166
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__167
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__168
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__169
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__17
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__170
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__171
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__172
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__173
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__174
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__175
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__176
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__177
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__178
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__179
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__18
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__180
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__181
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__182
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__183
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__184
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__185
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__186
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__187
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__188
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__189
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__19
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__190
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__191
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__192
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__193
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__194
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__195
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__196
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__197
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__198
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__199
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__2
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__20
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__200
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__201
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__202
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__203
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__204
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__205
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__206
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__207
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__208
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__209
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__21
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__210
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__211
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__212
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__213
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__214
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__215
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__216
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__217
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__218
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__219
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__22
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__220
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__221
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__222
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__223
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__224
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__225
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__226
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__227
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__228
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__229
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__23
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__230
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__231
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__232
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__233
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__234
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__235
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__236
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__237
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__238
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__239
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__24
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__240
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__241
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__242
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__243
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__244
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__245
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__246
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__247
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__248
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__249
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__25
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__250
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__251
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__252
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__253
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__254
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__255
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__256
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__257
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__258
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__259
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__26
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__260
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__261
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__262
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__263
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__264
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__265
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__266
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__267
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__268
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__269
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__27
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__270
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__271
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__272
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__273
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__274
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__275
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__276
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__277
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__278
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__279
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__28
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__280
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__281
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__282
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__283
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__284
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__285
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__286
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__287
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__288
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__289
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__29
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__290
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__291
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__292
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__293
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__294
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__295
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__296
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__297
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__298
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__299
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__3
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__30
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__300
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__301
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__302
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__303
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__304
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__305
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__306
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__307
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__308
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__309
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__31
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__310
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__311
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__312
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__313
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__314
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__315
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__316
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__317
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__318
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__319
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__32
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__320
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__321
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__322
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__323
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__324
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__325
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__326
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__327
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__328
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__329
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__33
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__330
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__331
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__332
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__333
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__334
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__335
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__336
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__337
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__338
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__339
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__34
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__340
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__341
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__342
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__343
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__344
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__345
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__346
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__347
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__348
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__349
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__35
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__350
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__351
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__352
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__353
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__354
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__355
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__356
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__357
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__358
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__359
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__36
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__360
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__361
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__362
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__363
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__364
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__365
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__366
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__367
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__368
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__369
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__37
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__370
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__371
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__372
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__373
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__374
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__375
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__376
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__377
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__378
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__379
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__38
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__380
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__381
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__382
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__383
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__384
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__385
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__386
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__387
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__388
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__389
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__39
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__390
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__391
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__392
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__393
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__394
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__395
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__396
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__397
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__398
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__399
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__4
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__40
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__400
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__401
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__402
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__403
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__404
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__405
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__406
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__407
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__408
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__409
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__41
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__410
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__411
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__412
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__413
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__414
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__415
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__416
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__417
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__418
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__419
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__42
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__420
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__421
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__422
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__423
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__424
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__425
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__426
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__427
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__428
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__429
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__43
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__430
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__431
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__432
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__433
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__434
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__435
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__436
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__437
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__438
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__439
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__44
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__440
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__441
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__442
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__443
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__444
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__445
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__446
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair445" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair445" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__447
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair446" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair446" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__448
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair447" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair447" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__449
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair448" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair448" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__45
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__450
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair449" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair449" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__451
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair450" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair450" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__452
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair451" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair451" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__453
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair452" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair452" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__454
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair453" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair453" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__455
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair454" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair454" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__456
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair455" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair455" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__457
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair456" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair456" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__458
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair457" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair457" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__459
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair458" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair458" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__46
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__460
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair459" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair459" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__461
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair460" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair460" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__462
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair461" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair461" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__463
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair462" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair462" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__464
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair463" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair463" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__465
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair464" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair464" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__466
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair465" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair465" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__467
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair466" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair466" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__468
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair467" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair467" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__469
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair468" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair468" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__47
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__470
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair469" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair469" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__471
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair470" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair470" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__472
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair471" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair471" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__473
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair472" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair472" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__474
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair473" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair473" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__475
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair474" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair474" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__476
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair475" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair475" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__477
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair476" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair476" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__478
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair477" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair477" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__479
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair478" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair478" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__48
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__480
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair479" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair479" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__481
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair480" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair480" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__482
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair481" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair481" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__483
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair482" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair482" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__484
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair483" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair483" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__485
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair484" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair484" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__486
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair485" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair485" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__487
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair486" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair486" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__488
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair487" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair487" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__489
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair488" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair488" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__49
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__490
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair489" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair489" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__491
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair490" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair490" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__492
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair491" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair491" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__493
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair492" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair492" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__494
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair493" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair493" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__495
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair494" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair494" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__5
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__50
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__51
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__52
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__53
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__54
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__55
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__56
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__57
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__58
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__59
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__6
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__60
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__61
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__62
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__63
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__64
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__65
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__66
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__67
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__68
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__69
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__7
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__70
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__71
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__72
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__73
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__74
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__75
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__76
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__77
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__78
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__79
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__8
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__80
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__81
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__82
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__83
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__84
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__85
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__86
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__87
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__88
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__89
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__9
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__90
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__91
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__92
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__93
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__94
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__95
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__96
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__97
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__98
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

(* ORIG_REF_NAME = "Arbys" *) 
module Arbys__99
   (in1,
    in0,
    in2,
    in3,
    sel,
    out1,
    out2);
  input in1;
  input in0;
  input in2;
  input in3;
  input sel;
  output out1;
  output out2;

  wire in0;
  wire in1;
  wire in2;
  wire in3;
  wire out1;
  wire out2;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out1_INST_0
       (.I0(in1),
        .I1(sel),
        .I2(in0),
        .O(out1));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    out2_INST_0
       (.I0(in3),
        .I1(sel),
        .I2(in2),
        .O(out2));
endmodule

module Butterfly
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF__10 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_0 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__1
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_493 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_494 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__10
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_475 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_476 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__100
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_295 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_296 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__101
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_293 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_294 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__102
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_291 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_292 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__103
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_289 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_290 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__104
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_287 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_288 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__105
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_285 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_286 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__106
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_283 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_284 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__107
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_281 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_282 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__108
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_279 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_280 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__109
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_277 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_278 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__11
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_473 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_474 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__110
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_275 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_276 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__111
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_273 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_274 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__112
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_271 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_272 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__113
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_269 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_270 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__114
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_267 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_268 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__115
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_265 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_266 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__116
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_263 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_264 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__117
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_261 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_262 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__118
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_259 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_260 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__119
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_257 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_258 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__12
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_471 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_472 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__120
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_255 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_256 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__121
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_253 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_254 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__122
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_251 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_252 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__123
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_249 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_250 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__124
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_247 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_248 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__125
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_245 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_246 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__126
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_243 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_244 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__127
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_241 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_242 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__128
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_239 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_240 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__129
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_237 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_238 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__13
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_469 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_470 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__130
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_235 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_236 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__131
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_233 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_234 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__132
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_231 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_232 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__133
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_229 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_230 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__134
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_227 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_228 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__135
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_225 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_226 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__136
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_223 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_224 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__137
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_221 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_222 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__138
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_219 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_220 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__139
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_217 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_218 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__14
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_467 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_468 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__140
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_215 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_216 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__141
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_213 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_214 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__142
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_211 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_212 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__143
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_209 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_210 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__144
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_207 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_208 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__145
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_205 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_206 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__146
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_203 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_204 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__147
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_201 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_202 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__148
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_199 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_200 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__149
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_197 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_198 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__15
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_465 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_466 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__150
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_195 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_196 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__151
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_193 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_194 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__152
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_191 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_192 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__153
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_189 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_190 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__154
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_187 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_188 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__155
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_185 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_186 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__156
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_183 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_184 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__157
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_181 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_182 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__158
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_179 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_180 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__159
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_177 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_178 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__16
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_463 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_464 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__160
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_175 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_176 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__161
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_173 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_174 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__162
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_171 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_172 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__163
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_169 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_170 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__164
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_167 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_168 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__165
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_165 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_166 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__166
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_163 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_164 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__167
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_161 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_162 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__168
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_159 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_160 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__169
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_157 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_158 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__17
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_461 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_462 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__170
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_155 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_156 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__171
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_153 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_154 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__172
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_151 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_152 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__173
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_149 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_150 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__174
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_147 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_148 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__175
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_145 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_146 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__176
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_143 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_144 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__177
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_141 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_142 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__178
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_139 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_140 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__179
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_137 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_138 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__18
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_459 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_460 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__180
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_135 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_136 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__181
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_133 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_134 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__182
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_131 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_132 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__183
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_129 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_130 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__184
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_127 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_128 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__185
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_125 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_126 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__186
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_123 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_124 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__187
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_121 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_122 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__188
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_119 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_120 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__189
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_117 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_118 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__19
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_457 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_458 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__190
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_115 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_116 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__191
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_113 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_114 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__192
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_111 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_112 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__193
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_109 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_110 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__194
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_107 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_108 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__195
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_105 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_106 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__196
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_103 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_104 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__197
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_101 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_102 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__198
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_99 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_100 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__199
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_97 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_98 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__2
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_491 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_492 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__20
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_455 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_456 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__200
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_95 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_96 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__201
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_93 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_94 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__202
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_91 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_92 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__203
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_89 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_90 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__204
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_87 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_88 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__205
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_85 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_86 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__206
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_83 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_84 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__207
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_81 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_82 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__208
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_79 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_80 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__209
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_77 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_78 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__21
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_453 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_454 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__210
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_75 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_76 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__211
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_73 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_74 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__212
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_71 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_72 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__213
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_69 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_70 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__214
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_67 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_68 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__215
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_65 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_66 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__216
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_63 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_64 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__217
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_61 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_62 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__218
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_59 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_60 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__219
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_57 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_58 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__22
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_451 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_452 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__220
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_55 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_56 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__221
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_53 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_54 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__222
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_51 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_52 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__223
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_49 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_50 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__224
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_47 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_48 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__225
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_45 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_46 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__226
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_43 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_44 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__227
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_41 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_42 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__228
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_39 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_40 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__229
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_37 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_38 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__23
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_449 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_450 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__230
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_35 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_36 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__231
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_33 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_34 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__232
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_31 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_32 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__233
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_29 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_30 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__234
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_27 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_28 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__235
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_25 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_26 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__236
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_23 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_24 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__237
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_21 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_22 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__238
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_19 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_20 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__239
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_17 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_18 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__24
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_447 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_448 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__240
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_15 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_16 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__241
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_13 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_14 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__242
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_11 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_12 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__243
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_9 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_10 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__244
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_7 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_8 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__245
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_5 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_6 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__246
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_3 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_4 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__247
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_1 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_2 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__25
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_445 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_446 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__26
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_443 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_444 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__27
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_441 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_442 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__28
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_439 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_440 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__29
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_437 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_438 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__3
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_489 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_490 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__30
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_435 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_436 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__31
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_433 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_434 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__32
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_431 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_432 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__33
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_429 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_430 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__34
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_427 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_428 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__35
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_425 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_426 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__36
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_423 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_424 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__37
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_421 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_422 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__38
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_419 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_420 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__39
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_417 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_418 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__4
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_487 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_488 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__40
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_415 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_416 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__41
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_413 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_414 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__42
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_411 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_412 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__43
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_409 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_410 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__44
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_407 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_408 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__45
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_405 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_406 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__46
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_403 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_404 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__47
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_401 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_402 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__48
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_399 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_400 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__49
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_397 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_398 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__5
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_485 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_486 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__50
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_395 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_396 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__51
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_393 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_394 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__52
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_391 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_392 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__53
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_389 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_390 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__54
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_387 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_388 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__55
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_385 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_386 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__56
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_383 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_384 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__57
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_381 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_382 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__58
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_379 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_380 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__59
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_377 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_378 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__6
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_483 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_484 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__60
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_375 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_376 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__61
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_373 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_374 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__62
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_371 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_372 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__63
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_369 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_370 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__64
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_367 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_368 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__65
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_365 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_366 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__66
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_363 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_364 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__67
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_361 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_362 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__68
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_359 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_360 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__69
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_357 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_358 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__7
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_481 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_482 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__70
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_355 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_356 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__71
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_353 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_354 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__72
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_351 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_352 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__73
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_349 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_350 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__74
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_347 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_348 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__75
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_345 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_346 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__76
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_343 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_344 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__77
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_341 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_342 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__78
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_339 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_340 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__79
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_337 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_338 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__8
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_479 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_480 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__80
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_335 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_336 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__81
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_333 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_334 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__82
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_331 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_332 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__83
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_329 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_330 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__84
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_327 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_328 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__85
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_325 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_326 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__86
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_323 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_324 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__87
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_321 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_322 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__88
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_319 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_320 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__89
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_317 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_318 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__9
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_477 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_478 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__90
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_315 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_316 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__91
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_313 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_314 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__92
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_311 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_312 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__93
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_309 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_310 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__94
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_307 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_308 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__95
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_305 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_306 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__96
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_303 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_304 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__97
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_301 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_302 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__98
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_299 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_300 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Butterfly" *) 
module Butterfly__99
   (CLK,
    Pre,
    Clr,
    Q);
  input CLK;
  input Pre;
  input Clr;
  (* dont_touch = "TRUE" *) output Q;

  wire CLK;
  wire Clr;
  wire D;
  wire D1_reg_n_0;
  wire Pre;
  (* DONT_TOUCH *) wire Q;
  (* DONT_TOUCH *) wire Q1;
  wire Q__0;

  FDRE #(
    .INIT(1'b0)) 
    D1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q__0),
        .Q(D1_reg_n_0),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    D2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(D),
        .R(1'b0));
  DFF_297 DFF1_inst
       (.CLK(CLK),
        .Clr(Clr),
        .Q_reg_0(D1_reg_n_0),
        .in0(Q1));
  DFF_298 DFF2_inst
       (.CLK(CLK),
        .D(D),
        .Pre(Pre),
        .Q__0(Q__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q1),
        .Q(Q),
        .R(1'b0));
endmodule

module DFF
   (D,
    Pre,
    CLR,
    CLK,
    Q);
  input D;
  input Pre;
  input CLR;
  input CLK;
  output Q;

  wire CLK;
  wire CLR;
  wire D;
  wire Pre;
  wire Q;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q),
        .R(CLR));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_0
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_1
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_10
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_100
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_101
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_102
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_103
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_104
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_105
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_106
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_107
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_108
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_109
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_11
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_110
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_111
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_112
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_113
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_114
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_115
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_116
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_117
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_118
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_119
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_12
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_120
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_121
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_122
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_123
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_124
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_125
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_126
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_127
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_128
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_129
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_13
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_130
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_131
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_132
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_133
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_134
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_135
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_136
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_137
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_138
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_139
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_14
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_140
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_141
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_142
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_143
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_144
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_145
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_146
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_147
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_148
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_149
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_15
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_150
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_151
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_152
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_153
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_154
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_155
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_156
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_157
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_158
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_159
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_16
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_160
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_161
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_162
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_163
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_164
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_165
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_166
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_167
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_168
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_169
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_17
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_170
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_171
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_172
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_173
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_174
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_175
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_176
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_177
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_178
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_179
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_18
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_180
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_181
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_182
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_183
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_184
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_185
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_186
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_187
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_188
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_189
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_19
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_190
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_191
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_192
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_193
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_194
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_195
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_196
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_197
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_198
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_199
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_2
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_20
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_200
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_201
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_202
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_203
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_204
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_205
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_206
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_207
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_208
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_209
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_21
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_210
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_211
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_212
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_213
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_214
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_215
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_216
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_217
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_218
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_219
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_22
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_220
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_221
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_222
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_223
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_224
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_225
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_226
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_227
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_228
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_229
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_23
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_230
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_231
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_232
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_233
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_234
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_235
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_236
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_237
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_238
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_239
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_24
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_240
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_241
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_242
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_243
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_244
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_245
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_246
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_247
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_248
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_249
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_25
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_250
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_251
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_252
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_253
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_254
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_255
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_256
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_257
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_258
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_259
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_26
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_260
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_261
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_262
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_263
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_264
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_265
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_266
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_267
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_268
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_269
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_27
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_270
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_271
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_272
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_273
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_274
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_275
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_276
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_277
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_278
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_279
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_28
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_280
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_281
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_282
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_283
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_284
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_285
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_286
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_287
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_288
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_289
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_29
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_290
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_291
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_292
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_293
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_294
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_295
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_296
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_297
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_298
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_299
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_3
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_30
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_300
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_301
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_302
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_303
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_304
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_305
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_306
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_307
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_308
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_309
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_31
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_310
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_311
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_312
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_313
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_314
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_315
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_316
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_317
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_318
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_319
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_32
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_320
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_321
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_322
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_323
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_324
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_325
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_326
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_327
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_328
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_329
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_33
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_330
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_331
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_332
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_333
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_334
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_335
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_336
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_337
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_338
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_339
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_34
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_340
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_341
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_342
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_343
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_344
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_345
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_346
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_347
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_348
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_349
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_35
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_350
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_351
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_352
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_353
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_354
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_355
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_356
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_357
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_358
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_359
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_36
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_360
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_361
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_362
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_363
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_364
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_365
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_366
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_367
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_368
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_369
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_37
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_370
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_371
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_372
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_373
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_374
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_375
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_376
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_377
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_378
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_379
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_38
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_380
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_381
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_382
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_383
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_384
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_385
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_386
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_387
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_388
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_389
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_39
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_390
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_391
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_392
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_393
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_394
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_395
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_396
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_397
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_398
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_399
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_4
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_40
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_400
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_401
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_402
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_403
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_404
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_405
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_406
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_407
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_408
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_409
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_41
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_410
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_411
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_412
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_413
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_414
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_415
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_416
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_417
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_418
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_419
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_42
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_420
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_421
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_422
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_423
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_424
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_425
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_426
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_427
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_428
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_429
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_43
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_430
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_431
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_432
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_433
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_434
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_435
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_436
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_437
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_438
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_439
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_44
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_440
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_441
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_442
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_443
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_444
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_445
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_446
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_447
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_448
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_449
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_45
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_450
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_451
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_452
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_453
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_454
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_455
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_456
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_457
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_458
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_459
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_46
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_460
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_461
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_462
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_463
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_464
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_465
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_466
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_467
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_468
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_469
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_47
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_470
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_471
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_472
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_473
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_474
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_475
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_476
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_477
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_478
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_479
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_48
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_480
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_481
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_482
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_483
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_484
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_485
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_486
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_487
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_488
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_489
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_49
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_490
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_491
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_492
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_493
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_494
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_5
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_50
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_51
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_52
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_53
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_54
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_55
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_56
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_57
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_58
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_59
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_6
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_60
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_61
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_62
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_63
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_64
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_65
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_66
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_67
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_68
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_69
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_7
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_70
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_71
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_72
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_73
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_74
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_75
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_76
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_77
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_78
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_79
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_8
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_80
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_81
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_82
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_83
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_84
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_85
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_86
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_87
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_88
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_89
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_9
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_90
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_91
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_92
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_93
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_94
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_95
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_96
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_97
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_98
   (Q__0,
    D,
    Pre,
    CLK);
  output Q__0;
  input D;
  input Pre;
  input CLK;

  wire CLK;
  wire D;
  wire Pre;
  wire Q__0;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF_99
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF__10
   (in0,
    CLK,
    Q_reg_0,
    Clr);
  output in0;
  input CLK;
  input Q_reg_0;
  input Clr;

  wire CLK;
  wire Clr;
  wire Q_i_1_n_0;
  wire Q_reg_0;
  wire in0;

  LUT2 #(
    .INIT(4'h2)) 
    Q_i_1
       (.I0(Q_reg_0),
        .I1(Clr),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF__3
   (D,
    Pre,
    CLR,
    CLK,
    Q);
  input D;
  input Pre;
  input CLR;
  input CLK;
  output Q;

  wire CLK;
  wire CLR;
  wire D;
  wire Pre;
  wire Q;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q),
        .R(CLR));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF__4
   (D,
    Pre,
    CLR,
    CLK,
    Q);
  input D;
  input Pre;
  input CLR;
  input CLK;
  output Q;

  wire CLK;
  wire CLR;
  wire D;
  wire Pre;
  wire Q;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q),
        .R(CLR));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF__5
   (D,
    Pre,
    CLR,
    CLK,
    Q);
  input D;
  input Pre;
  input CLR;
  input CLK;
  output Q;

  wire CLK;
  wire CLR;
  wire D;
  wire Pre;
  wire Q;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q),
        .R(CLR));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF__6
   (D,
    Pre,
    CLR,
    CLK,
    Q);
  input D;
  input Pre;
  input CLR;
  input CLK;
  output Q;

  wire CLK;
  wire CLR;
  wire D;
  wire Pre;
  wire Q;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q),
        .R(CLR));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF__7
   (D,
    Pre,
    CLR,
    CLK,
    Q);
  input D;
  input Pre;
  input CLR;
  input CLK;
  output Q;

  wire CLK;
  wire CLR;
  wire D;
  wire Pre;
  wire Q;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q),
        .R(CLR));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF__8
   (D,
    Pre,
    CLR,
    CLK,
    Q);
  input D;
  input Pre;
  input CLR;
  input CLK;
  output Q;

  wire CLK;
  wire CLR;
  wire D;
  wire Pre;
  wire Q;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q),
        .R(CLR));
endmodule

(* ORIG_REF_NAME = "DFF" *) 
module DFF__9
   (D,
    Pre,
    CLR,
    CLK,
    Q);
  input D;
  input Pre;
  input CLR;
  input CLK;
  output Q;

  wire CLK;
  wire CLR;
  wire D;
  wire Pre;
  wire Q;
  wire Q_i_1_n_0;

  LUT2 #(
    .INIT(4'hE)) 
    Q_i_1
       (.I0(D),
        .I1(Pre),
        .O(Q_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(Q_i_1_n_0),
        .Q(Q),
        .R(CLR));
endmodule

module Puf
   (Response,
    Q,
    CLK,
    Challenge);
  output [7:0]Response;
  input [1:0]Q;
  input CLK;
  input [31:0]Challenge;

  (* DONT_TOUCH *) wire [30:0]\ArbOut1[0]_18 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut1[1]_21 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut1[2]_24 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut1[3]_27 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut1[4]_30 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut1[5]_33 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut1[6]_36 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut1[7]_39 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut2[0]_17 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut2[1]_20 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut2[2]_23 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut2[3]_26 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut2[4]_29 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut2[5]_32 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut2[6]_35 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut2[7]_38 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut3[0]_2 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut3[1]_4 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut3[2]_6 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut3[3]_8 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut3[4]_10 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut3[5]_12 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut3[6]_14 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut3[7]_16 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut4[0]_1 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut4[1]_3 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut4[2]_5 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut4[3]_7 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut4[4]_9 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut4[5]_11 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut4[6]_13 ;
  (* DONT_TOUCH *) wire [30:0]\ArbOut4[7]_15 ;
  (* DONT_TOUCH *) wire [30:0]\Butterfly_out[0]_19 ;
  (* DONT_TOUCH *) wire [30:0]\Butterfly_out[1]_22 ;
  (* DONT_TOUCH *) wire [30:0]\Butterfly_out[2]_25 ;
  (* DONT_TOUCH *) wire [30:0]\Butterfly_out[3]_28 ;
  (* DONT_TOUCH *) wire [30:0]\Butterfly_out[4]_31 ;
  (* DONT_TOUCH *) wire [30:0]\Butterfly_out[5]_34 ;
  (* DONT_TOUCH *) wire [30:0]\Butterfly_out[6]_37 ;
  (* DONT_TOUCH *) wire [30:0]\Butterfly_out[7]_40 ;
  wire CLK;
  (* DONT_TOUCH *) wire [31:0]Challenge;
  wire [1:0]Q;
  wire [7:0]Response;
  (* DONT_TOUCH *) wire en_puf;

  LUT2 #(
    .INIT(4'h2)) 
    EN_inferred_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(en_puf));
  (* DONT_TOUCH *) 
  Arbys__1 \Puf_Gen[0].Chain_Gen[0].First_ChainLink.ArbiterL1_inst 
       (.in0(en_puf),
        .in1(en_puf),
        .in2(en_puf),
        .in3(en_puf),
        .out1(\ArbOut1[0]_18 [0]),
        .out2(\ArbOut2[0]_17 [0]),
        .sel(Challenge[0]));
  (* DONT_TOUCH *) 
  Arbys__2 \Puf_Gen[0].Chain_Gen[0].First_ChainLink.ArbiterL2_inst 
       (.in0(\ArbOut1[0]_18 [0]),
        .in1(\ArbOut2[0]_17 [0]),
        .in2(\ArbOut2[0]_17 [0]),
        .in3(\ArbOut1[0]_18 [0]),
        .out1(\ArbOut3[0]_2 [0]),
        .out2(\ArbOut4[0]_1 [0]),
        .sel(\Butterfly_out[0]_19 [0]));
  (* DONT_TOUCH *) 
  Butterfly__1 \Puf_Gen[0].Chain_Gen[0].First_ChainLink.Butterfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [0]),
        .Pre(\ArbOut2[0]_17 [0]),
        .Q(\Butterfly_out[0]_19 [0]));
  (* DONT_TOUCH *) 
  Arbys__21 \Puf_Gen[0].Chain_Gen[10].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [9]),
        .in1(\ArbOut4[0]_1 [9]),
        .in2(\ArbOut4[0]_1 [9]),
        .in3(\ArbOut3[0]_2 [9]),
        .out1(\ArbOut1[0]_18 [10]),
        .out2(\ArbOut2[0]_17 [10]),
        .sel(Challenge[10]));
  (* DONT_TOUCH *) 
  Arbys__22 \Puf_Gen[0].Chain_Gen[10].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [10]),
        .in1(\ArbOut2[0]_17 [10]),
        .in2(\ArbOut2[0]_17 [10]),
        .in3(\ArbOut1[0]_18 [10]),
        .out1(\ArbOut3[0]_2 [10]),
        .out2(\ArbOut4[0]_1 [10]),
        .sel(\Butterfly_out[0]_19 [10]));
  (* DONT_TOUCH *) 
  Butterfly__11 \Puf_Gen[0].Chain_Gen[10].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [10]),
        .Pre(\ArbOut2[0]_17 [10]),
        .Q(\Butterfly_out[0]_19 [10]));
  (* DONT_TOUCH *) 
  Arbys__23 \Puf_Gen[0].Chain_Gen[11].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [10]),
        .in1(\ArbOut4[0]_1 [10]),
        .in2(\ArbOut4[0]_1 [10]),
        .in3(\ArbOut3[0]_2 [10]),
        .out1(\ArbOut1[0]_18 [11]),
        .out2(\ArbOut2[0]_17 [11]),
        .sel(Challenge[11]));
  (* DONT_TOUCH *) 
  Arbys__24 \Puf_Gen[0].Chain_Gen[11].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [11]),
        .in1(\ArbOut2[0]_17 [11]),
        .in2(\ArbOut2[0]_17 [11]),
        .in3(\ArbOut1[0]_18 [11]),
        .out1(\ArbOut3[0]_2 [11]),
        .out2(\ArbOut4[0]_1 [11]),
        .sel(\Butterfly_out[0]_19 [11]));
  (* DONT_TOUCH *) 
  Butterfly__12 \Puf_Gen[0].Chain_Gen[11].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [11]),
        .Pre(\ArbOut2[0]_17 [11]),
        .Q(\Butterfly_out[0]_19 [11]));
  (* DONT_TOUCH *) 
  Arbys__25 \Puf_Gen[0].Chain_Gen[12].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [11]),
        .in1(\ArbOut4[0]_1 [11]),
        .in2(\ArbOut4[0]_1 [11]),
        .in3(\ArbOut3[0]_2 [11]),
        .out1(\ArbOut1[0]_18 [12]),
        .out2(\ArbOut2[0]_17 [12]),
        .sel(Challenge[12]));
  (* DONT_TOUCH *) 
  Arbys__26 \Puf_Gen[0].Chain_Gen[12].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [12]),
        .in1(\ArbOut2[0]_17 [12]),
        .in2(\ArbOut2[0]_17 [12]),
        .in3(\ArbOut1[0]_18 [12]),
        .out1(\ArbOut3[0]_2 [12]),
        .out2(\ArbOut4[0]_1 [12]),
        .sel(\Butterfly_out[0]_19 [12]));
  (* DONT_TOUCH *) 
  Butterfly__13 \Puf_Gen[0].Chain_Gen[12].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [12]),
        .Pre(\ArbOut2[0]_17 [12]),
        .Q(\Butterfly_out[0]_19 [12]));
  (* DONT_TOUCH *) 
  Arbys__27 \Puf_Gen[0].Chain_Gen[13].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [12]),
        .in1(\ArbOut4[0]_1 [12]),
        .in2(\ArbOut4[0]_1 [12]),
        .in3(\ArbOut3[0]_2 [12]),
        .out1(\ArbOut1[0]_18 [13]),
        .out2(\ArbOut2[0]_17 [13]),
        .sel(Challenge[13]));
  (* DONT_TOUCH *) 
  Arbys__28 \Puf_Gen[0].Chain_Gen[13].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [13]),
        .in1(\ArbOut2[0]_17 [13]),
        .in2(\ArbOut2[0]_17 [13]),
        .in3(\ArbOut1[0]_18 [13]),
        .out1(\ArbOut3[0]_2 [13]),
        .out2(\ArbOut4[0]_1 [13]),
        .sel(\Butterfly_out[0]_19 [13]));
  (* DONT_TOUCH *) 
  Butterfly__14 \Puf_Gen[0].Chain_Gen[13].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [13]),
        .Pre(\ArbOut2[0]_17 [13]),
        .Q(\Butterfly_out[0]_19 [13]));
  (* DONT_TOUCH *) 
  Arbys__29 \Puf_Gen[0].Chain_Gen[14].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [13]),
        .in1(\ArbOut4[0]_1 [13]),
        .in2(\ArbOut4[0]_1 [13]),
        .in3(\ArbOut3[0]_2 [13]),
        .out1(\ArbOut1[0]_18 [14]),
        .out2(\ArbOut2[0]_17 [14]),
        .sel(Challenge[14]));
  (* DONT_TOUCH *) 
  Arbys__30 \Puf_Gen[0].Chain_Gen[14].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [14]),
        .in1(\ArbOut2[0]_17 [14]),
        .in2(\ArbOut2[0]_17 [14]),
        .in3(\ArbOut1[0]_18 [14]),
        .out1(\ArbOut3[0]_2 [14]),
        .out2(\ArbOut4[0]_1 [14]),
        .sel(\Butterfly_out[0]_19 [14]));
  (* DONT_TOUCH *) 
  Butterfly__15 \Puf_Gen[0].Chain_Gen[14].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [14]),
        .Pre(\ArbOut2[0]_17 [14]),
        .Q(\Butterfly_out[0]_19 [14]));
  (* DONT_TOUCH *) 
  Arbys__31 \Puf_Gen[0].Chain_Gen[15].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [14]),
        .in1(\ArbOut4[0]_1 [14]),
        .in2(\ArbOut4[0]_1 [14]),
        .in3(\ArbOut3[0]_2 [14]),
        .out1(\ArbOut1[0]_18 [15]),
        .out2(\ArbOut2[0]_17 [15]),
        .sel(Challenge[15]));
  (* DONT_TOUCH *) 
  Arbys__32 \Puf_Gen[0].Chain_Gen[15].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [15]),
        .in1(\ArbOut2[0]_17 [15]),
        .in2(\ArbOut2[0]_17 [15]),
        .in3(\ArbOut1[0]_18 [15]),
        .out1(\ArbOut3[0]_2 [15]),
        .out2(\ArbOut4[0]_1 [15]),
        .sel(\Butterfly_out[0]_19 [15]));
  (* DONT_TOUCH *) 
  Butterfly__16 \Puf_Gen[0].Chain_Gen[15].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [15]),
        .Pre(\ArbOut2[0]_17 [15]),
        .Q(\Butterfly_out[0]_19 [15]));
  (* DONT_TOUCH *) 
  Arbys__33 \Puf_Gen[0].Chain_Gen[16].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [15]),
        .in1(\ArbOut4[0]_1 [15]),
        .in2(\ArbOut4[0]_1 [15]),
        .in3(\ArbOut3[0]_2 [15]),
        .out1(\ArbOut1[0]_18 [16]),
        .out2(\ArbOut2[0]_17 [16]),
        .sel(Challenge[16]));
  (* DONT_TOUCH *) 
  Arbys__34 \Puf_Gen[0].Chain_Gen[16].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [16]),
        .in1(\ArbOut2[0]_17 [16]),
        .in2(\ArbOut2[0]_17 [16]),
        .in3(\ArbOut1[0]_18 [16]),
        .out1(\ArbOut3[0]_2 [16]),
        .out2(\ArbOut4[0]_1 [16]),
        .sel(\Butterfly_out[0]_19 [16]));
  (* DONT_TOUCH *) 
  Butterfly__17 \Puf_Gen[0].Chain_Gen[16].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [16]),
        .Pre(\ArbOut2[0]_17 [16]),
        .Q(\Butterfly_out[0]_19 [16]));
  (* DONT_TOUCH *) 
  Arbys__35 \Puf_Gen[0].Chain_Gen[17].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [16]),
        .in1(\ArbOut4[0]_1 [16]),
        .in2(\ArbOut4[0]_1 [16]),
        .in3(\ArbOut3[0]_2 [16]),
        .out1(\ArbOut1[0]_18 [17]),
        .out2(\ArbOut2[0]_17 [17]),
        .sel(Challenge[17]));
  (* DONT_TOUCH *) 
  Arbys__36 \Puf_Gen[0].Chain_Gen[17].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [17]),
        .in1(\ArbOut2[0]_17 [17]),
        .in2(\ArbOut2[0]_17 [17]),
        .in3(\ArbOut1[0]_18 [17]),
        .out1(\ArbOut3[0]_2 [17]),
        .out2(\ArbOut4[0]_1 [17]),
        .sel(\Butterfly_out[0]_19 [17]));
  (* DONT_TOUCH *) 
  Butterfly__18 \Puf_Gen[0].Chain_Gen[17].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [17]),
        .Pre(\ArbOut2[0]_17 [17]),
        .Q(\Butterfly_out[0]_19 [17]));
  (* DONT_TOUCH *) 
  Arbys__37 \Puf_Gen[0].Chain_Gen[18].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [17]),
        .in1(\ArbOut4[0]_1 [17]),
        .in2(\ArbOut4[0]_1 [17]),
        .in3(\ArbOut3[0]_2 [17]),
        .out1(\ArbOut1[0]_18 [18]),
        .out2(\ArbOut2[0]_17 [18]),
        .sel(Challenge[18]));
  (* DONT_TOUCH *) 
  Arbys__38 \Puf_Gen[0].Chain_Gen[18].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [18]),
        .in1(\ArbOut2[0]_17 [18]),
        .in2(\ArbOut2[0]_17 [18]),
        .in3(\ArbOut1[0]_18 [18]),
        .out1(\ArbOut3[0]_2 [18]),
        .out2(\ArbOut4[0]_1 [18]),
        .sel(\Butterfly_out[0]_19 [18]));
  (* DONT_TOUCH *) 
  Butterfly__19 \Puf_Gen[0].Chain_Gen[18].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [18]),
        .Pre(\ArbOut2[0]_17 [18]),
        .Q(\Butterfly_out[0]_19 [18]));
  (* DONT_TOUCH *) 
  Arbys__39 \Puf_Gen[0].Chain_Gen[19].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [18]),
        .in1(\ArbOut4[0]_1 [18]),
        .in2(\ArbOut4[0]_1 [18]),
        .in3(\ArbOut3[0]_2 [18]),
        .out1(\ArbOut1[0]_18 [19]),
        .out2(\ArbOut2[0]_17 [19]),
        .sel(Challenge[19]));
  (* DONT_TOUCH *) 
  Arbys__40 \Puf_Gen[0].Chain_Gen[19].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [19]),
        .in1(\ArbOut2[0]_17 [19]),
        .in2(\ArbOut2[0]_17 [19]),
        .in3(\ArbOut1[0]_18 [19]),
        .out1(\ArbOut3[0]_2 [19]),
        .out2(\ArbOut4[0]_1 [19]),
        .sel(\Butterfly_out[0]_19 [19]));
  (* DONT_TOUCH *) 
  Butterfly__20 \Puf_Gen[0].Chain_Gen[19].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [19]),
        .Pre(\ArbOut2[0]_17 [19]),
        .Q(\Butterfly_out[0]_19 [19]));
  (* DONT_TOUCH *) 
  Arbys__3 \Puf_Gen[0].Chain_Gen[1].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [0]),
        .in1(\ArbOut4[0]_1 [0]),
        .in2(\ArbOut4[0]_1 [0]),
        .in3(\ArbOut3[0]_2 [0]),
        .out1(\ArbOut1[0]_18 [1]),
        .out2(\ArbOut2[0]_17 [1]),
        .sel(Challenge[1]));
  (* DONT_TOUCH *) 
  Arbys__4 \Puf_Gen[0].Chain_Gen[1].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [1]),
        .in1(\ArbOut2[0]_17 [1]),
        .in2(\ArbOut2[0]_17 [1]),
        .in3(\ArbOut1[0]_18 [1]),
        .out1(\ArbOut3[0]_2 [1]),
        .out2(\ArbOut4[0]_1 [1]),
        .sel(\Butterfly_out[0]_19 [1]));
  (* DONT_TOUCH *) 
  Butterfly__2 \Puf_Gen[0].Chain_Gen[1].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [1]),
        .Pre(\ArbOut2[0]_17 [1]),
        .Q(\Butterfly_out[0]_19 [1]));
  (* DONT_TOUCH *) 
  Arbys__41 \Puf_Gen[0].Chain_Gen[20].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [19]),
        .in1(\ArbOut4[0]_1 [19]),
        .in2(\ArbOut4[0]_1 [19]),
        .in3(\ArbOut3[0]_2 [19]),
        .out1(\ArbOut1[0]_18 [20]),
        .out2(\ArbOut2[0]_17 [20]),
        .sel(Challenge[20]));
  (* DONT_TOUCH *) 
  Arbys__42 \Puf_Gen[0].Chain_Gen[20].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [20]),
        .in1(\ArbOut2[0]_17 [20]),
        .in2(\ArbOut2[0]_17 [20]),
        .in3(\ArbOut1[0]_18 [20]),
        .out1(\ArbOut3[0]_2 [20]),
        .out2(\ArbOut4[0]_1 [20]),
        .sel(\Butterfly_out[0]_19 [20]));
  (* DONT_TOUCH *) 
  Butterfly__21 \Puf_Gen[0].Chain_Gen[20].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [20]),
        .Pre(\ArbOut2[0]_17 [20]),
        .Q(\Butterfly_out[0]_19 [20]));
  (* DONT_TOUCH *) 
  Arbys__43 \Puf_Gen[0].Chain_Gen[21].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [20]),
        .in1(\ArbOut4[0]_1 [20]),
        .in2(\ArbOut4[0]_1 [20]),
        .in3(\ArbOut3[0]_2 [20]),
        .out1(\ArbOut1[0]_18 [21]),
        .out2(\ArbOut2[0]_17 [21]),
        .sel(Challenge[21]));
  (* DONT_TOUCH *) 
  Arbys__44 \Puf_Gen[0].Chain_Gen[21].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [21]),
        .in1(\ArbOut2[0]_17 [21]),
        .in2(\ArbOut2[0]_17 [21]),
        .in3(\ArbOut1[0]_18 [21]),
        .out1(\ArbOut3[0]_2 [21]),
        .out2(\ArbOut4[0]_1 [21]),
        .sel(\Butterfly_out[0]_19 [21]));
  (* DONT_TOUCH *) 
  Butterfly__22 \Puf_Gen[0].Chain_Gen[21].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [21]),
        .Pre(\ArbOut2[0]_17 [21]),
        .Q(\Butterfly_out[0]_19 [21]));
  (* DONT_TOUCH *) 
  Arbys__45 \Puf_Gen[0].Chain_Gen[22].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [21]),
        .in1(\ArbOut4[0]_1 [21]),
        .in2(\ArbOut4[0]_1 [21]),
        .in3(\ArbOut3[0]_2 [21]),
        .out1(\ArbOut1[0]_18 [22]),
        .out2(\ArbOut2[0]_17 [22]),
        .sel(Challenge[22]));
  (* DONT_TOUCH *) 
  Arbys__46 \Puf_Gen[0].Chain_Gen[22].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [22]),
        .in1(\ArbOut2[0]_17 [22]),
        .in2(\ArbOut2[0]_17 [22]),
        .in3(\ArbOut1[0]_18 [22]),
        .out1(\ArbOut3[0]_2 [22]),
        .out2(\ArbOut4[0]_1 [22]),
        .sel(\Butterfly_out[0]_19 [22]));
  (* DONT_TOUCH *) 
  Butterfly__23 \Puf_Gen[0].Chain_Gen[22].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [22]),
        .Pre(\ArbOut2[0]_17 [22]),
        .Q(\Butterfly_out[0]_19 [22]));
  (* DONT_TOUCH *) 
  Arbys__47 \Puf_Gen[0].Chain_Gen[23].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [22]),
        .in1(\ArbOut4[0]_1 [22]),
        .in2(\ArbOut4[0]_1 [22]),
        .in3(\ArbOut3[0]_2 [22]),
        .out1(\ArbOut1[0]_18 [23]),
        .out2(\ArbOut2[0]_17 [23]),
        .sel(Challenge[23]));
  (* DONT_TOUCH *) 
  Arbys__48 \Puf_Gen[0].Chain_Gen[23].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [23]),
        .in1(\ArbOut2[0]_17 [23]),
        .in2(\ArbOut2[0]_17 [23]),
        .in3(\ArbOut1[0]_18 [23]),
        .out1(\ArbOut3[0]_2 [23]),
        .out2(\ArbOut4[0]_1 [23]),
        .sel(\Butterfly_out[0]_19 [23]));
  (* DONT_TOUCH *) 
  Butterfly__24 \Puf_Gen[0].Chain_Gen[23].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [23]),
        .Pre(\ArbOut2[0]_17 [23]),
        .Q(\Butterfly_out[0]_19 [23]));
  (* DONT_TOUCH *) 
  Arbys__49 \Puf_Gen[0].Chain_Gen[24].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [23]),
        .in1(\ArbOut4[0]_1 [23]),
        .in2(\ArbOut4[0]_1 [23]),
        .in3(\ArbOut3[0]_2 [23]),
        .out1(\ArbOut1[0]_18 [24]),
        .out2(\ArbOut2[0]_17 [24]),
        .sel(Challenge[24]));
  (* DONT_TOUCH *) 
  Arbys__50 \Puf_Gen[0].Chain_Gen[24].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [24]),
        .in1(\ArbOut2[0]_17 [24]),
        .in2(\ArbOut2[0]_17 [24]),
        .in3(\ArbOut1[0]_18 [24]),
        .out1(\ArbOut3[0]_2 [24]),
        .out2(\ArbOut4[0]_1 [24]),
        .sel(\Butterfly_out[0]_19 [24]));
  (* DONT_TOUCH *) 
  Butterfly__25 \Puf_Gen[0].Chain_Gen[24].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [24]),
        .Pre(\ArbOut2[0]_17 [24]),
        .Q(\Butterfly_out[0]_19 [24]));
  (* DONT_TOUCH *) 
  Arbys__51 \Puf_Gen[0].Chain_Gen[25].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [24]),
        .in1(\ArbOut4[0]_1 [24]),
        .in2(\ArbOut4[0]_1 [24]),
        .in3(\ArbOut3[0]_2 [24]),
        .out1(\ArbOut1[0]_18 [25]),
        .out2(\ArbOut2[0]_17 [25]),
        .sel(Challenge[25]));
  (* DONT_TOUCH *) 
  Arbys__52 \Puf_Gen[0].Chain_Gen[25].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [25]),
        .in1(\ArbOut2[0]_17 [25]),
        .in2(\ArbOut2[0]_17 [25]),
        .in3(\ArbOut1[0]_18 [25]),
        .out1(\ArbOut3[0]_2 [25]),
        .out2(\ArbOut4[0]_1 [25]),
        .sel(\Butterfly_out[0]_19 [25]));
  (* DONT_TOUCH *) 
  Butterfly__26 \Puf_Gen[0].Chain_Gen[25].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [25]),
        .Pre(\ArbOut2[0]_17 [25]),
        .Q(\Butterfly_out[0]_19 [25]));
  (* DONT_TOUCH *) 
  Arbys__53 \Puf_Gen[0].Chain_Gen[26].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [25]),
        .in1(\ArbOut4[0]_1 [25]),
        .in2(\ArbOut4[0]_1 [25]),
        .in3(\ArbOut3[0]_2 [25]),
        .out1(\ArbOut1[0]_18 [26]),
        .out2(\ArbOut2[0]_17 [26]),
        .sel(Challenge[26]));
  (* DONT_TOUCH *) 
  Arbys__54 \Puf_Gen[0].Chain_Gen[26].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [26]),
        .in1(\ArbOut2[0]_17 [26]),
        .in2(\ArbOut2[0]_17 [26]),
        .in3(\ArbOut1[0]_18 [26]),
        .out1(\ArbOut3[0]_2 [26]),
        .out2(\ArbOut4[0]_1 [26]),
        .sel(\Butterfly_out[0]_19 [26]));
  (* DONT_TOUCH *) 
  Butterfly__27 \Puf_Gen[0].Chain_Gen[26].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [26]),
        .Pre(\ArbOut2[0]_17 [26]),
        .Q(\Butterfly_out[0]_19 [26]));
  (* DONT_TOUCH *) 
  Arbys__55 \Puf_Gen[0].Chain_Gen[27].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [26]),
        .in1(\ArbOut4[0]_1 [26]),
        .in2(\ArbOut4[0]_1 [26]),
        .in3(\ArbOut3[0]_2 [26]),
        .out1(\ArbOut1[0]_18 [27]),
        .out2(\ArbOut2[0]_17 [27]),
        .sel(Challenge[27]));
  (* DONT_TOUCH *) 
  Arbys__56 \Puf_Gen[0].Chain_Gen[27].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [27]),
        .in1(\ArbOut2[0]_17 [27]),
        .in2(\ArbOut2[0]_17 [27]),
        .in3(\ArbOut1[0]_18 [27]),
        .out1(\ArbOut3[0]_2 [27]),
        .out2(\ArbOut4[0]_1 [27]),
        .sel(\Butterfly_out[0]_19 [27]));
  (* DONT_TOUCH *) 
  Butterfly__28 \Puf_Gen[0].Chain_Gen[27].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [27]),
        .Pre(\ArbOut2[0]_17 [27]),
        .Q(\Butterfly_out[0]_19 [27]));
  (* DONT_TOUCH *) 
  Arbys__57 \Puf_Gen[0].Chain_Gen[28].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [27]),
        .in1(\ArbOut4[0]_1 [27]),
        .in2(\ArbOut4[0]_1 [27]),
        .in3(\ArbOut3[0]_2 [27]),
        .out1(\ArbOut1[0]_18 [28]),
        .out2(\ArbOut2[0]_17 [28]),
        .sel(Challenge[28]));
  (* DONT_TOUCH *) 
  Arbys__58 \Puf_Gen[0].Chain_Gen[28].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [28]),
        .in1(\ArbOut2[0]_17 [28]),
        .in2(\ArbOut2[0]_17 [28]),
        .in3(\ArbOut1[0]_18 [28]),
        .out1(\ArbOut3[0]_2 [28]),
        .out2(\ArbOut4[0]_1 [28]),
        .sel(\Butterfly_out[0]_19 [28]));
  (* DONT_TOUCH *) 
  Butterfly__29 \Puf_Gen[0].Chain_Gen[28].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [28]),
        .Pre(\ArbOut2[0]_17 [28]),
        .Q(\Butterfly_out[0]_19 [28]));
  (* DONT_TOUCH *) 
  Arbys__59 \Puf_Gen[0].Chain_Gen[29].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [28]),
        .in1(\ArbOut4[0]_1 [28]),
        .in2(\ArbOut4[0]_1 [28]),
        .in3(\ArbOut3[0]_2 [28]),
        .out1(\ArbOut1[0]_18 [29]),
        .out2(\ArbOut2[0]_17 [29]),
        .sel(Challenge[29]));
  (* DONT_TOUCH *) 
  Arbys__60 \Puf_Gen[0].Chain_Gen[29].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [29]),
        .in1(\ArbOut2[0]_17 [29]),
        .in2(\ArbOut2[0]_17 [29]),
        .in3(\ArbOut1[0]_18 [29]),
        .out1(\ArbOut3[0]_2 [29]),
        .out2(\ArbOut4[0]_1 [29]),
        .sel(\Butterfly_out[0]_19 [29]));
  (* DONT_TOUCH *) 
  Butterfly__30 \Puf_Gen[0].Chain_Gen[29].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [29]),
        .Pre(\ArbOut2[0]_17 [29]),
        .Q(\Butterfly_out[0]_19 [29]));
  (* DONT_TOUCH *) 
  Arbys__5 \Puf_Gen[0].Chain_Gen[2].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [1]),
        .in1(\ArbOut4[0]_1 [1]),
        .in2(\ArbOut4[0]_1 [1]),
        .in3(\ArbOut3[0]_2 [1]),
        .out1(\ArbOut1[0]_18 [2]),
        .out2(\ArbOut2[0]_17 [2]),
        .sel(Challenge[2]));
  (* DONT_TOUCH *) 
  Arbys__6 \Puf_Gen[0].Chain_Gen[2].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [2]),
        .in1(\ArbOut2[0]_17 [2]),
        .in2(\ArbOut2[0]_17 [2]),
        .in3(\ArbOut1[0]_18 [2]),
        .out1(\ArbOut3[0]_2 [2]),
        .out2(\ArbOut4[0]_1 [2]),
        .sel(\Butterfly_out[0]_19 [2]));
  (* DONT_TOUCH *) 
  Butterfly__3 \Puf_Gen[0].Chain_Gen[2].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [2]),
        .Pre(\ArbOut2[0]_17 [2]),
        .Q(\Butterfly_out[0]_19 [2]));
  (* DONT_TOUCH *) 
  Arbys__61 \Puf_Gen[0].Chain_Gen[30].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [29]),
        .in1(\ArbOut4[0]_1 [29]),
        .in2(\ArbOut4[0]_1 [29]),
        .in3(\ArbOut3[0]_2 [29]),
        .out1(\ArbOut1[0]_18 [30]),
        .out2(\ArbOut2[0]_17 [30]),
        .sel(Challenge[30]));
  (* DONT_TOUCH *) 
  Arbys__62 \Puf_Gen[0].Chain_Gen[30].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [30]),
        .in1(\ArbOut2[0]_17 [30]),
        .in2(\ArbOut2[0]_17 [30]),
        .in3(\ArbOut1[0]_18 [30]),
        .out1(\ArbOut3[0]_2 [30]),
        .out2(\ArbOut4[0]_1 [30]),
        .sel(\Butterfly_out[0]_19 [30]));
  (* DONT_TOUCH *) 
  Butterfly__31 \Puf_Gen[0].Chain_Gen[30].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [30]),
        .Pre(\ArbOut2[0]_17 [30]),
        .Q(\Butterfly_out[0]_19 [30]));
  (* DONT_TOUCH *) 
  DFF__3 \Puf_Gen[0].Chain_Gen[31].Last_Stage.DFF_inst 
       (.CLK(\ArbOut3[0]_2 [30]),
        .CLR(1'b0),
        .D(\ArbOut4[0]_1 [30]),
        .Pre(1'b0),
        .Q(Response[0]));
  (* DONT_TOUCH *) 
  Arbys__7 \Puf_Gen[0].Chain_Gen[3].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [2]),
        .in1(\ArbOut4[0]_1 [2]),
        .in2(\ArbOut4[0]_1 [2]),
        .in3(\ArbOut3[0]_2 [2]),
        .out1(\ArbOut1[0]_18 [3]),
        .out2(\ArbOut2[0]_17 [3]),
        .sel(Challenge[3]));
  (* DONT_TOUCH *) 
  Arbys__8 \Puf_Gen[0].Chain_Gen[3].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [3]),
        .in1(\ArbOut2[0]_17 [3]),
        .in2(\ArbOut2[0]_17 [3]),
        .in3(\ArbOut1[0]_18 [3]),
        .out1(\ArbOut3[0]_2 [3]),
        .out2(\ArbOut4[0]_1 [3]),
        .sel(\Butterfly_out[0]_19 [3]));
  (* DONT_TOUCH *) 
  Butterfly__4 \Puf_Gen[0].Chain_Gen[3].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [3]),
        .Pre(\ArbOut2[0]_17 [3]),
        .Q(\Butterfly_out[0]_19 [3]));
  (* DONT_TOUCH *) 
  Arbys__9 \Puf_Gen[0].Chain_Gen[4].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [3]),
        .in1(\ArbOut4[0]_1 [3]),
        .in2(\ArbOut4[0]_1 [3]),
        .in3(\ArbOut3[0]_2 [3]),
        .out1(\ArbOut1[0]_18 [4]),
        .out2(\ArbOut2[0]_17 [4]),
        .sel(Challenge[4]));
  (* DONT_TOUCH *) 
  Arbys__10 \Puf_Gen[0].Chain_Gen[4].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [4]),
        .in1(\ArbOut2[0]_17 [4]),
        .in2(\ArbOut2[0]_17 [4]),
        .in3(\ArbOut1[0]_18 [4]),
        .out1(\ArbOut3[0]_2 [4]),
        .out2(\ArbOut4[0]_1 [4]),
        .sel(\Butterfly_out[0]_19 [4]));
  (* DONT_TOUCH *) 
  Butterfly__5 \Puf_Gen[0].Chain_Gen[4].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [4]),
        .Pre(\ArbOut2[0]_17 [4]),
        .Q(\Butterfly_out[0]_19 [4]));
  (* DONT_TOUCH *) 
  Arbys__11 \Puf_Gen[0].Chain_Gen[5].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [4]),
        .in1(\ArbOut4[0]_1 [4]),
        .in2(\ArbOut4[0]_1 [4]),
        .in3(\ArbOut3[0]_2 [4]),
        .out1(\ArbOut1[0]_18 [5]),
        .out2(\ArbOut2[0]_17 [5]),
        .sel(Challenge[5]));
  (* DONT_TOUCH *) 
  Arbys__12 \Puf_Gen[0].Chain_Gen[5].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [5]),
        .in1(\ArbOut2[0]_17 [5]),
        .in2(\ArbOut2[0]_17 [5]),
        .in3(\ArbOut1[0]_18 [5]),
        .out1(\ArbOut3[0]_2 [5]),
        .out2(\ArbOut4[0]_1 [5]),
        .sel(\Butterfly_out[0]_19 [5]));
  (* DONT_TOUCH *) 
  Butterfly__6 \Puf_Gen[0].Chain_Gen[5].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [5]),
        .Pre(\ArbOut2[0]_17 [5]),
        .Q(\Butterfly_out[0]_19 [5]));
  (* DONT_TOUCH *) 
  Arbys__13 \Puf_Gen[0].Chain_Gen[6].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [5]),
        .in1(\ArbOut4[0]_1 [5]),
        .in2(\ArbOut4[0]_1 [5]),
        .in3(\ArbOut3[0]_2 [5]),
        .out1(\ArbOut1[0]_18 [6]),
        .out2(\ArbOut2[0]_17 [6]),
        .sel(Challenge[6]));
  (* DONT_TOUCH *) 
  Arbys__14 \Puf_Gen[0].Chain_Gen[6].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [6]),
        .in1(\ArbOut2[0]_17 [6]),
        .in2(\ArbOut2[0]_17 [6]),
        .in3(\ArbOut1[0]_18 [6]),
        .out1(\ArbOut3[0]_2 [6]),
        .out2(\ArbOut4[0]_1 [6]),
        .sel(\Butterfly_out[0]_19 [6]));
  (* DONT_TOUCH *) 
  Butterfly__7 \Puf_Gen[0].Chain_Gen[6].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [6]),
        .Pre(\ArbOut2[0]_17 [6]),
        .Q(\Butterfly_out[0]_19 [6]));
  (* DONT_TOUCH *) 
  Arbys__15 \Puf_Gen[0].Chain_Gen[7].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [6]),
        .in1(\ArbOut4[0]_1 [6]),
        .in2(\ArbOut4[0]_1 [6]),
        .in3(\ArbOut3[0]_2 [6]),
        .out1(\ArbOut1[0]_18 [7]),
        .out2(\ArbOut2[0]_17 [7]),
        .sel(Challenge[7]));
  (* DONT_TOUCH *) 
  Arbys__16 \Puf_Gen[0].Chain_Gen[7].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [7]),
        .in1(\ArbOut2[0]_17 [7]),
        .in2(\ArbOut2[0]_17 [7]),
        .in3(\ArbOut1[0]_18 [7]),
        .out1(\ArbOut3[0]_2 [7]),
        .out2(\ArbOut4[0]_1 [7]),
        .sel(\Butterfly_out[0]_19 [7]));
  (* DONT_TOUCH *) 
  Butterfly__8 \Puf_Gen[0].Chain_Gen[7].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [7]),
        .Pre(\ArbOut2[0]_17 [7]),
        .Q(\Butterfly_out[0]_19 [7]));
  (* DONT_TOUCH *) 
  Arbys__17 \Puf_Gen[0].Chain_Gen[8].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [7]),
        .in1(\ArbOut4[0]_1 [7]),
        .in2(\ArbOut4[0]_1 [7]),
        .in3(\ArbOut3[0]_2 [7]),
        .out1(\ArbOut1[0]_18 [8]),
        .out2(\ArbOut2[0]_17 [8]),
        .sel(Challenge[8]));
  (* DONT_TOUCH *) 
  Arbys__18 \Puf_Gen[0].Chain_Gen[8].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [8]),
        .in1(\ArbOut2[0]_17 [8]),
        .in2(\ArbOut2[0]_17 [8]),
        .in3(\ArbOut1[0]_18 [8]),
        .out1(\ArbOut3[0]_2 [8]),
        .out2(\ArbOut4[0]_1 [8]),
        .sel(\Butterfly_out[0]_19 [8]));
  (* DONT_TOUCH *) 
  Butterfly__9 \Puf_Gen[0].Chain_Gen[8].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [8]),
        .Pre(\ArbOut2[0]_17 [8]),
        .Q(\Butterfly_out[0]_19 [8]));
  (* DONT_TOUCH *) 
  Arbys__19 \Puf_Gen[0].Chain_Gen[9].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[0]_2 [8]),
        .in1(\ArbOut4[0]_1 [8]),
        .in2(\ArbOut4[0]_1 [8]),
        .in3(\ArbOut3[0]_2 [8]),
        .out1(\ArbOut1[0]_18 [9]),
        .out2(\ArbOut2[0]_17 [9]),
        .sel(Challenge[9]));
  (* DONT_TOUCH *) 
  Arbys__20 \Puf_Gen[0].Chain_Gen[9].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[0]_18 [9]),
        .in1(\ArbOut2[0]_17 [9]),
        .in2(\ArbOut2[0]_17 [9]),
        .in3(\ArbOut1[0]_18 [9]),
        .out1(\ArbOut3[0]_2 [9]),
        .out2(\ArbOut4[0]_1 [9]),
        .sel(\Butterfly_out[0]_19 [9]));
  (* DONT_TOUCH *) 
  Butterfly__10 \Puf_Gen[0].Chain_Gen[9].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[0]_18 [9]),
        .Pre(\ArbOut2[0]_17 [9]),
        .Q(\Butterfly_out[0]_19 [9]));
  (* DONT_TOUCH *) 
  Arbys__63 \Puf_Gen[1].Chain_Gen[0].First_ChainLink.ArbiterL1_inst 
       (.in0(en_puf),
        .in1(en_puf),
        .in2(en_puf),
        .in3(en_puf),
        .out1(\ArbOut1[1]_21 [0]),
        .out2(\ArbOut2[1]_20 [0]),
        .sel(Challenge[0]));
  (* DONT_TOUCH *) 
  Arbys__64 \Puf_Gen[1].Chain_Gen[0].First_ChainLink.ArbiterL2_inst 
       (.in0(\ArbOut1[1]_21 [0]),
        .in1(\ArbOut2[1]_20 [0]),
        .in2(\ArbOut2[1]_20 [0]),
        .in3(\ArbOut1[1]_21 [0]),
        .out1(\ArbOut3[1]_4 [0]),
        .out2(\ArbOut4[1]_3 [0]),
        .sel(\Butterfly_out[1]_22 [0]));
  (* DONT_TOUCH *) 
  Butterfly__32 \Puf_Gen[1].Chain_Gen[0].First_ChainLink.Butterfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [0]),
        .Pre(\ArbOut2[1]_20 [0]),
        .Q(\Butterfly_out[1]_22 [0]));
  (* DONT_TOUCH *) 
  Arbys__83 \Puf_Gen[1].Chain_Gen[10].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [9]),
        .in1(\ArbOut4[1]_3 [9]),
        .in2(\ArbOut4[1]_3 [9]),
        .in3(\ArbOut3[1]_4 [9]),
        .out1(\ArbOut1[1]_21 [10]),
        .out2(\ArbOut2[1]_20 [10]),
        .sel(Challenge[10]));
  (* DONT_TOUCH *) 
  Arbys__84 \Puf_Gen[1].Chain_Gen[10].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [10]),
        .in1(\ArbOut2[1]_20 [10]),
        .in2(\ArbOut2[1]_20 [10]),
        .in3(\ArbOut1[1]_21 [10]),
        .out1(\ArbOut3[1]_4 [10]),
        .out2(\ArbOut4[1]_3 [10]),
        .sel(\Butterfly_out[1]_22 [10]));
  (* DONT_TOUCH *) 
  Butterfly__42 \Puf_Gen[1].Chain_Gen[10].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [10]),
        .Pre(\ArbOut2[1]_20 [10]),
        .Q(\Butterfly_out[1]_22 [10]));
  (* DONT_TOUCH *) 
  Arbys__85 \Puf_Gen[1].Chain_Gen[11].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [10]),
        .in1(\ArbOut4[1]_3 [10]),
        .in2(\ArbOut4[1]_3 [10]),
        .in3(\ArbOut3[1]_4 [10]),
        .out1(\ArbOut1[1]_21 [11]),
        .out2(\ArbOut2[1]_20 [11]),
        .sel(Challenge[11]));
  (* DONT_TOUCH *) 
  Arbys__86 \Puf_Gen[1].Chain_Gen[11].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [11]),
        .in1(\ArbOut2[1]_20 [11]),
        .in2(\ArbOut2[1]_20 [11]),
        .in3(\ArbOut1[1]_21 [11]),
        .out1(\ArbOut3[1]_4 [11]),
        .out2(\ArbOut4[1]_3 [11]),
        .sel(\Butterfly_out[1]_22 [11]));
  (* DONT_TOUCH *) 
  Butterfly__43 \Puf_Gen[1].Chain_Gen[11].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [11]),
        .Pre(\ArbOut2[1]_20 [11]),
        .Q(\Butterfly_out[1]_22 [11]));
  (* DONT_TOUCH *) 
  Arbys__87 \Puf_Gen[1].Chain_Gen[12].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [11]),
        .in1(\ArbOut4[1]_3 [11]),
        .in2(\ArbOut4[1]_3 [11]),
        .in3(\ArbOut3[1]_4 [11]),
        .out1(\ArbOut1[1]_21 [12]),
        .out2(\ArbOut2[1]_20 [12]),
        .sel(Challenge[12]));
  (* DONT_TOUCH *) 
  Arbys__88 \Puf_Gen[1].Chain_Gen[12].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [12]),
        .in1(\ArbOut2[1]_20 [12]),
        .in2(\ArbOut2[1]_20 [12]),
        .in3(\ArbOut1[1]_21 [12]),
        .out1(\ArbOut3[1]_4 [12]),
        .out2(\ArbOut4[1]_3 [12]),
        .sel(\Butterfly_out[1]_22 [12]));
  (* DONT_TOUCH *) 
  Butterfly__44 \Puf_Gen[1].Chain_Gen[12].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [12]),
        .Pre(\ArbOut2[1]_20 [12]),
        .Q(\Butterfly_out[1]_22 [12]));
  (* DONT_TOUCH *) 
  Arbys__89 \Puf_Gen[1].Chain_Gen[13].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [12]),
        .in1(\ArbOut4[1]_3 [12]),
        .in2(\ArbOut4[1]_3 [12]),
        .in3(\ArbOut3[1]_4 [12]),
        .out1(\ArbOut1[1]_21 [13]),
        .out2(\ArbOut2[1]_20 [13]),
        .sel(Challenge[13]));
  (* DONT_TOUCH *) 
  Arbys__90 \Puf_Gen[1].Chain_Gen[13].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [13]),
        .in1(\ArbOut2[1]_20 [13]),
        .in2(\ArbOut2[1]_20 [13]),
        .in3(\ArbOut1[1]_21 [13]),
        .out1(\ArbOut3[1]_4 [13]),
        .out2(\ArbOut4[1]_3 [13]),
        .sel(\Butterfly_out[1]_22 [13]));
  (* DONT_TOUCH *) 
  Butterfly__45 \Puf_Gen[1].Chain_Gen[13].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [13]),
        .Pre(\ArbOut2[1]_20 [13]),
        .Q(\Butterfly_out[1]_22 [13]));
  (* DONT_TOUCH *) 
  Arbys__91 \Puf_Gen[1].Chain_Gen[14].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [13]),
        .in1(\ArbOut4[1]_3 [13]),
        .in2(\ArbOut4[1]_3 [13]),
        .in3(\ArbOut3[1]_4 [13]),
        .out1(\ArbOut1[1]_21 [14]),
        .out2(\ArbOut2[1]_20 [14]),
        .sel(Challenge[14]));
  (* DONT_TOUCH *) 
  Arbys__92 \Puf_Gen[1].Chain_Gen[14].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [14]),
        .in1(\ArbOut2[1]_20 [14]),
        .in2(\ArbOut2[1]_20 [14]),
        .in3(\ArbOut1[1]_21 [14]),
        .out1(\ArbOut3[1]_4 [14]),
        .out2(\ArbOut4[1]_3 [14]),
        .sel(\Butterfly_out[1]_22 [14]));
  (* DONT_TOUCH *) 
  Butterfly__46 \Puf_Gen[1].Chain_Gen[14].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [14]),
        .Pre(\ArbOut2[1]_20 [14]),
        .Q(\Butterfly_out[1]_22 [14]));
  (* DONT_TOUCH *) 
  Arbys__93 \Puf_Gen[1].Chain_Gen[15].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [14]),
        .in1(\ArbOut4[1]_3 [14]),
        .in2(\ArbOut4[1]_3 [14]),
        .in3(\ArbOut3[1]_4 [14]),
        .out1(\ArbOut1[1]_21 [15]),
        .out2(\ArbOut2[1]_20 [15]),
        .sel(Challenge[15]));
  (* DONT_TOUCH *) 
  Arbys__94 \Puf_Gen[1].Chain_Gen[15].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [15]),
        .in1(\ArbOut2[1]_20 [15]),
        .in2(\ArbOut2[1]_20 [15]),
        .in3(\ArbOut1[1]_21 [15]),
        .out1(\ArbOut3[1]_4 [15]),
        .out2(\ArbOut4[1]_3 [15]),
        .sel(\Butterfly_out[1]_22 [15]));
  (* DONT_TOUCH *) 
  Butterfly__47 \Puf_Gen[1].Chain_Gen[15].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [15]),
        .Pre(\ArbOut2[1]_20 [15]),
        .Q(\Butterfly_out[1]_22 [15]));
  (* DONT_TOUCH *) 
  Arbys__95 \Puf_Gen[1].Chain_Gen[16].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [15]),
        .in1(\ArbOut4[1]_3 [15]),
        .in2(\ArbOut4[1]_3 [15]),
        .in3(\ArbOut3[1]_4 [15]),
        .out1(\ArbOut1[1]_21 [16]),
        .out2(\ArbOut2[1]_20 [16]),
        .sel(Challenge[16]));
  (* DONT_TOUCH *) 
  Arbys__96 \Puf_Gen[1].Chain_Gen[16].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [16]),
        .in1(\ArbOut2[1]_20 [16]),
        .in2(\ArbOut2[1]_20 [16]),
        .in3(\ArbOut1[1]_21 [16]),
        .out1(\ArbOut3[1]_4 [16]),
        .out2(\ArbOut4[1]_3 [16]),
        .sel(\Butterfly_out[1]_22 [16]));
  (* DONT_TOUCH *) 
  Butterfly__48 \Puf_Gen[1].Chain_Gen[16].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [16]),
        .Pre(\ArbOut2[1]_20 [16]),
        .Q(\Butterfly_out[1]_22 [16]));
  (* DONT_TOUCH *) 
  Arbys__97 \Puf_Gen[1].Chain_Gen[17].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [16]),
        .in1(\ArbOut4[1]_3 [16]),
        .in2(\ArbOut4[1]_3 [16]),
        .in3(\ArbOut3[1]_4 [16]),
        .out1(\ArbOut1[1]_21 [17]),
        .out2(\ArbOut2[1]_20 [17]),
        .sel(Challenge[17]));
  (* DONT_TOUCH *) 
  Arbys__98 \Puf_Gen[1].Chain_Gen[17].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [17]),
        .in1(\ArbOut2[1]_20 [17]),
        .in2(\ArbOut2[1]_20 [17]),
        .in3(\ArbOut1[1]_21 [17]),
        .out1(\ArbOut3[1]_4 [17]),
        .out2(\ArbOut4[1]_3 [17]),
        .sel(\Butterfly_out[1]_22 [17]));
  (* DONT_TOUCH *) 
  Butterfly__49 \Puf_Gen[1].Chain_Gen[17].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [17]),
        .Pre(\ArbOut2[1]_20 [17]),
        .Q(\Butterfly_out[1]_22 [17]));
  (* DONT_TOUCH *) 
  Arbys__99 \Puf_Gen[1].Chain_Gen[18].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [17]),
        .in1(\ArbOut4[1]_3 [17]),
        .in2(\ArbOut4[1]_3 [17]),
        .in3(\ArbOut3[1]_4 [17]),
        .out1(\ArbOut1[1]_21 [18]),
        .out2(\ArbOut2[1]_20 [18]),
        .sel(Challenge[18]));
  (* DONT_TOUCH *) 
  Arbys__100 \Puf_Gen[1].Chain_Gen[18].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [18]),
        .in1(\ArbOut2[1]_20 [18]),
        .in2(\ArbOut2[1]_20 [18]),
        .in3(\ArbOut1[1]_21 [18]),
        .out1(\ArbOut3[1]_4 [18]),
        .out2(\ArbOut4[1]_3 [18]),
        .sel(\Butterfly_out[1]_22 [18]));
  (* DONT_TOUCH *) 
  Butterfly__50 \Puf_Gen[1].Chain_Gen[18].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [18]),
        .Pre(\ArbOut2[1]_20 [18]),
        .Q(\Butterfly_out[1]_22 [18]));
  (* DONT_TOUCH *) 
  Arbys__101 \Puf_Gen[1].Chain_Gen[19].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [18]),
        .in1(\ArbOut4[1]_3 [18]),
        .in2(\ArbOut4[1]_3 [18]),
        .in3(\ArbOut3[1]_4 [18]),
        .out1(\ArbOut1[1]_21 [19]),
        .out2(\ArbOut2[1]_20 [19]),
        .sel(Challenge[19]));
  (* DONT_TOUCH *) 
  Arbys__102 \Puf_Gen[1].Chain_Gen[19].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [19]),
        .in1(\ArbOut2[1]_20 [19]),
        .in2(\ArbOut2[1]_20 [19]),
        .in3(\ArbOut1[1]_21 [19]),
        .out1(\ArbOut3[1]_4 [19]),
        .out2(\ArbOut4[1]_3 [19]),
        .sel(\Butterfly_out[1]_22 [19]));
  (* DONT_TOUCH *) 
  Butterfly__51 \Puf_Gen[1].Chain_Gen[19].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [19]),
        .Pre(\ArbOut2[1]_20 [19]),
        .Q(\Butterfly_out[1]_22 [19]));
  (* DONT_TOUCH *) 
  Arbys__65 \Puf_Gen[1].Chain_Gen[1].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [0]),
        .in1(\ArbOut4[1]_3 [0]),
        .in2(\ArbOut4[1]_3 [0]),
        .in3(\ArbOut3[1]_4 [0]),
        .out1(\ArbOut1[1]_21 [1]),
        .out2(\ArbOut2[1]_20 [1]),
        .sel(Challenge[1]));
  (* DONT_TOUCH *) 
  Arbys__66 \Puf_Gen[1].Chain_Gen[1].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [1]),
        .in1(\ArbOut2[1]_20 [1]),
        .in2(\ArbOut2[1]_20 [1]),
        .in3(\ArbOut1[1]_21 [1]),
        .out1(\ArbOut3[1]_4 [1]),
        .out2(\ArbOut4[1]_3 [1]),
        .sel(\Butterfly_out[1]_22 [1]));
  (* DONT_TOUCH *) 
  Butterfly__33 \Puf_Gen[1].Chain_Gen[1].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [1]),
        .Pre(\ArbOut2[1]_20 [1]),
        .Q(\Butterfly_out[1]_22 [1]));
  (* DONT_TOUCH *) 
  Arbys__103 \Puf_Gen[1].Chain_Gen[20].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [19]),
        .in1(\ArbOut4[1]_3 [19]),
        .in2(\ArbOut4[1]_3 [19]),
        .in3(\ArbOut3[1]_4 [19]),
        .out1(\ArbOut1[1]_21 [20]),
        .out2(\ArbOut2[1]_20 [20]),
        .sel(Challenge[20]));
  (* DONT_TOUCH *) 
  Arbys__104 \Puf_Gen[1].Chain_Gen[20].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [20]),
        .in1(\ArbOut2[1]_20 [20]),
        .in2(\ArbOut2[1]_20 [20]),
        .in3(\ArbOut1[1]_21 [20]),
        .out1(\ArbOut3[1]_4 [20]),
        .out2(\ArbOut4[1]_3 [20]),
        .sel(\Butterfly_out[1]_22 [20]));
  (* DONT_TOUCH *) 
  Butterfly__52 \Puf_Gen[1].Chain_Gen[20].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [20]),
        .Pre(\ArbOut2[1]_20 [20]),
        .Q(\Butterfly_out[1]_22 [20]));
  (* DONT_TOUCH *) 
  Arbys__105 \Puf_Gen[1].Chain_Gen[21].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [20]),
        .in1(\ArbOut4[1]_3 [20]),
        .in2(\ArbOut4[1]_3 [20]),
        .in3(\ArbOut3[1]_4 [20]),
        .out1(\ArbOut1[1]_21 [21]),
        .out2(\ArbOut2[1]_20 [21]),
        .sel(Challenge[21]));
  (* DONT_TOUCH *) 
  Arbys__106 \Puf_Gen[1].Chain_Gen[21].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [21]),
        .in1(\ArbOut2[1]_20 [21]),
        .in2(\ArbOut2[1]_20 [21]),
        .in3(\ArbOut1[1]_21 [21]),
        .out1(\ArbOut3[1]_4 [21]),
        .out2(\ArbOut4[1]_3 [21]),
        .sel(\Butterfly_out[1]_22 [21]));
  (* DONT_TOUCH *) 
  Butterfly__53 \Puf_Gen[1].Chain_Gen[21].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [21]),
        .Pre(\ArbOut2[1]_20 [21]),
        .Q(\Butterfly_out[1]_22 [21]));
  (* DONT_TOUCH *) 
  Arbys__107 \Puf_Gen[1].Chain_Gen[22].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [21]),
        .in1(\ArbOut4[1]_3 [21]),
        .in2(\ArbOut4[1]_3 [21]),
        .in3(\ArbOut3[1]_4 [21]),
        .out1(\ArbOut1[1]_21 [22]),
        .out2(\ArbOut2[1]_20 [22]),
        .sel(Challenge[22]));
  (* DONT_TOUCH *) 
  Arbys__108 \Puf_Gen[1].Chain_Gen[22].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [22]),
        .in1(\ArbOut2[1]_20 [22]),
        .in2(\ArbOut2[1]_20 [22]),
        .in3(\ArbOut1[1]_21 [22]),
        .out1(\ArbOut3[1]_4 [22]),
        .out2(\ArbOut4[1]_3 [22]),
        .sel(\Butterfly_out[1]_22 [22]));
  (* DONT_TOUCH *) 
  Butterfly__54 \Puf_Gen[1].Chain_Gen[22].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [22]),
        .Pre(\ArbOut2[1]_20 [22]),
        .Q(\Butterfly_out[1]_22 [22]));
  (* DONT_TOUCH *) 
  Arbys__109 \Puf_Gen[1].Chain_Gen[23].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [22]),
        .in1(\ArbOut4[1]_3 [22]),
        .in2(\ArbOut4[1]_3 [22]),
        .in3(\ArbOut3[1]_4 [22]),
        .out1(\ArbOut1[1]_21 [23]),
        .out2(\ArbOut2[1]_20 [23]),
        .sel(Challenge[23]));
  (* DONT_TOUCH *) 
  Arbys__110 \Puf_Gen[1].Chain_Gen[23].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [23]),
        .in1(\ArbOut2[1]_20 [23]),
        .in2(\ArbOut2[1]_20 [23]),
        .in3(\ArbOut1[1]_21 [23]),
        .out1(\ArbOut3[1]_4 [23]),
        .out2(\ArbOut4[1]_3 [23]),
        .sel(\Butterfly_out[1]_22 [23]));
  (* DONT_TOUCH *) 
  Butterfly__55 \Puf_Gen[1].Chain_Gen[23].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [23]),
        .Pre(\ArbOut2[1]_20 [23]),
        .Q(\Butterfly_out[1]_22 [23]));
  (* DONT_TOUCH *) 
  Arbys__111 \Puf_Gen[1].Chain_Gen[24].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [23]),
        .in1(\ArbOut4[1]_3 [23]),
        .in2(\ArbOut4[1]_3 [23]),
        .in3(\ArbOut3[1]_4 [23]),
        .out1(\ArbOut1[1]_21 [24]),
        .out2(\ArbOut2[1]_20 [24]),
        .sel(Challenge[24]));
  (* DONT_TOUCH *) 
  Arbys__112 \Puf_Gen[1].Chain_Gen[24].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [24]),
        .in1(\ArbOut2[1]_20 [24]),
        .in2(\ArbOut2[1]_20 [24]),
        .in3(\ArbOut1[1]_21 [24]),
        .out1(\ArbOut3[1]_4 [24]),
        .out2(\ArbOut4[1]_3 [24]),
        .sel(\Butterfly_out[1]_22 [24]));
  (* DONT_TOUCH *) 
  Butterfly__56 \Puf_Gen[1].Chain_Gen[24].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [24]),
        .Pre(\ArbOut2[1]_20 [24]),
        .Q(\Butterfly_out[1]_22 [24]));
  (* DONT_TOUCH *) 
  Arbys__113 \Puf_Gen[1].Chain_Gen[25].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [24]),
        .in1(\ArbOut4[1]_3 [24]),
        .in2(\ArbOut4[1]_3 [24]),
        .in3(\ArbOut3[1]_4 [24]),
        .out1(\ArbOut1[1]_21 [25]),
        .out2(\ArbOut2[1]_20 [25]),
        .sel(Challenge[25]));
  (* DONT_TOUCH *) 
  Arbys__114 \Puf_Gen[1].Chain_Gen[25].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [25]),
        .in1(\ArbOut2[1]_20 [25]),
        .in2(\ArbOut2[1]_20 [25]),
        .in3(\ArbOut1[1]_21 [25]),
        .out1(\ArbOut3[1]_4 [25]),
        .out2(\ArbOut4[1]_3 [25]),
        .sel(\Butterfly_out[1]_22 [25]));
  (* DONT_TOUCH *) 
  Butterfly__57 \Puf_Gen[1].Chain_Gen[25].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [25]),
        .Pre(\ArbOut2[1]_20 [25]),
        .Q(\Butterfly_out[1]_22 [25]));
  (* DONT_TOUCH *) 
  Arbys__115 \Puf_Gen[1].Chain_Gen[26].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [25]),
        .in1(\ArbOut4[1]_3 [25]),
        .in2(\ArbOut4[1]_3 [25]),
        .in3(\ArbOut3[1]_4 [25]),
        .out1(\ArbOut1[1]_21 [26]),
        .out2(\ArbOut2[1]_20 [26]),
        .sel(Challenge[26]));
  (* DONT_TOUCH *) 
  Arbys__116 \Puf_Gen[1].Chain_Gen[26].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [26]),
        .in1(\ArbOut2[1]_20 [26]),
        .in2(\ArbOut2[1]_20 [26]),
        .in3(\ArbOut1[1]_21 [26]),
        .out1(\ArbOut3[1]_4 [26]),
        .out2(\ArbOut4[1]_3 [26]),
        .sel(\Butterfly_out[1]_22 [26]));
  (* DONT_TOUCH *) 
  Butterfly__58 \Puf_Gen[1].Chain_Gen[26].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [26]),
        .Pre(\ArbOut2[1]_20 [26]),
        .Q(\Butterfly_out[1]_22 [26]));
  (* DONT_TOUCH *) 
  Arbys__117 \Puf_Gen[1].Chain_Gen[27].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [26]),
        .in1(\ArbOut4[1]_3 [26]),
        .in2(\ArbOut4[1]_3 [26]),
        .in3(\ArbOut3[1]_4 [26]),
        .out1(\ArbOut1[1]_21 [27]),
        .out2(\ArbOut2[1]_20 [27]),
        .sel(Challenge[27]));
  (* DONT_TOUCH *) 
  Arbys__118 \Puf_Gen[1].Chain_Gen[27].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [27]),
        .in1(\ArbOut2[1]_20 [27]),
        .in2(\ArbOut2[1]_20 [27]),
        .in3(\ArbOut1[1]_21 [27]),
        .out1(\ArbOut3[1]_4 [27]),
        .out2(\ArbOut4[1]_3 [27]),
        .sel(\Butterfly_out[1]_22 [27]));
  (* DONT_TOUCH *) 
  Butterfly__59 \Puf_Gen[1].Chain_Gen[27].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [27]),
        .Pre(\ArbOut2[1]_20 [27]),
        .Q(\Butterfly_out[1]_22 [27]));
  (* DONT_TOUCH *) 
  Arbys__119 \Puf_Gen[1].Chain_Gen[28].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [27]),
        .in1(\ArbOut4[1]_3 [27]),
        .in2(\ArbOut4[1]_3 [27]),
        .in3(\ArbOut3[1]_4 [27]),
        .out1(\ArbOut1[1]_21 [28]),
        .out2(\ArbOut2[1]_20 [28]),
        .sel(Challenge[28]));
  (* DONT_TOUCH *) 
  Arbys__120 \Puf_Gen[1].Chain_Gen[28].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [28]),
        .in1(\ArbOut2[1]_20 [28]),
        .in2(\ArbOut2[1]_20 [28]),
        .in3(\ArbOut1[1]_21 [28]),
        .out1(\ArbOut3[1]_4 [28]),
        .out2(\ArbOut4[1]_3 [28]),
        .sel(\Butterfly_out[1]_22 [28]));
  (* DONT_TOUCH *) 
  Butterfly__60 \Puf_Gen[1].Chain_Gen[28].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [28]),
        .Pre(\ArbOut2[1]_20 [28]),
        .Q(\Butterfly_out[1]_22 [28]));
  (* DONT_TOUCH *) 
  Arbys__121 \Puf_Gen[1].Chain_Gen[29].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [28]),
        .in1(\ArbOut4[1]_3 [28]),
        .in2(\ArbOut4[1]_3 [28]),
        .in3(\ArbOut3[1]_4 [28]),
        .out1(\ArbOut1[1]_21 [29]),
        .out2(\ArbOut2[1]_20 [29]),
        .sel(Challenge[29]));
  (* DONT_TOUCH *) 
  Arbys__122 \Puf_Gen[1].Chain_Gen[29].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [29]),
        .in1(\ArbOut2[1]_20 [29]),
        .in2(\ArbOut2[1]_20 [29]),
        .in3(\ArbOut1[1]_21 [29]),
        .out1(\ArbOut3[1]_4 [29]),
        .out2(\ArbOut4[1]_3 [29]),
        .sel(\Butterfly_out[1]_22 [29]));
  (* DONT_TOUCH *) 
  Butterfly__61 \Puf_Gen[1].Chain_Gen[29].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [29]),
        .Pre(\ArbOut2[1]_20 [29]),
        .Q(\Butterfly_out[1]_22 [29]));
  (* DONT_TOUCH *) 
  Arbys__67 \Puf_Gen[1].Chain_Gen[2].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [1]),
        .in1(\ArbOut4[1]_3 [1]),
        .in2(\ArbOut4[1]_3 [1]),
        .in3(\ArbOut3[1]_4 [1]),
        .out1(\ArbOut1[1]_21 [2]),
        .out2(\ArbOut2[1]_20 [2]),
        .sel(Challenge[2]));
  (* DONT_TOUCH *) 
  Arbys__68 \Puf_Gen[1].Chain_Gen[2].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [2]),
        .in1(\ArbOut2[1]_20 [2]),
        .in2(\ArbOut2[1]_20 [2]),
        .in3(\ArbOut1[1]_21 [2]),
        .out1(\ArbOut3[1]_4 [2]),
        .out2(\ArbOut4[1]_3 [2]),
        .sel(\Butterfly_out[1]_22 [2]));
  (* DONT_TOUCH *) 
  Butterfly__34 \Puf_Gen[1].Chain_Gen[2].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [2]),
        .Pre(\ArbOut2[1]_20 [2]),
        .Q(\Butterfly_out[1]_22 [2]));
  (* DONT_TOUCH *) 
  Arbys__123 \Puf_Gen[1].Chain_Gen[30].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [29]),
        .in1(\ArbOut4[1]_3 [29]),
        .in2(\ArbOut4[1]_3 [29]),
        .in3(\ArbOut3[1]_4 [29]),
        .out1(\ArbOut1[1]_21 [30]),
        .out2(\ArbOut2[1]_20 [30]),
        .sel(Challenge[30]));
  (* DONT_TOUCH *) 
  Arbys__124 \Puf_Gen[1].Chain_Gen[30].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [30]),
        .in1(\ArbOut2[1]_20 [30]),
        .in2(\ArbOut2[1]_20 [30]),
        .in3(\ArbOut1[1]_21 [30]),
        .out1(\ArbOut3[1]_4 [30]),
        .out2(\ArbOut4[1]_3 [30]),
        .sel(\Butterfly_out[1]_22 [30]));
  (* DONT_TOUCH *) 
  Butterfly__62 \Puf_Gen[1].Chain_Gen[30].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [30]),
        .Pre(\ArbOut2[1]_20 [30]),
        .Q(\Butterfly_out[1]_22 [30]));
  (* DONT_TOUCH *) 
  DFF__4 \Puf_Gen[1].Chain_Gen[31].Last_Stage.DFF_inst 
       (.CLK(\ArbOut3[1]_4 [30]),
        .CLR(1'b0),
        .D(\ArbOut4[1]_3 [30]),
        .Pre(1'b0),
        .Q(Response[1]));
  (* DONT_TOUCH *) 
  Arbys__69 \Puf_Gen[1].Chain_Gen[3].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [2]),
        .in1(\ArbOut4[1]_3 [2]),
        .in2(\ArbOut4[1]_3 [2]),
        .in3(\ArbOut3[1]_4 [2]),
        .out1(\ArbOut1[1]_21 [3]),
        .out2(\ArbOut2[1]_20 [3]),
        .sel(Challenge[3]));
  (* DONT_TOUCH *) 
  Arbys__70 \Puf_Gen[1].Chain_Gen[3].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [3]),
        .in1(\ArbOut2[1]_20 [3]),
        .in2(\ArbOut2[1]_20 [3]),
        .in3(\ArbOut1[1]_21 [3]),
        .out1(\ArbOut3[1]_4 [3]),
        .out2(\ArbOut4[1]_3 [3]),
        .sel(\Butterfly_out[1]_22 [3]));
  (* DONT_TOUCH *) 
  Butterfly__35 \Puf_Gen[1].Chain_Gen[3].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [3]),
        .Pre(\ArbOut2[1]_20 [3]),
        .Q(\Butterfly_out[1]_22 [3]));
  (* DONT_TOUCH *) 
  Arbys__71 \Puf_Gen[1].Chain_Gen[4].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [3]),
        .in1(\ArbOut4[1]_3 [3]),
        .in2(\ArbOut4[1]_3 [3]),
        .in3(\ArbOut3[1]_4 [3]),
        .out1(\ArbOut1[1]_21 [4]),
        .out2(\ArbOut2[1]_20 [4]),
        .sel(Challenge[4]));
  (* DONT_TOUCH *) 
  Arbys__72 \Puf_Gen[1].Chain_Gen[4].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [4]),
        .in1(\ArbOut2[1]_20 [4]),
        .in2(\ArbOut2[1]_20 [4]),
        .in3(\ArbOut1[1]_21 [4]),
        .out1(\ArbOut3[1]_4 [4]),
        .out2(\ArbOut4[1]_3 [4]),
        .sel(\Butterfly_out[1]_22 [4]));
  (* DONT_TOUCH *) 
  Butterfly__36 \Puf_Gen[1].Chain_Gen[4].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [4]),
        .Pre(\ArbOut2[1]_20 [4]),
        .Q(\Butterfly_out[1]_22 [4]));
  (* DONT_TOUCH *) 
  Arbys__73 \Puf_Gen[1].Chain_Gen[5].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [4]),
        .in1(\ArbOut4[1]_3 [4]),
        .in2(\ArbOut4[1]_3 [4]),
        .in3(\ArbOut3[1]_4 [4]),
        .out1(\ArbOut1[1]_21 [5]),
        .out2(\ArbOut2[1]_20 [5]),
        .sel(Challenge[5]));
  (* DONT_TOUCH *) 
  Arbys__74 \Puf_Gen[1].Chain_Gen[5].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [5]),
        .in1(\ArbOut2[1]_20 [5]),
        .in2(\ArbOut2[1]_20 [5]),
        .in3(\ArbOut1[1]_21 [5]),
        .out1(\ArbOut3[1]_4 [5]),
        .out2(\ArbOut4[1]_3 [5]),
        .sel(\Butterfly_out[1]_22 [5]));
  (* DONT_TOUCH *) 
  Butterfly__37 \Puf_Gen[1].Chain_Gen[5].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [5]),
        .Pre(\ArbOut2[1]_20 [5]),
        .Q(\Butterfly_out[1]_22 [5]));
  (* DONT_TOUCH *) 
  Arbys__75 \Puf_Gen[1].Chain_Gen[6].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [5]),
        .in1(\ArbOut4[1]_3 [5]),
        .in2(\ArbOut4[1]_3 [5]),
        .in3(\ArbOut3[1]_4 [5]),
        .out1(\ArbOut1[1]_21 [6]),
        .out2(\ArbOut2[1]_20 [6]),
        .sel(Challenge[6]));
  (* DONT_TOUCH *) 
  Arbys__76 \Puf_Gen[1].Chain_Gen[6].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [6]),
        .in1(\ArbOut2[1]_20 [6]),
        .in2(\ArbOut2[1]_20 [6]),
        .in3(\ArbOut1[1]_21 [6]),
        .out1(\ArbOut3[1]_4 [6]),
        .out2(\ArbOut4[1]_3 [6]),
        .sel(\Butterfly_out[1]_22 [6]));
  (* DONT_TOUCH *) 
  Butterfly__38 \Puf_Gen[1].Chain_Gen[6].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [6]),
        .Pre(\ArbOut2[1]_20 [6]),
        .Q(\Butterfly_out[1]_22 [6]));
  (* DONT_TOUCH *) 
  Arbys__77 \Puf_Gen[1].Chain_Gen[7].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [6]),
        .in1(\ArbOut4[1]_3 [6]),
        .in2(\ArbOut4[1]_3 [6]),
        .in3(\ArbOut3[1]_4 [6]),
        .out1(\ArbOut1[1]_21 [7]),
        .out2(\ArbOut2[1]_20 [7]),
        .sel(Challenge[7]));
  (* DONT_TOUCH *) 
  Arbys__78 \Puf_Gen[1].Chain_Gen[7].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [7]),
        .in1(\ArbOut2[1]_20 [7]),
        .in2(\ArbOut2[1]_20 [7]),
        .in3(\ArbOut1[1]_21 [7]),
        .out1(\ArbOut3[1]_4 [7]),
        .out2(\ArbOut4[1]_3 [7]),
        .sel(\Butterfly_out[1]_22 [7]));
  (* DONT_TOUCH *) 
  Butterfly__39 \Puf_Gen[1].Chain_Gen[7].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [7]),
        .Pre(\ArbOut2[1]_20 [7]),
        .Q(\Butterfly_out[1]_22 [7]));
  (* DONT_TOUCH *) 
  Arbys__79 \Puf_Gen[1].Chain_Gen[8].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [7]),
        .in1(\ArbOut4[1]_3 [7]),
        .in2(\ArbOut4[1]_3 [7]),
        .in3(\ArbOut3[1]_4 [7]),
        .out1(\ArbOut1[1]_21 [8]),
        .out2(\ArbOut2[1]_20 [8]),
        .sel(Challenge[8]));
  (* DONT_TOUCH *) 
  Arbys__80 \Puf_Gen[1].Chain_Gen[8].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [8]),
        .in1(\ArbOut2[1]_20 [8]),
        .in2(\ArbOut2[1]_20 [8]),
        .in3(\ArbOut1[1]_21 [8]),
        .out1(\ArbOut3[1]_4 [8]),
        .out2(\ArbOut4[1]_3 [8]),
        .sel(\Butterfly_out[1]_22 [8]));
  (* DONT_TOUCH *) 
  Butterfly__40 \Puf_Gen[1].Chain_Gen[8].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [8]),
        .Pre(\ArbOut2[1]_20 [8]),
        .Q(\Butterfly_out[1]_22 [8]));
  (* DONT_TOUCH *) 
  Arbys__81 \Puf_Gen[1].Chain_Gen[9].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[1]_4 [8]),
        .in1(\ArbOut4[1]_3 [8]),
        .in2(\ArbOut4[1]_3 [8]),
        .in3(\ArbOut3[1]_4 [8]),
        .out1(\ArbOut1[1]_21 [9]),
        .out2(\ArbOut2[1]_20 [9]),
        .sel(Challenge[9]));
  (* DONT_TOUCH *) 
  Arbys__82 \Puf_Gen[1].Chain_Gen[9].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[1]_21 [9]),
        .in1(\ArbOut2[1]_20 [9]),
        .in2(\ArbOut2[1]_20 [9]),
        .in3(\ArbOut1[1]_21 [9]),
        .out1(\ArbOut3[1]_4 [9]),
        .out2(\ArbOut4[1]_3 [9]),
        .sel(\Butterfly_out[1]_22 [9]));
  (* DONT_TOUCH *) 
  Butterfly__41 \Puf_Gen[1].Chain_Gen[9].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[1]_21 [9]),
        .Pre(\ArbOut2[1]_20 [9]),
        .Q(\Butterfly_out[1]_22 [9]));
  (* DONT_TOUCH *) 
  Arbys__125 \Puf_Gen[2].Chain_Gen[0].First_ChainLink.ArbiterL1_inst 
       (.in0(en_puf),
        .in1(en_puf),
        .in2(en_puf),
        .in3(en_puf),
        .out1(\ArbOut1[2]_24 [0]),
        .out2(\ArbOut2[2]_23 [0]),
        .sel(Challenge[0]));
  (* DONT_TOUCH *) 
  Arbys__126 \Puf_Gen[2].Chain_Gen[0].First_ChainLink.ArbiterL2_inst 
       (.in0(\ArbOut1[2]_24 [0]),
        .in1(\ArbOut2[2]_23 [0]),
        .in2(\ArbOut2[2]_23 [0]),
        .in3(\ArbOut1[2]_24 [0]),
        .out1(\ArbOut3[2]_6 [0]),
        .out2(\ArbOut4[2]_5 [0]),
        .sel(\Butterfly_out[2]_25 [0]));
  (* DONT_TOUCH *) 
  Butterfly__63 \Puf_Gen[2].Chain_Gen[0].First_ChainLink.Butterfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [0]),
        .Pre(\ArbOut2[2]_23 [0]),
        .Q(\Butterfly_out[2]_25 [0]));
  (* DONT_TOUCH *) 
  Arbys__145 \Puf_Gen[2].Chain_Gen[10].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [9]),
        .in1(\ArbOut4[2]_5 [9]),
        .in2(\ArbOut4[2]_5 [9]),
        .in3(\ArbOut3[2]_6 [9]),
        .out1(\ArbOut1[2]_24 [10]),
        .out2(\ArbOut2[2]_23 [10]),
        .sel(Challenge[10]));
  (* DONT_TOUCH *) 
  Arbys__146 \Puf_Gen[2].Chain_Gen[10].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [10]),
        .in1(\ArbOut2[2]_23 [10]),
        .in2(\ArbOut2[2]_23 [10]),
        .in3(\ArbOut1[2]_24 [10]),
        .out1(\ArbOut3[2]_6 [10]),
        .out2(\ArbOut4[2]_5 [10]),
        .sel(\Butterfly_out[2]_25 [10]));
  (* DONT_TOUCH *) 
  Butterfly__73 \Puf_Gen[2].Chain_Gen[10].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [10]),
        .Pre(\ArbOut2[2]_23 [10]),
        .Q(\Butterfly_out[2]_25 [10]));
  (* DONT_TOUCH *) 
  Arbys__147 \Puf_Gen[2].Chain_Gen[11].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [10]),
        .in1(\ArbOut4[2]_5 [10]),
        .in2(\ArbOut4[2]_5 [10]),
        .in3(\ArbOut3[2]_6 [10]),
        .out1(\ArbOut1[2]_24 [11]),
        .out2(\ArbOut2[2]_23 [11]),
        .sel(Challenge[11]));
  (* DONT_TOUCH *) 
  Arbys__148 \Puf_Gen[2].Chain_Gen[11].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [11]),
        .in1(\ArbOut2[2]_23 [11]),
        .in2(\ArbOut2[2]_23 [11]),
        .in3(\ArbOut1[2]_24 [11]),
        .out1(\ArbOut3[2]_6 [11]),
        .out2(\ArbOut4[2]_5 [11]),
        .sel(\Butterfly_out[2]_25 [11]));
  (* DONT_TOUCH *) 
  Butterfly__74 \Puf_Gen[2].Chain_Gen[11].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [11]),
        .Pre(\ArbOut2[2]_23 [11]),
        .Q(\Butterfly_out[2]_25 [11]));
  (* DONT_TOUCH *) 
  Arbys__149 \Puf_Gen[2].Chain_Gen[12].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [11]),
        .in1(\ArbOut4[2]_5 [11]),
        .in2(\ArbOut4[2]_5 [11]),
        .in3(\ArbOut3[2]_6 [11]),
        .out1(\ArbOut1[2]_24 [12]),
        .out2(\ArbOut2[2]_23 [12]),
        .sel(Challenge[12]));
  (* DONT_TOUCH *) 
  Arbys__150 \Puf_Gen[2].Chain_Gen[12].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [12]),
        .in1(\ArbOut2[2]_23 [12]),
        .in2(\ArbOut2[2]_23 [12]),
        .in3(\ArbOut1[2]_24 [12]),
        .out1(\ArbOut3[2]_6 [12]),
        .out2(\ArbOut4[2]_5 [12]),
        .sel(\Butterfly_out[2]_25 [12]));
  (* DONT_TOUCH *) 
  Butterfly__75 \Puf_Gen[2].Chain_Gen[12].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [12]),
        .Pre(\ArbOut2[2]_23 [12]),
        .Q(\Butterfly_out[2]_25 [12]));
  (* DONT_TOUCH *) 
  Arbys__151 \Puf_Gen[2].Chain_Gen[13].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [12]),
        .in1(\ArbOut4[2]_5 [12]),
        .in2(\ArbOut4[2]_5 [12]),
        .in3(\ArbOut3[2]_6 [12]),
        .out1(\ArbOut1[2]_24 [13]),
        .out2(\ArbOut2[2]_23 [13]),
        .sel(Challenge[13]));
  (* DONT_TOUCH *) 
  Arbys__152 \Puf_Gen[2].Chain_Gen[13].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [13]),
        .in1(\ArbOut2[2]_23 [13]),
        .in2(\ArbOut2[2]_23 [13]),
        .in3(\ArbOut1[2]_24 [13]),
        .out1(\ArbOut3[2]_6 [13]),
        .out2(\ArbOut4[2]_5 [13]),
        .sel(\Butterfly_out[2]_25 [13]));
  (* DONT_TOUCH *) 
  Butterfly__76 \Puf_Gen[2].Chain_Gen[13].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [13]),
        .Pre(\ArbOut2[2]_23 [13]),
        .Q(\Butterfly_out[2]_25 [13]));
  (* DONT_TOUCH *) 
  Arbys__153 \Puf_Gen[2].Chain_Gen[14].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [13]),
        .in1(\ArbOut4[2]_5 [13]),
        .in2(\ArbOut4[2]_5 [13]),
        .in3(\ArbOut3[2]_6 [13]),
        .out1(\ArbOut1[2]_24 [14]),
        .out2(\ArbOut2[2]_23 [14]),
        .sel(Challenge[14]));
  (* DONT_TOUCH *) 
  Arbys__154 \Puf_Gen[2].Chain_Gen[14].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [14]),
        .in1(\ArbOut2[2]_23 [14]),
        .in2(\ArbOut2[2]_23 [14]),
        .in3(\ArbOut1[2]_24 [14]),
        .out1(\ArbOut3[2]_6 [14]),
        .out2(\ArbOut4[2]_5 [14]),
        .sel(\Butterfly_out[2]_25 [14]));
  (* DONT_TOUCH *) 
  Butterfly__77 \Puf_Gen[2].Chain_Gen[14].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [14]),
        .Pre(\ArbOut2[2]_23 [14]),
        .Q(\Butterfly_out[2]_25 [14]));
  (* DONT_TOUCH *) 
  Arbys__155 \Puf_Gen[2].Chain_Gen[15].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [14]),
        .in1(\ArbOut4[2]_5 [14]),
        .in2(\ArbOut4[2]_5 [14]),
        .in3(\ArbOut3[2]_6 [14]),
        .out1(\ArbOut1[2]_24 [15]),
        .out2(\ArbOut2[2]_23 [15]),
        .sel(Challenge[15]));
  (* DONT_TOUCH *) 
  Arbys__156 \Puf_Gen[2].Chain_Gen[15].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [15]),
        .in1(\ArbOut2[2]_23 [15]),
        .in2(\ArbOut2[2]_23 [15]),
        .in3(\ArbOut1[2]_24 [15]),
        .out1(\ArbOut3[2]_6 [15]),
        .out2(\ArbOut4[2]_5 [15]),
        .sel(\Butterfly_out[2]_25 [15]));
  (* DONT_TOUCH *) 
  Butterfly__78 \Puf_Gen[2].Chain_Gen[15].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [15]),
        .Pre(\ArbOut2[2]_23 [15]),
        .Q(\Butterfly_out[2]_25 [15]));
  (* DONT_TOUCH *) 
  Arbys__157 \Puf_Gen[2].Chain_Gen[16].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [15]),
        .in1(\ArbOut4[2]_5 [15]),
        .in2(\ArbOut4[2]_5 [15]),
        .in3(\ArbOut3[2]_6 [15]),
        .out1(\ArbOut1[2]_24 [16]),
        .out2(\ArbOut2[2]_23 [16]),
        .sel(Challenge[16]));
  (* DONT_TOUCH *) 
  Arbys__158 \Puf_Gen[2].Chain_Gen[16].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [16]),
        .in1(\ArbOut2[2]_23 [16]),
        .in2(\ArbOut2[2]_23 [16]),
        .in3(\ArbOut1[2]_24 [16]),
        .out1(\ArbOut3[2]_6 [16]),
        .out2(\ArbOut4[2]_5 [16]),
        .sel(\Butterfly_out[2]_25 [16]));
  (* DONT_TOUCH *) 
  Butterfly__79 \Puf_Gen[2].Chain_Gen[16].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [16]),
        .Pre(\ArbOut2[2]_23 [16]),
        .Q(\Butterfly_out[2]_25 [16]));
  (* DONT_TOUCH *) 
  Arbys__159 \Puf_Gen[2].Chain_Gen[17].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [16]),
        .in1(\ArbOut4[2]_5 [16]),
        .in2(\ArbOut4[2]_5 [16]),
        .in3(\ArbOut3[2]_6 [16]),
        .out1(\ArbOut1[2]_24 [17]),
        .out2(\ArbOut2[2]_23 [17]),
        .sel(Challenge[17]));
  (* DONT_TOUCH *) 
  Arbys__160 \Puf_Gen[2].Chain_Gen[17].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [17]),
        .in1(\ArbOut2[2]_23 [17]),
        .in2(\ArbOut2[2]_23 [17]),
        .in3(\ArbOut1[2]_24 [17]),
        .out1(\ArbOut3[2]_6 [17]),
        .out2(\ArbOut4[2]_5 [17]),
        .sel(\Butterfly_out[2]_25 [17]));
  (* DONT_TOUCH *) 
  Butterfly__80 \Puf_Gen[2].Chain_Gen[17].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [17]),
        .Pre(\ArbOut2[2]_23 [17]),
        .Q(\Butterfly_out[2]_25 [17]));
  (* DONT_TOUCH *) 
  Arbys__161 \Puf_Gen[2].Chain_Gen[18].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [17]),
        .in1(\ArbOut4[2]_5 [17]),
        .in2(\ArbOut4[2]_5 [17]),
        .in3(\ArbOut3[2]_6 [17]),
        .out1(\ArbOut1[2]_24 [18]),
        .out2(\ArbOut2[2]_23 [18]),
        .sel(Challenge[18]));
  (* DONT_TOUCH *) 
  Arbys__162 \Puf_Gen[2].Chain_Gen[18].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [18]),
        .in1(\ArbOut2[2]_23 [18]),
        .in2(\ArbOut2[2]_23 [18]),
        .in3(\ArbOut1[2]_24 [18]),
        .out1(\ArbOut3[2]_6 [18]),
        .out2(\ArbOut4[2]_5 [18]),
        .sel(\Butterfly_out[2]_25 [18]));
  (* DONT_TOUCH *) 
  Butterfly__81 \Puf_Gen[2].Chain_Gen[18].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [18]),
        .Pre(\ArbOut2[2]_23 [18]),
        .Q(\Butterfly_out[2]_25 [18]));
  (* DONT_TOUCH *) 
  Arbys__163 \Puf_Gen[2].Chain_Gen[19].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [18]),
        .in1(\ArbOut4[2]_5 [18]),
        .in2(\ArbOut4[2]_5 [18]),
        .in3(\ArbOut3[2]_6 [18]),
        .out1(\ArbOut1[2]_24 [19]),
        .out2(\ArbOut2[2]_23 [19]),
        .sel(Challenge[19]));
  (* DONT_TOUCH *) 
  Arbys__164 \Puf_Gen[2].Chain_Gen[19].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [19]),
        .in1(\ArbOut2[2]_23 [19]),
        .in2(\ArbOut2[2]_23 [19]),
        .in3(\ArbOut1[2]_24 [19]),
        .out1(\ArbOut3[2]_6 [19]),
        .out2(\ArbOut4[2]_5 [19]),
        .sel(\Butterfly_out[2]_25 [19]));
  (* DONT_TOUCH *) 
  Butterfly__82 \Puf_Gen[2].Chain_Gen[19].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [19]),
        .Pre(\ArbOut2[2]_23 [19]),
        .Q(\Butterfly_out[2]_25 [19]));
  (* DONT_TOUCH *) 
  Arbys__127 \Puf_Gen[2].Chain_Gen[1].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [0]),
        .in1(\ArbOut4[2]_5 [0]),
        .in2(\ArbOut4[2]_5 [0]),
        .in3(\ArbOut3[2]_6 [0]),
        .out1(\ArbOut1[2]_24 [1]),
        .out2(\ArbOut2[2]_23 [1]),
        .sel(Challenge[1]));
  (* DONT_TOUCH *) 
  Arbys__128 \Puf_Gen[2].Chain_Gen[1].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [1]),
        .in1(\ArbOut2[2]_23 [1]),
        .in2(\ArbOut2[2]_23 [1]),
        .in3(\ArbOut1[2]_24 [1]),
        .out1(\ArbOut3[2]_6 [1]),
        .out2(\ArbOut4[2]_5 [1]),
        .sel(\Butterfly_out[2]_25 [1]));
  (* DONT_TOUCH *) 
  Butterfly__64 \Puf_Gen[2].Chain_Gen[1].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [1]),
        .Pre(\ArbOut2[2]_23 [1]),
        .Q(\Butterfly_out[2]_25 [1]));
  (* DONT_TOUCH *) 
  Arbys__165 \Puf_Gen[2].Chain_Gen[20].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [19]),
        .in1(\ArbOut4[2]_5 [19]),
        .in2(\ArbOut4[2]_5 [19]),
        .in3(\ArbOut3[2]_6 [19]),
        .out1(\ArbOut1[2]_24 [20]),
        .out2(\ArbOut2[2]_23 [20]),
        .sel(Challenge[20]));
  (* DONT_TOUCH *) 
  Arbys__166 \Puf_Gen[2].Chain_Gen[20].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [20]),
        .in1(\ArbOut2[2]_23 [20]),
        .in2(\ArbOut2[2]_23 [20]),
        .in3(\ArbOut1[2]_24 [20]),
        .out1(\ArbOut3[2]_6 [20]),
        .out2(\ArbOut4[2]_5 [20]),
        .sel(\Butterfly_out[2]_25 [20]));
  (* DONT_TOUCH *) 
  Butterfly__83 \Puf_Gen[2].Chain_Gen[20].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [20]),
        .Pre(\ArbOut2[2]_23 [20]),
        .Q(\Butterfly_out[2]_25 [20]));
  (* DONT_TOUCH *) 
  Arbys__167 \Puf_Gen[2].Chain_Gen[21].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [20]),
        .in1(\ArbOut4[2]_5 [20]),
        .in2(\ArbOut4[2]_5 [20]),
        .in3(\ArbOut3[2]_6 [20]),
        .out1(\ArbOut1[2]_24 [21]),
        .out2(\ArbOut2[2]_23 [21]),
        .sel(Challenge[21]));
  (* DONT_TOUCH *) 
  Arbys__168 \Puf_Gen[2].Chain_Gen[21].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [21]),
        .in1(\ArbOut2[2]_23 [21]),
        .in2(\ArbOut2[2]_23 [21]),
        .in3(\ArbOut1[2]_24 [21]),
        .out1(\ArbOut3[2]_6 [21]),
        .out2(\ArbOut4[2]_5 [21]),
        .sel(\Butterfly_out[2]_25 [21]));
  (* DONT_TOUCH *) 
  Butterfly__84 \Puf_Gen[2].Chain_Gen[21].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [21]),
        .Pre(\ArbOut2[2]_23 [21]),
        .Q(\Butterfly_out[2]_25 [21]));
  (* DONT_TOUCH *) 
  Arbys__169 \Puf_Gen[2].Chain_Gen[22].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [21]),
        .in1(\ArbOut4[2]_5 [21]),
        .in2(\ArbOut4[2]_5 [21]),
        .in3(\ArbOut3[2]_6 [21]),
        .out1(\ArbOut1[2]_24 [22]),
        .out2(\ArbOut2[2]_23 [22]),
        .sel(Challenge[22]));
  (* DONT_TOUCH *) 
  Arbys__170 \Puf_Gen[2].Chain_Gen[22].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [22]),
        .in1(\ArbOut2[2]_23 [22]),
        .in2(\ArbOut2[2]_23 [22]),
        .in3(\ArbOut1[2]_24 [22]),
        .out1(\ArbOut3[2]_6 [22]),
        .out2(\ArbOut4[2]_5 [22]),
        .sel(\Butterfly_out[2]_25 [22]));
  (* DONT_TOUCH *) 
  Butterfly__85 \Puf_Gen[2].Chain_Gen[22].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [22]),
        .Pre(\ArbOut2[2]_23 [22]),
        .Q(\Butterfly_out[2]_25 [22]));
  (* DONT_TOUCH *) 
  Arbys__171 \Puf_Gen[2].Chain_Gen[23].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [22]),
        .in1(\ArbOut4[2]_5 [22]),
        .in2(\ArbOut4[2]_5 [22]),
        .in3(\ArbOut3[2]_6 [22]),
        .out1(\ArbOut1[2]_24 [23]),
        .out2(\ArbOut2[2]_23 [23]),
        .sel(Challenge[23]));
  (* DONT_TOUCH *) 
  Arbys__172 \Puf_Gen[2].Chain_Gen[23].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [23]),
        .in1(\ArbOut2[2]_23 [23]),
        .in2(\ArbOut2[2]_23 [23]),
        .in3(\ArbOut1[2]_24 [23]),
        .out1(\ArbOut3[2]_6 [23]),
        .out2(\ArbOut4[2]_5 [23]),
        .sel(\Butterfly_out[2]_25 [23]));
  (* DONT_TOUCH *) 
  Butterfly__86 \Puf_Gen[2].Chain_Gen[23].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [23]),
        .Pre(\ArbOut2[2]_23 [23]),
        .Q(\Butterfly_out[2]_25 [23]));
  (* DONT_TOUCH *) 
  Arbys__173 \Puf_Gen[2].Chain_Gen[24].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [23]),
        .in1(\ArbOut4[2]_5 [23]),
        .in2(\ArbOut4[2]_5 [23]),
        .in3(\ArbOut3[2]_6 [23]),
        .out1(\ArbOut1[2]_24 [24]),
        .out2(\ArbOut2[2]_23 [24]),
        .sel(Challenge[24]));
  (* DONT_TOUCH *) 
  Arbys__174 \Puf_Gen[2].Chain_Gen[24].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [24]),
        .in1(\ArbOut2[2]_23 [24]),
        .in2(\ArbOut2[2]_23 [24]),
        .in3(\ArbOut1[2]_24 [24]),
        .out1(\ArbOut3[2]_6 [24]),
        .out2(\ArbOut4[2]_5 [24]),
        .sel(\Butterfly_out[2]_25 [24]));
  (* DONT_TOUCH *) 
  Butterfly__87 \Puf_Gen[2].Chain_Gen[24].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [24]),
        .Pre(\ArbOut2[2]_23 [24]),
        .Q(\Butterfly_out[2]_25 [24]));
  (* DONT_TOUCH *) 
  Arbys__175 \Puf_Gen[2].Chain_Gen[25].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [24]),
        .in1(\ArbOut4[2]_5 [24]),
        .in2(\ArbOut4[2]_5 [24]),
        .in3(\ArbOut3[2]_6 [24]),
        .out1(\ArbOut1[2]_24 [25]),
        .out2(\ArbOut2[2]_23 [25]),
        .sel(Challenge[25]));
  (* DONT_TOUCH *) 
  Arbys__176 \Puf_Gen[2].Chain_Gen[25].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [25]),
        .in1(\ArbOut2[2]_23 [25]),
        .in2(\ArbOut2[2]_23 [25]),
        .in3(\ArbOut1[2]_24 [25]),
        .out1(\ArbOut3[2]_6 [25]),
        .out2(\ArbOut4[2]_5 [25]),
        .sel(\Butterfly_out[2]_25 [25]));
  (* DONT_TOUCH *) 
  Butterfly__88 \Puf_Gen[2].Chain_Gen[25].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [25]),
        .Pre(\ArbOut2[2]_23 [25]),
        .Q(\Butterfly_out[2]_25 [25]));
  (* DONT_TOUCH *) 
  Arbys__177 \Puf_Gen[2].Chain_Gen[26].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [25]),
        .in1(\ArbOut4[2]_5 [25]),
        .in2(\ArbOut4[2]_5 [25]),
        .in3(\ArbOut3[2]_6 [25]),
        .out1(\ArbOut1[2]_24 [26]),
        .out2(\ArbOut2[2]_23 [26]),
        .sel(Challenge[26]));
  (* DONT_TOUCH *) 
  Arbys__178 \Puf_Gen[2].Chain_Gen[26].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [26]),
        .in1(\ArbOut2[2]_23 [26]),
        .in2(\ArbOut2[2]_23 [26]),
        .in3(\ArbOut1[2]_24 [26]),
        .out1(\ArbOut3[2]_6 [26]),
        .out2(\ArbOut4[2]_5 [26]),
        .sel(\Butterfly_out[2]_25 [26]));
  (* DONT_TOUCH *) 
  Butterfly__89 \Puf_Gen[2].Chain_Gen[26].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [26]),
        .Pre(\ArbOut2[2]_23 [26]),
        .Q(\Butterfly_out[2]_25 [26]));
  (* DONT_TOUCH *) 
  Arbys__179 \Puf_Gen[2].Chain_Gen[27].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [26]),
        .in1(\ArbOut4[2]_5 [26]),
        .in2(\ArbOut4[2]_5 [26]),
        .in3(\ArbOut3[2]_6 [26]),
        .out1(\ArbOut1[2]_24 [27]),
        .out2(\ArbOut2[2]_23 [27]),
        .sel(Challenge[27]));
  (* DONT_TOUCH *) 
  Arbys__180 \Puf_Gen[2].Chain_Gen[27].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [27]),
        .in1(\ArbOut2[2]_23 [27]),
        .in2(\ArbOut2[2]_23 [27]),
        .in3(\ArbOut1[2]_24 [27]),
        .out1(\ArbOut3[2]_6 [27]),
        .out2(\ArbOut4[2]_5 [27]),
        .sel(\Butterfly_out[2]_25 [27]));
  (* DONT_TOUCH *) 
  Butterfly__90 \Puf_Gen[2].Chain_Gen[27].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [27]),
        .Pre(\ArbOut2[2]_23 [27]),
        .Q(\Butterfly_out[2]_25 [27]));
  (* DONT_TOUCH *) 
  Arbys__181 \Puf_Gen[2].Chain_Gen[28].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [27]),
        .in1(\ArbOut4[2]_5 [27]),
        .in2(\ArbOut4[2]_5 [27]),
        .in3(\ArbOut3[2]_6 [27]),
        .out1(\ArbOut1[2]_24 [28]),
        .out2(\ArbOut2[2]_23 [28]),
        .sel(Challenge[28]));
  (* DONT_TOUCH *) 
  Arbys__182 \Puf_Gen[2].Chain_Gen[28].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [28]),
        .in1(\ArbOut2[2]_23 [28]),
        .in2(\ArbOut2[2]_23 [28]),
        .in3(\ArbOut1[2]_24 [28]),
        .out1(\ArbOut3[2]_6 [28]),
        .out2(\ArbOut4[2]_5 [28]),
        .sel(\Butterfly_out[2]_25 [28]));
  (* DONT_TOUCH *) 
  Butterfly__91 \Puf_Gen[2].Chain_Gen[28].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [28]),
        .Pre(\ArbOut2[2]_23 [28]),
        .Q(\Butterfly_out[2]_25 [28]));
  (* DONT_TOUCH *) 
  Arbys__183 \Puf_Gen[2].Chain_Gen[29].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [28]),
        .in1(\ArbOut4[2]_5 [28]),
        .in2(\ArbOut4[2]_5 [28]),
        .in3(\ArbOut3[2]_6 [28]),
        .out1(\ArbOut1[2]_24 [29]),
        .out2(\ArbOut2[2]_23 [29]),
        .sel(Challenge[29]));
  (* DONT_TOUCH *) 
  Arbys__184 \Puf_Gen[2].Chain_Gen[29].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [29]),
        .in1(\ArbOut2[2]_23 [29]),
        .in2(\ArbOut2[2]_23 [29]),
        .in3(\ArbOut1[2]_24 [29]),
        .out1(\ArbOut3[2]_6 [29]),
        .out2(\ArbOut4[2]_5 [29]),
        .sel(\Butterfly_out[2]_25 [29]));
  (* DONT_TOUCH *) 
  Butterfly__92 \Puf_Gen[2].Chain_Gen[29].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [29]),
        .Pre(\ArbOut2[2]_23 [29]),
        .Q(\Butterfly_out[2]_25 [29]));
  (* DONT_TOUCH *) 
  Arbys__129 \Puf_Gen[2].Chain_Gen[2].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [1]),
        .in1(\ArbOut4[2]_5 [1]),
        .in2(\ArbOut4[2]_5 [1]),
        .in3(\ArbOut3[2]_6 [1]),
        .out1(\ArbOut1[2]_24 [2]),
        .out2(\ArbOut2[2]_23 [2]),
        .sel(Challenge[2]));
  (* DONT_TOUCH *) 
  Arbys__130 \Puf_Gen[2].Chain_Gen[2].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [2]),
        .in1(\ArbOut2[2]_23 [2]),
        .in2(\ArbOut2[2]_23 [2]),
        .in3(\ArbOut1[2]_24 [2]),
        .out1(\ArbOut3[2]_6 [2]),
        .out2(\ArbOut4[2]_5 [2]),
        .sel(\Butterfly_out[2]_25 [2]));
  (* DONT_TOUCH *) 
  Butterfly__65 \Puf_Gen[2].Chain_Gen[2].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [2]),
        .Pre(\ArbOut2[2]_23 [2]),
        .Q(\Butterfly_out[2]_25 [2]));
  (* DONT_TOUCH *) 
  Arbys__185 \Puf_Gen[2].Chain_Gen[30].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [29]),
        .in1(\ArbOut4[2]_5 [29]),
        .in2(\ArbOut4[2]_5 [29]),
        .in3(\ArbOut3[2]_6 [29]),
        .out1(\ArbOut1[2]_24 [30]),
        .out2(\ArbOut2[2]_23 [30]),
        .sel(Challenge[30]));
  (* DONT_TOUCH *) 
  Arbys__186 \Puf_Gen[2].Chain_Gen[30].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [30]),
        .in1(\ArbOut2[2]_23 [30]),
        .in2(\ArbOut2[2]_23 [30]),
        .in3(\ArbOut1[2]_24 [30]),
        .out1(\ArbOut3[2]_6 [30]),
        .out2(\ArbOut4[2]_5 [30]),
        .sel(\Butterfly_out[2]_25 [30]));
  (* DONT_TOUCH *) 
  Butterfly__93 \Puf_Gen[2].Chain_Gen[30].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [30]),
        .Pre(\ArbOut2[2]_23 [30]),
        .Q(\Butterfly_out[2]_25 [30]));
  (* DONT_TOUCH *) 
  DFF__5 \Puf_Gen[2].Chain_Gen[31].Last_Stage.DFF_inst 
       (.CLK(\ArbOut3[2]_6 [30]),
        .CLR(1'b0),
        .D(\ArbOut4[2]_5 [30]),
        .Pre(1'b0),
        .Q(Response[2]));
  (* DONT_TOUCH *) 
  Arbys__131 \Puf_Gen[2].Chain_Gen[3].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [2]),
        .in1(\ArbOut4[2]_5 [2]),
        .in2(\ArbOut4[2]_5 [2]),
        .in3(\ArbOut3[2]_6 [2]),
        .out1(\ArbOut1[2]_24 [3]),
        .out2(\ArbOut2[2]_23 [3]),
        .sel(Challenge[3]));
  (* DONT_TOUCH *) 
  Arbys__132 \Puf_Gen[2].Chain_Gen[3].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [3]),
        .in1(\ArbOut2[2]_23 [3]),
        .in2(\ArbOut2[2]_23 [3]),
        .in3(\ArbOut1[2]_24 [3]),
        .out1(\ArbOut3[2]_6 [3]),
        .out2(\ArbOut4[2]_5 [3]),
        .sel(\Butterfly_out[2]_25 [3]));
  (* DONT_TOUCH *) 
  Butterfly__66 \Puf_Gen[2].Chain_Gen[3].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [3]),
        .Pre(\ArbOut2[2]_23 [3]),
        .Q(\Butterfly_out[2]_25 [3]));
  (* DONT_TOUCH *) 
  Arbys__133 \Puf_Gen[2].Chain_Gen[4].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [3]),
        .in1(\ArbOut4[2]_5 [3]),
        .in2(\ArbOut4[2]_5 [3]),
        .in3(\ArbOut3[2]_6 [3]),
        .out1(\ArbOut1[2]_24 [4]),
        .out2(\ArbOut2[2]_23 [4]),
        .sel(Challenge[4]));
  (* DONT_TOUCH *) 
  Arbys__134 \Puf_Gen[2].Chain_Gen[4].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [4]),
        .in1(\ArbOut2[2]_23 [4]),
        .in2(\ArbOut2[2]_23 [4]),
        .in3(\ArbOut1[2]_24 [4]),
        .out1(\ArbOut3[2]_6 [4]),
        .out2(\ArbOut4[2]_5 [4]),
        .sel(\Butterfly_out[2]_25 [4]));
  (* DONT_TOUCH *) 
  Butterfly__67 \Puf_Gen[2].Chain_Gen[4].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [4]),
        .Pre(\ArbOut2[2]_23 [4]),
        .Q(\Butterfly_out[2]_25 [4]));
  (* DONT_TOUCH *) 
  Arbys__135 \Puf_Gen[2].Chain_Gen[5].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [4]),
        .in1(\ArbOut4[2]_5 [4]),
        .in2(\ArbOut4[2]_5 [4]),
        .in3(\ArbOut3[2]_6 [4]),
        .out1(\ArbOut1[2]_24 [5]),
        .out2(\ArbOut2[2]_23 [5]),
        .sel(Challenge[5]));
  (* DONT_TOUCH *) 
  Arbys__136 \Puf_Gen[2].Chain_Gen[5].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [5]),
        .in1(\ArbOut2[2]_23 [5]),
        .in2(\ArbOut2[2]_23 [5]),
        .in3(\ArbOut1[2]_24 [5]),
        .out1(\ArbOut3[2]_6 [5]),
        .out2(\ArbOut4[2]_5 [5]),
        .sel(\Butterfly_out[2]_25 [5]));
  (* DONT_TOUCH *) 
  Butterfly__68 \Puf_Gen[2].Chain_Gen[5].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [5]),
        .Pre(\ArbOut2[2]_23 [5]),
        .Q(\Butterfly_out[2]_25 [5]));
  (* DONT_TOUCH *) 
  Arbys__137 \Puf_Gen[2].Chain_Gen[6].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [5]),
        .in1(\ArbOut4[2]_5 [5]),
        .in2(\ArbOut4[2]_5 [5]),
        .in3(\ArbOut3[2]_6 [5]),
        .out1(\ArbOut1[2]_24 [6]),
        .out2(\ArbOut2[2]_23 [6]),
        .sel(Challenge[6]));
  (* DONT_TOUCH *) 
  Arbys__138 \Puf_Gen[2].Chain_Gen[6].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [6]),
        .in1(\ArbOut2[2]_23 [6]),
        .in2(\ArbOut2[2]_23 [6]),
        .in3(\ArbOut1[2]_24 [6]),
        .out1(\ArbOut3[2]_6 [6]),
        .out2(\ArbOut4[2]_5 [6]),
        .sel(\Butterfly_out[2]_25 [6]));
  (* DONT_TOUCH *) 
  Butterfly__69 \Puf_Gen[2].Chain_Gen[6].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [6]),
        .Pre(\ArbOut2[2]_23 [6]),
        .Q(\Butterfly_out[2]_25 [6]));
  (* DONT_TOUCH *) 
  Arbys__139 \Puf_Gen[2].Chain_Gen[7].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [6]),
        .in1(\ArbOut4[2]_5 [6]),
        .in2(\ArbOut4[2]_5 [6]),
        .in3(\ArbOut3[2]_6 [6]),
        .out1(\ArbOut1[2]_24 [7]),
        .out2(\ArbOut2[2]_23 [7]),
        .sel(Challenge[7]));
  (* DONT_TOUCH *) 
  Arbys__140 \Puf_Gen[2].Chain_Gen[7].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [7]),
        .in1(\ArbOut2[2]_23 [7]),
        .in2(\ArbOut2[2]_23 [7]),
        .in3(\ArbOut1[2]_24 [7]),
        .out1(\ArbOut3[2]_6 [7]),
        .out2(\ArbOut4[2]_5 [7]),
        .sel(\Butterfly_out[2]_25 [7]));
  (* DONT_TOUCH *) 
  Butterfly__70 \Puf_Gen[2].Chain_Gen[7].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [7]),
        .Pre(\ArbOut2[2]_23 [7]),
        .Q(\Butterfly_out[2]_25 [7]));
  (* DONT_TOUCH *) 
  Arbys__141 \Puf_Gen[2].Chain_Gen[8].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [7]),
        .in1(\ArbOut4[2]_5 [7]),
        .in2(\ArbOut4[2]_5 [7]),
        .in3(\ArbOut3[2]_6 [7]),
        .out1(\ArbOut1[2]_24 [8]),
        .out2(\ArbOut2[2]_23 [8]),
        .sel(Challenge[8]));
  (* DONT_TOUCH *) 
  Arbys__142 \Puf_Gen[2].Chain_Gen[8].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [8]),
        .in1(\ArbOut2[2]_23 [8]),
        .in2(\ArbOut2[2]_23 [8]),
        .in3(\ArbOut1[2]_24 [8]),
        .out1(\ArbOut3[2]_6 [8]),
        .out2(\ArbOut4[2]_5 [8]),
        .sel(\Butterfly_out[2]_25 [8]));
  (* DONT_TOUCH *) 
  Butterfly__71 \Puf_Gen[2].Chain_Gen[8].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [8]),
        .Pre(\ArbOut2[2]_23 [8]),
        .Q(\Butterfly_out[2]_25 [8]));
  (* DONT_TOUCH *) 
  Arbys__143 \Puf_Gen[2].Chain_Gen[9].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[2]_6 [8]),
        .in1(\ArbOut4[2]_5 [8]),
        .in2(\ArbOut4[2]_5 [8]),
        .in3(\ArbOut3[2]_6 [8]),
        .out1(\ArbOut1[2]_24 [9]),
        .out2(\ArbOut2[2]_23 [9]),
        .sel(Challenge[9]));
  (* DONT_TOUCH *) 
  Arbys__144 \Puf_Gen[2].Chain_Gen[9].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[2]_24 [9]),
        .in1(\ArbOut2[2]_23 [9]),
        .in2(\ArbOut2[2]_23 [9]),
        .in3(\ArbOut1[2]_24 [9]),
        .out1(\ArbOut3[2]_6 [9]),
        .out2(\ArbOut4[2]_5 [9]),
        .sel(\Butterfly_out[2]_25 [9]));
  (* DONT_TOUCH *) 
  Butterfly__72 \Puf_Gen[2].Chain_Gen[9].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[2]_24 [9]),
        .Pre(\ArbOut2[2]_23 [9]),
        .Q(\Butterfly_out[2]_25 [9]));
  (* DONT_TOUCH *) 
  Arbys__187 \Puf_Gen[3].Chain_Gen[0].First_ChainLink.ArbiterL1_inst 
       (.in0(en_puf),
        .in1(en_puf),
        .in2(en_puf),
        .in3(en_puf),
        .out1(\ArbOut1[3]_27 [0]),
        .out2(\ArbOut2[3]_26 [0]),
        .sel(Challenge[0]));
  (* DONT_TOUCH *) 
  Arbys__188 \Puf_Gen[3].Chain_Gen[0].First_ChainLink.ArbiterL2_inst 
       (.in0(\ArbOut1[3]_27 [0]),
        .in1(\ArbOut2[3]_26 [0]),
        .in2(\ArbOut2[3]_26 [0]),
        .in3(\ArbOut1[3]_27 [0]),
        .out1(\ArbOut3[3]_8 [0]),
        .out2(\ArbOut4[3]_7 [0]),
        .sel(\Butterfly_out[3]_28 [0]));
  (* DONT_TOUCH *) 
  Butterfly__94 \Puf_Gen[3].Chain_Gen[0].First_ChainLink.Butterfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [0]),
        .Pre(\ArbOut2[3]_26 [0]),
        .Q(\Butterfly_out[3]_28 [0]));
  (* DONT_TOUCH *) 
  Arbys__207 \Puf_Gen[3].Chain_Gen[10].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [9]),
        .in1(\ArbOut4[3]_7 [9]),
        .in2(\ArbOut4[3]_7 [9]),
        .in3(\ArbOut3[3]_8 [9]),
        .out1(\ArbOut1[3]_27 [10]),
        .out2(\ArbOut2[3]_26 [10]),
        .sel(Challenge[10]));
  (* DONT_TOUCH *) 
  Arbys__208 \Puf_Gen[3].Chain_Gen[10].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [10]),
        .in1(\ArbOut2[3]_26 [10]),
        .in2(\ArbOut2[3]_26 [10]),
        .in3(\ArbOut1[3]_27 [10]),
        .out1(\ArbOut3[3]_8 [10]),
        .out2(\ArbOut4[3]_7 [10]),
        .sel(\Butterfly_out[3]_28 [10]));
  (* DONT_TOUCH *) 
  Butterfly__104 \Puf_Gen[3].Chain_Gen[10].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [10]),
        .Pre(\ArbOut2[3]_26 [10]),
        .Q(\Butterfly_out[3]_28 [10]));
  (* DONT_TOUCH *) 
  Arbys__209 \Puf_Gen[3].Chain_Gen[11].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [10]),
        .in1(\ArbOut4[3]_7 [10]),
        .in2(\ArbOut4[3]_7 [10]),
        .in3(\ArbOut3[3]_8 [10]),
        .out1(\ArbOut1[3]_27 [11]),
        .out2(\ArbOut2[3]_26 [11]),
        .sel(Challenge[11]));
  (* DONT_TOUCH *) 
  Arbys__210 \Puf_Gen[3].Chain_Gen[11].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [11]),
        .in1(\ArbOut2[3]_26 [11]),
        .in2(\ArbOut2[3]_26 [11]),
        .in3(\ArbOut1[3]_27 [11]),
        .out1(\ArbOut3[3]_8 [11]),
        .out2(\ArbOut4[3]_7 [11]),
        .sel(\Butterfly_out[3]_28 [11]));
  (* DONT_TOUCH *) 
  Butterfly__105 \Puf_Gen[3].Chain_Gen[11].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [11]),
        .Pre(\ArbOut2[3]_26 [11]),
        .Q(\Butterfly_out[3]_28 [11]));
  (* DONT_TOUCH *) 
  Arbys__211 \Puf_Gen[3].Chain_Gen[12].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [11]),
        .in1(\ArbOut4[3]_7 [11]),
        .in2(\ArbOut4[3]_7 [11]),
        .in3(\ArbOut3[3]_8 [11]),
        .out1(\ArbOut1[3]_27 [12]),
        .out2(\ArbOut2[3]_26 [12]),
        .sel(Challenge[12]));
  (* DONT_TOUCH *) 
  Arbys__212 \Puf_Gen[3].Chain_Gen[12].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [12]),
        .in1(\ArbOut2[3]_26 [12]),
        .in2(\ArbOut2[3]_26 [12]),
        .in3(\ArbOut1[3]_27 [12]),
        .out1(\ArbOut3[3]_8 [12]),
        .out2(\ArbOut4[3]_7 [12]),
        .sel(\Butterfly_out[3]_28 [12]));
  (* DONT_TOUCH *) 
  Butterfly__106 \Puf_Gen[3].Chain_Gen[12].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [12]),
        .Pre(\ArbOut2[3]_26 [12]),
        .Q(\Butterfly_out[3]_28 [12]));
  (* DONT_TOUCH *) 
  Arbys__213 \Puf_Gen[3].Chain_Gen[13].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [12]),
        .in1(\ArbOut4[3]_7 [12]),
        .in2(\ArbOut4[3]_7 [12]),
        .in3(\ArbOut3[3]_8 [12]),
        .out1(\ArbOut1[3]_27 [13]),
        .out2(\ArbOut2[3]_26 [13]),
        .sel(Challenge[13]));
  (* DONT_TOUCH *) 
  Arbys__214 \Puf_Gen[3].Chain_Gen[13].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [13]),
        .in1(\ArbOut2[3]_26 [13]),
        .in2(\ArbOut2[3]_26 [13]),
        .in3(\ArbOut1[3]_27 [13]),
        .out1(\ArbOut3[3]_8 [13]),
        .out2(\ArbOut4[3]_7 [13]),
        .sel(\Butterfly_out[3]_28 [13]));
  (* DONT_TOUCH *) 
  Butterfly__107 \Puf_Gen[3].Chain_Gen[13].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [13]),
        .Pre(\ArbOut2[3]_26 [13]),
        .Q(\Butterfly_out[3]_28 [13]));
  (* DONT_TOUCH *) 
  Arbys__215 \Puf_Gen[3].Chain_Gen[14].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [13]),
        .in1(\ArbOut4[3]_7 [13]),
        .in2(\ArbOut4[3]_7 [13]),
        .in3(\ArbOut3[3]_8 [13]),
        .out1(\ArbOut1[3]_27 [14]),
        .out2(\ArbOut2[3]_26 [14]),
        .sel(Challenge[14]));
  (* DONT_TOUCH *) 
  Arbys__216 \Puf_Gen[3].Chain_Gen[14].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [14]),
        .in1(\ArbOut2[3]_26 [14]),
        .in2(\ArbOut2[3]_26 [14]),
        .in3(\ArbOut1[3]_27 [14]),
        .out1(\ArbOut3[3]_8 [14]),
        .out2(\ArbOut4[3]_7 [14]),
        .sel(\Butterfly_out[3]_28 [14]));
  (* DONT_TOUCH *) 
  Butterfly__108 \Puf_Gen[3].Chain_Gen[14].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [14]),
        .Pre(\ArbOut2[3]_26 [14]),
        .Q(\Butterfly_out[3]_28 [14]));
  (* DONT_TOUCH *) 
  Arbys__217 \Puf_Gen[3].Chain_Gen[15].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [14]),
        .in1(\ArbOut4[3]_7 [14]),
        .in2(\ArbOut4[3]_7 [14]),
        .in3(\ArbOut3[3]_8 [14]),
        .out1(\ArbOut1[3]_27 [15]),
        .out2(\ArbOut2[3]_26 [15]),
        .sel(Challenge[15]));
  (* DONT_TOUCH *) 
  Arbys__218 \Puf_Gen[3].Chain_Gen[15].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [15]),
        .in1(\ArbOut2[3]_26 [15]),
        .in2(\ArbOut2[3]_26 [15]),
        .in3(\ArbOut1[3]_27 [15]),
        .out1(\ArbOut3[3]_8 [15]),
        .out2(\ArbOut4[3]_7 [15]),
        .sel(\Butterfly_out[3]_28 [15]));
  (* DONT_TOUCH *) 
  Butterfly__109 \Puf_Gen[3].Chain_Gen[15].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [15]),
        .Pre(\ArbOut2[3]_26 [15]),
        .Q(\Butterfly_out[3]_28 [15]));
  (* DONT_TOUCH *) 
  Arbys__219 \Puf_Gen[3].Chain_Gen[16].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [15]),
        .in1(\ArbOut4[3]_7 [15]),
        .in2(\ArbOut4[3]_7 [15]),
        .in3(\ArbOut3[3]_8 [15]),
        .out1(\ArbOut1[3]_27 [16]),
        .out2(\ArbOut2[3]_26 [16]),
        .sel(Challenge[16]));
  (* DONT_TOUCH *) 
  Arbys__220 \Puf_Gen[3].Chain_Gen[16].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [16]),
        .in1(\ArbOut2[3]_26 [16]),
        .in2(\ArbOut2[3]_26 [16]),
        .in3(\ArbOut1[3]_27 [16]),
        .out1(\ArbOut3[3]_8 [16]),
        .out2(\ArbOut4[3]_7 [16]),
        .sel(\Butterfly_out[3]_28 [16]));
  (* DONT_TOUCH *) 
  Butterfly__110 \Puf_Gen[3].Chain_Gen[16].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [16]),
        .Pre(\ArbOut2[3]_26 [16]),
        .Q(\Butterfly_out[3]_28 [16]));
  (* DONT_TOUCH *) 
  Arbys__221 \Puf_Gen[3].Chain_Gen[17].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [16]),
        .in1(\ArbOut4[3]_7 [16]),
        .in2(\ArbOut4[3]_7 [16]),
        .in3(\ArbOut3[3]_8 [16]),
        .out1(\ArbOut1[3]_27 [17]),
        .out2(\ArbOut2[3]_26 [17]),
        .sel(Challenge[17]));
  (* DONT_TOUCH *) 
  Arbys__222 \Puf_Gen[3].Chain_Gen[17].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [17]),
        .in1(\ArbOut2[3]_26 [17]),
        .in2(\ArbOut2[3]_26 [17]),
        .in3(\ArbOut1[3]_27 [17]),
        .out1(\ArbOut3[3]_8 [17]),
        .out2(\ArbOut4[3]_7 [17]),
        .sel(\Butterfly_out[3]_28 [17]));
  (* DONT_TOUCH *) 
  Butterfly__111 \Puf_Gen[3].Chain_Gen[17].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [17]),
        .Pre(\ArbOut2[3]_26 [17]),
        .Q(\Butterfly_out[3]_28 [17]));
  (* DONT_TOUCH *) 
  Arbys__223 \Puf_Gen[3].Chain_Gen[18].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [17]),
        .in1(\ArbOut4[3]_7 [17]),
        .in2(\ArbOut4[3]_7 [17]),
        .in3(\ArbOut3[3]_8 [17]),
        .out1(\ArbOut1[3]_27 [18]),
        .out2(\ArbOut2[3]_26 [18]),
        .sel(Challenge[18]));
  (* DONT_TOUCH *) 
  Arbys__224 \Puf_Gen[3].Chain_Gen[18].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [18]),
        .in1(\ArbOut2[3]_26 [18]),
        .in2(\ArbOut2[3]_26 [18]),
        .in3(\ArbOut1[3]_27 [18]),
        .out1(\ArbOut3[3]_8 [18]),
        .out2(\ArbOut4[3]_7 [18]),
        .sel(\Butterfly_out[3]_28 [18]));
  (* DONT_TOUCH *) 
  Butterfly__112 \Puf_Gen[3].Chain_Gen[18].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [18]),
        .Pre(\ArbOut2[3]_26 [18]),
        .Q(\Butterfly_out[3]_28 [18]));
  (* DONT_TOUCH *) 
  Arbys__225 \Puf_Gen[3].Chain_Gen[19].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [18]),
        .in1(\ArbOut4[3]_7 [18]),
        .in2(\ArbOut4[3]_7 [18]),
        .in3(\ArbOut3[3]_8 [18]),
        .out1(\ArbOut1[3]_27 [19]),
        .out2(\ArbOut2[3]_26 [19]),
        .sel(Challenge[19]));
  (* DONT_TOUCH *) 
  Arbys__226 \Puf_Gen[3].Chain_Gen[19].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [19]),
        .in1(\ArbOut2[3]_26 [19]),
        .in2(\ArbOut2[3]_26 [19]),
        .in3(\ArbOut1[3]_27 [19]),
        .out1(\ArbOut3[3]_8 [19]),
        .out2(\ArbOut4[3]_7 [19]),
        .sel(\Butterfly_out[3]_28 [19]));
  (* DONT_TOUCH *) 
  Butterfly__113 \Puf_Gen[3].Chain_Gen[19].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [19]),
        .Pre(\ArbOut2[3]_26 [19]),
        .Q(\Butterfly_out[3]_28 [19]));
  (* DONT_TOUCH *) 
  Arbys__189 \Puf_Gen[3].Chain_Gen[1].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [0]),
        .in1(\ArbOut4[3]_7 [0]),
        .in2(\ArbOut4[3]_7 [0]),
        .in3(\ArbOut3[3]_8 [0]),
        .out1(\ArbOut1[3]_27 [1]),
        .out2(\ArbOut2[3]_26 [1]),
        .sel(Challenge[1]));
  (* DONT_TOUCH *) 
  Arbys__190 \Puf_Gen[3].Chain_Gen[1].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [1]),
        .in1(\ArbOut2[3]_26 [1]),
        .in2(\ArbOut2[3]_26 [1]),
        .in3(\ArbOut1[3]_27 [1]),
        .out1(\ArbOut3[3]_8 [1]),
        .out2(\ArbOut4[3]_7 [1]),
        .sel(\Butterfly_out[3]_28 [1]));
  (* DONT_TOUCH *) 
  Butterfly__95 \Puf_Gen[3].Chain_Gen[1].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [1]),
        .Pre(\ArbOut2[3]_26 [1]),
        .Q(\Butterfly_out[3]_28 [1]));
  (* DONT_TOUCH *) 
  Arbys__227 \Puf_Gen[3].Chain_Gen[20].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [19]),
        .in1(\ArbOut4[3]_7 [19]),
        .in2(\ArbOut4[3]_7 [19]),
        .in3(\ArbOut3[3]_8 [19]),
        .out1(\ArbOut1[3]_27 [20]),
        .out2(\ArbOut2[3]_26 [20]),
        .sel(Challenge[20]));
  (* DONT_TOUCH *) 
  Arbys__228 \Puf_Gen[3].Chain_Gen[20].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [20]),
        .in1(\ArbOut2[3]_26 [20]),
        .in2(\ArbOut2[3]_26 [20]),
        .in3(\ArbOut1[3]_27 [20]),
        .out1(\ArbOut3[3]_8 [20]),
        .out2(\ArbOut4[3]_7 [20]),
        .sel(\Butterfly_out[3]_28 [20]));
  (* DONT_TOUCH *) 
  Butterfly__114 \Puf_Gen[3].Chain_Gen[20].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [20]),
        .Pre(\ArbOut2[3]_26 [20]),
        .Q(\Butterfly_out[3]_28 [20]));
  (* DONT_TOUCH *) 
  Arbys__229 \Puf_Gen[3].Chain_Gen[21].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [20]),
        .in1(\ArbOut4[3]_7 [20]),
        .in2(\ArbOut4[3]_7 [20]),
        .in3(\ArbOut3[3]_8 [20]),
        .out1(\ArbOut1[3]_27 [21]),
        .out2(\ArbOut2[3]_26 [21]),
        .sel(Challenge[21]));
  (* DONT_TOUCH *) 
  Arbys__230 \Puf_Gen[3].Chain_Gen[21].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [21]),
        .in1(\ArbOut2[3]_26 [21]),
        .in2(\ArbOut2[3]_26 [21]),
        .in3(\ArbOut1[3]_27 [21]),
        .out1(\ArbOut3[3]_8 [21]),
        .out2(\ArbOut4[3]_7 [21]),
        .sel(\Butterfly_out[3]_28 [21]));
  (* DONT_TOUCH *) 
  Butterfly__115 \Puf_Gen[3].Chain_Gen[21].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [21]),
        .Pre(\ArbOut2[3]_26 [21]),
        .Q(\Butterfly_out[3]_28 [21]));
  (* DONT_TOUCH *) 
  Arbys__231 \Puf_Gen[3].Chain_Gen[22].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [21]),
        .in1(\ArbOut4[3]_7 [21]),
        .in2(\ArbOut4[3]_7 [21]),
        .in3(\ArbOut3[3]_8 [21]),
        .out1(\ArbOut1[3]_27 [22]),
        .out2(\ArbOut2[3]_26 [22]),
        .sel(Challenge[22]));
  (* DONT_TOUCH *) 
  Arbys__232 \Puf_Gen[3].Chain_Gen[22].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [22]),
        .in1(\ArbOut2[3]_26 [22]),
        .in2(\ArbOut2[3]_26 [22]),
        .in3(\ArbOut1[3]_27 [22]),
        .out1(\ArbOut3[3]_8 [22]),
        .out2(\ArbOut4[3]_7 [22]),
        .sel(\Butterfly_out[3]_28 [22]));
  (* DONT_TOUCH *) 
  Butterfly__116 \Puf_Gen[3].Chain_Gen[22].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [22]),
        .Pre(\ArbOut2[3]_26 [22]),
        .Q(\Butterfly_out[3]_28 [22]));
  (* DONT_TOUCH *) 
  Arbys__233 \Puf_Gen[3].Chain_Gen[23].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [22]),
        .in1(\ArbOut4[3]_7 [22]),
        .in2(\ArbOut4[3]_7 [22]),
        .in3(\ArbOut3[3]_8 [22]),
        .out1(\ArbOut1[3]_27 [23]),
        .out2(\ArbOut2[3]_26 [23]),
        .sel(Challenge[23]));
  (* DONT_TOUCH *) 
  Arbys__234 \Puf_Gen[3].Chain_Gen[23].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [23]),
        .in1(\ArbOut2[3]_26 [23]),
        .in2(\ArbOut2[3]_26 [23]),
        .in3(\ArbOut1[3]_27 [23]),
        .out1(\ArbOut3[3]_8 [23]),
        .out2(\ArbOut4[3]_7 [23]),
        .sel(\Butterfly_out[3]_28 [23]));
  (* DONT_TOUCH *) 
  Butterfly__117 \Puf_Gen[3].Chain_Gen[23].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [23]),
        .Pre(\ArbOut2[3]_26 [23]),
        .Q(\Butterfly_out[3]_28 [23]));
  (* DONT_TOUCH *) 
  Arbys__235 \Puf_Gen[3].Chain_Gen[24].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [23]),
        .in1(\ArbOut4[3]_7 [23]),
        .in2(\ArbOut4[3]_7 [23]),
        .in3(\ArbOut3[3]_8 [23]),
        .out1(\ArbOut1[3]_27 [24]),
        .out2(\ArbOut2[3]_26 [24]),
        .sel(Challenge[24]));
  (* DONT_TOUCH *) 
  Arbys__236 \Puf_Gen[3].Chain_Gen[24].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [24]),
        .in1(\ArbOut2[3]_26 [24]),
        .in2(\ArbOut2[3]_26 [24]),
        .in3(\ArbOut1[3]_27 [24]),
        .out1(\ArbOut3[3]_8 [24]),
        .out2(\ArbOut4[3]_7 [24]),
        .sel(\Butterfly_out[3]_28 [24]));
  (* DONT_TOUCH *) 
  Butterfly__118 \Puf_Gen[3].Chain_Gen[24].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [24]),
        .Pre(\ArbOut2[3]_26 [24]),
        .Q(\Butterfly_out[3]_28 [24]));
  (* DONT_TOUCH *) 
  Arbys__237 \Puf_Gen[3].Chain_Gen[25].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [24]),
        .in1(\ArbOut4[3]_7 [24]),
        .in2(\ArbOut4[3]_7 [24]),
        .in3(\ArbOut3[3]_8 [24]),
        .out1(\ArbOut1[3]_27 [25]),
        .out2(\ArbOut2[3]_26 [25]),
        .sel(Challenge[25]));
  (* DONT_TOUCH *) 
  Arbys__238 \Puf_Gen[3].Chain_Gen[25].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [25]),
        .in1(\ArbOut2[3]_26 [25]),
        .in2(\ArbOut2[3]_26 [25]),
        .in3(\ArbOut1[3]_27 [25]),
        .out1(\ArbOut3[3]_8 [25]),
        .out2(\ArbOut4[3]_7 [25]),
        .sel(\Butterfly_out[3]_28 [25]));
  (* DONT_TOUCH *) 
  Butterfly__119 \Puf_Gen[3].Chain_Gen[25].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [25]),
        .Pre(\ArbOut2[3]_26 [25]),
        .Q(\Butterfly_out[3]_28 [25]));
  (* DONT_TOUCH *) 
  Arbys__239 \Puf_Gen[3].Chain_Gen[26].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [25]),
        .in1(\ArbOut4[3]_7 [25]),
        .in2(\ArbOut4[3]_7 [25]),
        .in3(\ArbOut3[3]_8 [25]),
        .out1(\ArbOut1[3]_27 [26]),
        .out2(\ArbOut2[3]_26 [26]),
        .sel(Challenge[26]));
  (* DONT_TOUCH *) 
  Arbys__240 \Puf_Gen[3].Chain_Gen[26].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [26]),
        .in1(\ArbOut2[3]_26 [26]),
        .in2(\ArbOut2[3]_26 [26]),
        .in3(\ArbOut1[3]_27 [26]),
        .out1(\ArbOut3[3]_8 [26]),
        .out2(\ArbOut4[3]_7 [26]),
        .sel(\Butterfly_out[3]_28 [26]));
  (* DONT_TOUCH *) 
  Butterfly__120 \Puf_Gen[3].Chain_Gen[26].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [26]),
        .Pre(\ArbOut2[3]_26 [26]),
        .Q(\Butterfly_out[3]_28 [26]));
  (* DONT_TOUCH *) 
  Arbys__241 \Puf_Gen[3].Chain_Gen[27].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [26]),
        .in1(\ArbOut4[3]_7 [26]),
        .in2(\ArbOut4[3]_7 [26]),
        .in3(\ArbOut3[3]_8 [26]),
        .out1(\ArbOut1[3]_27 [27]),
        .out2(\ArbOut2[3]_26 [27]),
        .sel(Challenge[27]));
  (* DONT_TOUCH *) 
  Arbys__242 \Puf_Gen[3].Chain_Gen[27].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [27]),
        .in1(\ArbOut2[3]_26 [27]),
        .in2(\ArbOut2[3]_26 [27]),
        .in3(\ArbOut1[3]_27 [27]),
        .out1(\ArbOut3[3]_8 [27]),
        .out2(\ArbOut4[3]_7 [27]),
        .sel(\Butterfly_out[3]_28 [27]));
  (* DONT_TOUCH *) 
  Butterfly__121 \Puf_Gen[3].Chain_Gen[27].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [27]),
        .Pre(\ArbOut2[3]_26 [27]),
        .Q(\Butterfly_out[3]_28 [27]));
  (* DONT_TOUCH *) 
  Arbys__243 \Puf_Gen[3].Chain_Gen[28].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [27]),
        .in1(\ArbOut4[3]_7 [27]),
        .in2(\ArbOut4[3]_7 [27]),
        .in3(\ArbOut3[3]_8 [27]),
        .out1(\ArbOut1[3]_27 [28]),
        .out2(\ArbOut2[3]_26 [28]),
        .sel(Challenge[28]));
  (* DONT_TOUCH *) 
  Arbys__244 \Puf_Gen[3].Chain_Gen[28].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [28]),
        .in1(\ArbOut2[3]_26 [28]),
        .in2(\ArbOut2[3]_26 [28]),
        .in3(\ArbOut1[3]_27 [28]),
        .out1(\ArbOut3[3]_8 [28]),
        .out2(\ArbOut4[3]_7 [28]),
        .sel(\Butterfly_out[3]_28 [28]));
  (* DONT_TOUCH *) 
  Butterfly__122 \Puf_Gen[3].Chain_Gen[28].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [28]),
        .Pre(\ArbOut2[3]_26 [28]),
        .Q(\Butterfly_out[3]_28 [28]));
  (* DONT_TOUCH *) 
  Arbys__245 \Puf_Gen[3].Chain_Gen[29].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [28]),
        .in1(\ArbOut4[3]_7 [28]),
        .in2(\ArbOut4[3]_7 [28]),
        .in3(\ArbOut3[3]_8 [28]),
        .out1(\ArbOut1[3]_27 [29]),
        .out2(\ArbOut2[3]_26 [29]),
        .sel(Challenge[29]));
  (* DONT_TOUCH *) 
  Arbys__246 \Puf_Gen[3].Chain_Gen[29].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [29]),
        .in1(\ArbOut2[3]_26 [29]),
        .in2(\ArbOut2[3]_26 [29]),
        .in3(\ArbOut1[3]_27 [29]),
        .out1(\ArbOut3[3]_8 [29]),
        .out2(\ArbOut4[3]_7 [29]),
        .sel(\Butterfly_out[3]_28 [29]));
  (* DONT_TOUCH *) 
  Butterfly__123 \Puf_Gen[3].Chain_Gen[29].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [29]),
        .Pre(\ArbOut2[3]_26 [29]),
        .Q(\Butterfly_out[3]_28 [29]));
  (* DONT_TOUCH *) 
  Arbys__191 \Puf_Gen[3].Chain_Gen[2].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [1]),
        .in1(\ArbOut4[3]_7 [1]),
        .in2(\ArbOut4[3]_7 [1]),
        .in3(\ArbOut3[3]_8 [1]),
        .out1(\ArbOut1[3]_27 [2]),
        .out2(\ArbOut2[3]_26 [2]),
        .sel(Challenge[2]));
  (* DONT_TOUCH *) 
  Arbys__192 \Puf_Gen[3].Chain_Gen[2].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [2]),
        .in1(\ArbOut2[3]_26 [2]),
        .in2(\ArbOut2[3]_26 [2]),
        .in3(\ArbOut1[3]_27 [2]),
        .out1(\ArbOut3[3]_8 [2]),
        .out2(\ArbOut4[3]_7 [2]),
        .sel(\Butterfly_out[3]_28 [2]));
  (* DONT_TOUCH *) 
  Butterfly__96 \Puf_Gen[3].Chain_Gen[2].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [2]),
        .Pre(\ArbOut2[3]_26 [2]),
        .Q(\Butterfly_out[3]_28 [2]));
  (* DONT_TOUCH *) 
  Arbys__247 \Puf_Gen[3].Chain_Gen[30].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [29]),
        .in1(\ArbOut4[3]_7 [29]),
        .in2(\ArbOut4[3]_7 [29]),
        .in3(\ArbOut3[3]_8 [29]),
        .out1(\ArbOut1[3]_27 [30]),
        .out2(\ArbOut2[3]_26 [30]),
        .sel(Challenge[30]));
  (* DONT_TOUCH *) 
  Arbys__248 \Puf_Gen[3].Chain_Gen[30].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [30]),
        .in1(\ArbOut2[3]_26 [30]),
        .in2(\ArbOut2[3]_26 [30]),
        .in3(\ArbOut1[3]_27 [30]),
        .out1(\ArbOut3[3]_8 [30]),
        .out2(\ArbOut4[3]_7 [30]),
        .sel(\Butterfly_out[3]_28 [30]));
  (* DONT_TOUCH *) 
  Butterfly__124 \Puf_Gen[3].Chain_Gen[30].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [30]),
        .Pre(\ArbOut2[3]_26 [30]),
        .Q(\Butterfly_out[3]_28 [30]));
  (* DONT_TOUCH *) 
  DFF__6 \Puf_Gen[3].Chain_Gen[31].Last_Stage.DFF_inst 
       (.CLK(\ArbOut3[3]_8 [30]),
        .CLR(1'b0),
        .D(\ArbOut4[3]_7 [30]),
        .Pre(1'b0),
        .Q(Response[3]));
  (* DONT_TOUCH *) 
  Arbys__193 \Puf_Gen[3].Chain_Gen[3].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [2]),
        .in1(\ArbOut4[3]_7 [2]),
        .in2(\ArbOut4[3]_7 [2]),
        .in3(\ArbOut3[3]_8 [2]),
        .out1(\ArbOut1[3]_27 [3]),
        .out2(\ArbOut2[3]_26 [3]),
        .sel(Challenge[3]));
  (* DONT_TOUCH *) 
  Arbys__194 \Puf_Gen[3].Chain_Gen[3].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [3]),
        .in1(\ArbOut2[3]_26 [3]),
        .in2(\ArbOut2[3]_26 [3]),
        .in3(\ArbOut1[3]_27 [3]),
        .out1(\ArbOut3[3]_8 [3]),
        .out2(\ArbOut4[3]_7 [3]),
        .sel(\Butterfly_out[3]_28 [3]));
  (* DONT_TOUCH *) 
  Butterfly__97 \Puf_Gen[3].Chain_Gen[3].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [3]),
        .Pre(\ArbOut2[3]_26 [3]),
        .Q(\Butterfly_out[3]_28 [3]));
  (* DONT_TOUCH *) 
  Arbys__195 \Puf_Gen[3].Chain_Gen[4].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [3]),
        .in1(\ArbOut4[3]_7 [3]),
        .in2(\ArbOut4[3]_7 [3]),
        .in3(\ArbOut3[3]_8 [3]),
        .out1(\ArbOut1[3]_27 [4]),
        .out2(\ArbOut2[3]_26 [4]),
        .sel(Challenge[4]));
  (* DONT_TOUCH *) 
  Arbys__196 \Puf_Gen[3].Chain_Gen[4].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [4]),
        .in1(\ArbOut2[3]_26 [4]),
        .in2(\ArbOut2[3]_26 [4]),
        .in3(\ArbOut1[3]_27 [4]),
        .out1(\ArbOut3[3]_8 [4]),
        .out2(\ArbOut4[3]_7 [4]),
        .sel(\Butterfly_out[3]_28 [4]));
  (* DONT_TOUCH *) 
  Butterfly__98 \Puf_Gen[3].Chain_Gen[4].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [4]),
        .Pre(\ArbOut2[3]_26 [4]),
        .Q(\Butterfly_out[3]_28 [4]));
  (* DONT_TOUCH *) 
  Arbys__197 \Puf_Gen[3].Chain_Gen[5].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [4]),
        .in1(\ArbOut4[3]_7 [4]),
        .in2(\ArbOut4[3]_7 [4]),
        .in3(\ArbOut3[3]_8 [4]),
        .out1(\ArbOut1[3]_27 [5]),
        .out2(\ArbOut2[3]_26 [5]),
        .sel(Challenge[5]));
  (* DONT_TOUCH *) 
  Arbys__198 \Puf_Gen[3].Chain_Gen[5].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [5]),
        .in1(\ArbOut2[3]_26 [5]),
        .in2(\ArbOut2[3]_26 [5]),
        .in3(\ArbOut1[3]_27 [5]),
        .out1(\ArbOut3[3]_8 [5]),
        .out2(\ArbOut4[3]_7 [5]),
        .sel(\Butterfly_out[3]_28 [5]));
  (* DONT_TOUCH *) 
  Butterfly__99 \Puf_Gen[3].Chain_Gen[5].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [5]),
        .Pre(\ArbOut2[3]_26 [5]),
        .Q(\Butterfly_out[3]_28 [5]));
  (* DONT_TOUCH *) 
  Arbys__199 \Puf_Gen[3].Chain_Gen[6].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [5]),
        .in1(\ArbOut4[3]_7 [5]),
        .in2(\ArbOut4[3]_7 [5]),
        .in3(\ArbOut3[3]_8 [5]),
        .out1(\ArbOut1[3]_27 [6]),
        .out2(\ArbOut2[3]_26 [6]),
        .sel(Challenge[6]));
  (* DONT_TOUCH *) 
  Arbys__200 \Puf_Gen[3].Chain_Gen[6].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [6]),
        .in1(\ArbOut2[3]_26 [6]),
        .in2(\ArbOut2[3]_26 [6]),
        .in3(\ArbOut1[3]_27 [6]),
        .out1(\ArbOut3[3]_8 [6]),
        .out2(\ArbOut4[3]_7 [6]),
        .sel(\Butterfly_out[3]_28 [6]));
  (* DONT_TOUCH *) 
  Butterfly__100 \Puf_Gen[3].Chain_Gen[6].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [6]),
        .Pre(\ArbOut2[3]_26 [6]),
        .Q(\Butterfly_out[3]_28 [6]));
  (* DONT_TOUCH *) 
  Arbys__201 \Puf_Gen[3].Chain_Gen[7].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [6]),
        .in1(\ArbOut4[3]_7 [6]),
        .in2(\ArbOut4[3]_7 [6]),
        .in3(\ArbOut3[3]_8 [6]),
        .out1(\ArbOut1[3]_27 [7]),
        .out2(\ArbOut2[3]_26 [7]),
        .sel(Challenge[7]));
  (* DONT_TOUCH *) 
  Arbys__202 \Puf_Gen[3].Chain_Gen[7].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [7]),
        .in1(\ArbOut2[3]_26 [7]),
        .in2(\ArbOut2[3]_26 [7]),
        .in3(\ArbOut1[3]_27 [7]),
        .out1(\ArbOut3[3]_8 [7]),
        .out2(\ArbOut4[3]_7 [7]),
        .sel(\Butterfly_out[3]_28 [7]));
  (* DONT_TOUCH *) 
  Butterfly__101 \Puf_Gen[3].Chain_Gen[7].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [7]),
        .Pre(\ArbOut2[3]_26 [7]),
        .Q(\Butterfly_out[3]_28 [7]));
  (* DONT_TOUCH *) 
  Arbys__203 \Puf_Gen[3].Chain_Gen[8].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [7]),
        .in1(\ArbOut4[3]_7 [7]),
        .in2(\ArbOut4[3]_7 [7]),
        .in3(\ArbOut3[3]_8 [7]),
        .out1(\ArbOut1[3]_27 [8]),
        .out2(\ArbOut2[3]_26 [8]),
        .sel(Challenge[8]));
  (* DONT_TOUCH *) 
  Arbys__204 \Puf_Gen[3].Chain_Gen[8].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [8]),
        .in1(\ArbOut2[3]_26 [8]),
        .in2(\ArbOut2[3]_26 [8]),
        .in3(\ArbOut1[3]_27 [8]),
        .out1(\ArbOut3[3]_8 [8]),
        .out2(\ArbOut4[3]_7 [8]),
        .sel(\Butterfly_out[3]_28 [8]));
  (* DONT_TOUCH *) 
  Butterfly__102 \Puf_Gen[3].Chain_Gen[8].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [8]),
        .Pre(\ArbOut2[3]_26 [8]),
        .Q(\Butterfly_out[3]_28 [8]));
  (* DONT_TOUCH *) 
  Arbys__205 \Puf_Gen[3].Chain_Gen[9].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[3]_8 [8]),
        .in1(\ArbOut4[3]_7 [8]),
        .in2(\ArbOut4[3]_7 [8]),
        .in3(\ArbOut3[3]_8 [8]),
        .out1(\ArbOut1[3]_27 [9]),
        .out2(\ArbOut2[3]_26 [9]),
        .sel(Challenge[9]));
  (* DONT_TOUCH *) 
  Arbys__206 \Puf_Gen[3].Chain_Gen[9].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[3]_27 [9]),
        .in1(\ArbOut2[3]_26 [9]),
        .in2(\ArbOut2[3]_26 [9]),
        .in3(\ArbOut1[3]_27 [9]),
        .out1(\ArbOut3[3]_8 [9]),
        .out2(\ArbOut4[3]_7 [9]),
        .sel(\Butterfly_out[3]_28 [9]));
  (* DONT_TOUCH *) 
  Butterfly__103 \Puf_Gen[3].Chain_Gen[9].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[3]_27 [9]),
        .Pre(\ArbOut2[3]_26 [9]),
        .Q(\Butterfly_out[3]_28 [9]));
  (* DONT_TOUCH *) 
  Arbys__249 \Puf_Gen[4].Chain_Gen[0].First_ChainLink.ArbiterL1_inst 
       (.in0(en_puf),
        .in1(en_puf),
        .in2(en_puf),
        .in3(en_puf),
        .out1(\ArbOut1[4]_30 [0]),
        .out2(\ArbOut2[4]_29 [0]),
        .sel(Challenge[0]));
  (* DONT_TOUCH *) 
  Arbys__250 \Puf_Gen[4].Chain_Gen[0].First_ChainLink.ArbiterL2_inst 
       (.in0(\ArbOut1[4]_30 [0]),
        .in1(\ArbOut2[4]_29 [0]),
        .in2(\ArbOut2[4]_29 [0]),
        .in3(\ArbOut1[4]_30 [0]),
        .out1(\ArbOut3[4]_10 [0]),
        .out2(\ArbOut4[4]_9 [0]),
        .sel(\Butterfly_out[4]_31 [0]));
  (* DONT_TOUCH *) 
  Butterfly__125 \Puf_Gen[4].Chain_Gen[0].First_ChainLink.Butterfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [0]),
        .Pre(\ArbOut2[4]_29 [0]),
        .Q(\Butterfly_out[4]_31 [0]));
  (* DONT_TOUCH *) 
  Arbys__269 \Puf_Gen[4].Chain_Gen[10].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [9]),
        .in1(\ArbOut4[4]_9 [9]),
        .in2(\ArbOut4[4]_9 [9]),
        .in3(\ArbOut3[4]_10 [9]),
        .out1(\ArbOut1[4]_30 [10]),
        .out2(\ArbOut2[4]_29 [10]),
        .sel(Challenge[10]));
  (* DONT_TOUCH *) 
  Arbys__270 \Puf_Gen[4].Chain_Gen[10].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [10]),
        .in1(\ArbOut2[4]_29 [10]),
        .in2(\ArbOut2[4]_29 [10]),
        .in3(\ArbOut1[4]_30 [10]),
        .out1(\ArbOut3[4]_10 [10]),
        .out2(\ArbOut4[4]_9 [10]),
        .sel(\Butterfly_out[4]_31 [10]));
  (* DONT_TOUCH *) 
  Butterfly__135 \Puf_Gen[4].Chain_Gen[10].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [10]),
        .Pre(\ArbOut2[4]_29 [10]),
        .Q(\Butterfly_out[4]_31 [10]));
  (* DONT_TOUCH *) 
  Arbys__271 \Puf_Gen[4].Chain_Gen[11].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [10]),
        .in1(\ArbOut4[4]_9 [10]),
        .in2(\ArbOut4[4]_9 [10]),
        .in3(\ArbOut3[4]_10 [10]),
        .out1(\ArbOut1[4]_30 [11]),
        .out2(\ArbOut2[4]_29 [11]),
        .sel(Challenge[11]));
  (* DONT_TOUCH *) 
  Arbys__272 \Puf_Gen[4].Chain_Gen[11].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [11]),
        .in1(\ArbOut2[4]_29 [11]),
        .in2(\ArbOut2[4]_29 [11]),
        .in3(\ArbOut1[4]_30 [11]),
        .out1(\ArbOut3[4]_10 [11]),
        .out2(\ArbOut4[4]_9 [11]),
        .sel(\Butterfly_out[4]_31 [11]));
  (* DONT_TOUCH *) 
  Butterfly__136 \Puf_Gen[4].Chain_Gen[11].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [11]),
        .Pre(\ArbOut2[4]_29 [11]),
        .Q(\Butterfly_out[4]_31 [11]));
  (* DONT_TOUCH *) 
  Arbys__273 \Puf_Gen[4].Chain_Gen[12].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [11]),
        .in1(\ArbOut4[4]_9 [11]),
        .in2(\ArbOut4[4]_9 [11]),
        .in3(\ArbOut3[4]_10 [11]),
        .out1(\ArbOut1[4]_30 [12]),
        .out2(\ArbOut2[4]_29 [12]),
        .sel(Challenge[12]));
  (* DONT_TOUCH *) 
  Arbys__274 \Puf_Gen[4].Chain_Gen[12].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [12]),
        .in1(\ArbOut2[4]_29 [12]),
        .in2(\ArbOut2[4]_29 [12]),
        .in3(\ArbOut1[4]_30 [12]),
        .out1(\ArbOut3[4]_10 [12]),
        .out2(\ArbOut4[4]_9 [12]),
        .sel(\Butterfly_out[4]_31 [12]));
  (* DONT_TOUCH *) 
  Butterfly__137 \Puf_Gen[4].Chain_Gen[12].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [12]),
        .Pre(\ArbOut2[4]_29 [12]),
        .Q(\Butterfly_out[4]_31 [12]));
  (* DONT_TOUCH *) 
  Arbys__275 \Puf_Gen[4].Chain_Gen[13].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [12]),
        .in1(\ArbOut4[4]_9 [12]),
        .in2(\ArbOut4[4]_9 [12]),
        .in3(\ArbOut3[4]_10 [12]),
        .out1(\ArbOut1[4]_30 [13]),
        .out2(\ArbOut2[4]_29 [13]),
        .sel(Challenge[13]));
  (* DONT_TOUCH *) 
  Arbys__276 \Puf_Gen[4].Chain_Gen[13].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [13]),
        .in1(\ArbOut2[4]_29 [13]),
        .in2(\ArbOut2[4]_29 [13]),
        .in3(\ArbOut1[4]_30 [13]),
        .out1(\ArbOut3[4]_10 [13]),
        .out2(\ArbOut4[4]_9 [13]),
        .sel(\Butterfly_out[4]_31 [13]));
  (* DONT_TOUCH *) 
  Butterfly__138 \Puf_Gen[4].Chain_Gen[13].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [13]),
        .Pre(\ArbOut2[4]_29 [13]),
        .Q(\Butterfly_out[4]_31 [13]));
  (* DONT_TOUCH *) 
  Arbys__277 \Puf_Gen[4].Chain_Gen[14].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [13]),
        .in1(\ArbOut4[4]_9 [13]),
        .in2(\ArbOut4[4]_9 [13]),
        .in3(\ArbOut3[4]_10 [13]),
        .out1(\ArbOut1[4]_30 [14]),
        .out2(\ArbOut2[4]_29 [14]),
        .sel(Challenge[14]));
  (* DONT_TOUCH *) 
  Arbys__278 \Puf_Gen[4].Chain_Gen[14].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [14]),
        .in1(\ArbOut2[4]_29 [14]),
        .in2(\ArbOut2[4]_29 [14]),
        .in3(\ArbOut1[4]_30 [14]),
        .out1(\ArbOut3[4]_10 [14]),
        .out2(\ArbOut4[4]_9 [14]),
        .sel(\Butterfly_out[4]_31 [14]));
  (* DONT_TOUCH *) 
  Butterfly__139 \Puf_Gen[4].Chain_Gen[14].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [14]),
        .Pre(\ArbOut2[4]_29 [14]),
        .Q(\Butterfly_out[4]_31 [14]));
  (* DONT_TOUCH *) 
  Arbys__279 \Puf_Gen[4].Chain_Gen[15].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [14]),
        .in1(\ArbOut4[4]_9 [14]),
        .in2(\ArbOut4[4]_9 [14]),
        .in3(\ArbOut3[4]_10 [14]),
        .out1(\ArbOut1[4]_30 [15]),
        .out2(\ArbOut2[4]_29 [15]),
        .sel(Challenge[15]));
  (* DONT_TOUCH *) 
  Arbys__280 \Puf_Gen[4].Chain_Gen[15].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [15]),
        .in1(\ArbOut2[4]_29 [15]),
        .in2(\ArbOut2[4]_29 [15]),
        .in3(\ArbOut1[4]_30 [15]),
        .out1(\ArbOut3[4]_10 [15]),
        .out2(\ArbOut4[4]_9 [15]),
        .sel(\Butterfly_out[4]_31 [15]));
  (* DONT_TOUCH *) 
  Butterfly__140 \Puf_Gen[4].Chain_Gen[15].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [15]),
        .Pre(\ArbOut2[4]_29 [15]),
        .Q(\Butterfly_out[4]_31 [15]));
  (* DONT_TOUCH *) 
  Arbys__281 \Puf_Gen[4].Chain_Gen[16].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [15]),
        .in1(\ArbOut4[4]_9 [15]),
        .in2(\ArbOut4[4]_9 [15]),
        .in3(\ArbOut3[4]_10 [15]),
        .out1(\ArbOut1[4]_30 [16]),
        .out2(\ArbOut2[4]_29 [16]),
        .sel(Challenge[16]));
  (* DONT_TOUCH *) 
  Arbys__282 \Puf_Gen[4].Chain_Gen[16].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [16]),
        .in1(\ArbOut2[4]_29 [16]),
        .in2(\ArbOut2[4]_29 [16]),
        .in3(\ArbOut1[4]_30 [16]),
        .out1(\ArbOut3[4]_10 [16]),
        .out2(\ArbOut4[4]_9 [16]),
        .sel(\Butterfly_out[4]_31 [16]));
  (* DONT_TOUCH *) 
  Butterfly__141 \Puf_Gen[4].Chain_Gen[16].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [16]),
        .Pre(\ArbOut2[4]_29 [16]),
        .Q(\Butterfly_out[4]_31 [16]));
  (* DONT_TOUCH *) 
  Arbys__283 \Puf_Gen[4].Chain_Gen[17].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [16]),
        .in1(\ArbOut4[4]_9 [16]),
        .in2(\ArbOut4[4]_9 [16]),
        .in3(\ArbOut3[4]_10 [16]),
        .out1(\ArbOut1[4]_30 [17]),
        .out2(\ArbOut2[4]_29 [17]),
        .sel(Challenge[17]));
  (* DONT_TOUCH *) 
  Arbys__284 \Puf_Gen[4].Chain_Gen[17].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [17]),
        .in1(\ArbOut2[4]_29 [17]),
        .in2(\ArbOut2[4]_29 [17]),
        .in3(\ArbOut1[4]_30 [17]),
        .out1(\ArbOut3[4]_10 [17]),
        .out2(\ArbOut4[4]_9 [17]),
        .sel(\Butterfly_out[4]_31 [17]));
  (* DONT_TOUCH *) 
  Butterfly__142 \Puf_Gen[4].Chain_Gen[17].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [17]),
        .Pre(\ArbOut2[4]_29 [17]),
        .Q(\Butterfly_out[4]_31 [17]));
  (* DONT_TOUCH *) 
  Arbys__285 \Puf_Gen[4].Chain_Gen[18].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [17]),
        .in1(\ArbOut4[4]_9 [17]),
        .in2(\ArbOut4[4]_9 [17]),
        .in3(\ArbOut3[4]_10 [17]),
        .out1(\ArbOut1[4]_30 [18]),
        .out2(\ArbOut2[4]_29 [18]),
        .sel(Challenge[18]));
  (* DONT_TOUCH *) 
  Arbys__286 \Puf_Gen[4].Chain_Gen[18].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [18]),
        .in1(\ArbOut2[4]_29 [18]),
        .in2(\ArbOut2[4]_29 [18]),
        .in3(\ArbOut1[4]_30 [18]),
        .out1(\ArbOut3[4]_10 [18]),
        .out2(\ArbOut4[4]_9 [18]),
        .sel(\Butterfly_out[4]_31 [18]));
  (* DONT_TOUCH *) 
  Butterfly__143 \Puf_Gen[4].Chain_Gen[18].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [18]),
        .Pre(\ArbOut2[4]_29 [18]),
        .Q(\Butterfly_out[4]_31 [18]));
  (* DONT_TOUCH *) 
  Arbys__287 \Puf_Gen[4].Chain_Gen[19].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [18]),
        .in1(\ArbOut4[4]_9 [18]),
        .in2(\ArbOut4[4]_9 [18]),
        .in3(\ArbOut3[4]_10 [18]),
        .out1(\ArbOut1[4]_30 [19]),
        .out2(\ArbOut2[4]_29 [19]),
        .sel(Challenge[19]));
  (* DONT_TOUCH *) 
  Arbys__288 \Puf_Gen[4].Chain_Gen[19].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [19]),
        .in1(\ArbOut2[4]_29 [19]),
        .in2(\ArbOut2[4]_29 [19]),
        .in3(\ArbOut1[4]_30 [19]),
        .out1(\ArbOut3[4]_10 [19]),
        .out2(\ArbOut4[4]_9 [19]),
        .sel(\Butterfly_out[4]_31 [19]));
  (* DONT_TOUCH *) 
  Butterfly__144 \Puf_Gen[4].Chain_Gen[19].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [19]),
        .Pre(\ArbOut2[4]_29 [19]),
        .Q(\Butterfly_out[4]_31 [19]));
  (* DONT_TOUCH *) 
  Arbys__251 \Puf_Gen[4].Chain_Gen[1].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [0]),
        .in1(\ArbOut4[4]_9 [0]),
        .in2(\ArbOut4[4]_9 [0]),
        .in3(\ArbOut3[4]_10 [0]),
        .out1(\ArbOut1[4]_30 [1]),
        .out2(\ArbOut2[4]_29 [1]),
        .sel(Challenge[1]));
  (* DONT_TOUCH *) 
  Arbys__252 \Puf_Gen[4].Chain_Gen[1].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [1]),
        .in1(\ArbOut2[4]_29 [1]),
        .in2(\ArbOut2[4]_29 [1]),
        .in3(\ArbOut1[4]_30 [1]),
        .out1(\ArbOut3[4]_10 [1]),
        .out2(\ArbOut4[4]_9 [1]),
        .sel(\Butterfly_out[4]_31 [1]));
  (* DONT_TOUCH *) 
  Butterfly__126 \Puf_Gen[4].Chain_Gen[1].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [1]),
        .Pre(\ArbOut2[4]_29 [1]),
        .Q(\Butterfly_out[4]_31 [1]));
  (* DONT_TOUCH *) 
  Arbys__289 \Puf_Gen[4].Chain_Gen[20].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [19]),
        .in1(\ArbOut4[4]_9 [19]),
        .in2(\ArbOut4[4]_9 [19]),
        .in3(\ArbOut3[4]_10 [19]),
        .out1(\ArbOut1[4]_30 [20]),
        .out2(\ArbOut2[4]_29 [20]),
        .sel(Challenge[20]));
  (* DONT_TOUCH *) 
  Arbys__290 \Puf_Gen[4].Chain_Gen[20].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [20]),
        .in1(\ArbOut2[4]_29 [20]),
        .in2(\ArbOut2[4]_29 [20]),
        .in3(\ArbOut1[4]_30 [20]),
        .out1(\ArbOut3[4]_10 [20]),
        .out2(\ArbOut4[4]_9 [20]),
        .sel(\Butterfly_out[4]_31 [20]));
  (* DONT_TOUCH *) 
  Butterfly__145 \Puf_Gen[4].Chain_Gen[20].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [20]),
        .Pre(\ArbOut2[4]_29 [20]),
        .Q(\Butterfly_out[4]_31 [20]));
  (* DONT_TOUCH *) 
  Arbys__291 \Puf_Gen[4].Chain_Gen[21].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [20]),
        .in1(\ArbOut4[4]_9 [20]),
        .in2(\ArbOut4[4]_9 [20]),
        .in3(\ArbOut3[4]_10 [20]),
        .out1(\ArbOut1[4]_30 [21]),
        .out2(\ArbOut2[4]_29 [21]),
        .sel(Challenge[21]));
  (* DONT_TOUCH *) 
  Arbys__292 \Puf_Gen[4].Chain_Gen[21].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [21]),
        .in1(\ArbOut2[4]_29 [21]),
        .in2(\ArbOut2[4]_29 [21]),
        .in3(\ArbOut1[4]_30 [21]),
        .out1(\ArbOut3[4]_10 [21]),
        .out2(\ArbOut4[4]_9 [21]),
        .sel(\Butterfly_out[4]_31 [21]));
  (* DONT_TOUCH *) 
  Butterfly__146 \Puf_Gen[4].Chain_Gen[21].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [21]),
        .Pre(\ArbOut2[4]_29 [21]),
        .Q(\Butterfly_out[4]_31 [21]));
  (* DONT_TOUCH *) 
  Arbys__293 \Puf_Gen[4].Chain_Gen[22].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [21]),
        .in1(\ArbOut4[4]_9 [21]),
        .in2(\ArbOut4[4]_9 [21]),
        .in3(\ArbOut3[4]_10 [21]),
        .out1(\ArbOut1[4]_30 [22]),
        .out2(\ArbOut2[4]_29 [22]),
        .sel(Challenge[22]));
  (* DONT_TOUCH *) 
  Arbys__294 \Puf_Gen[4].Chain_Gen[22].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [22]),
        .in1(\ArbOut2[4]_29 [22]),
        .in2(\ArbOut2[4]_29 [22]),
        .in3(\ArbOut1[4]_30 [22]),
        .out1(\ArbOut3[4]_10 [22]),
        .out2(\ArbOut4[4]_9 [22]),
        .sel(\Butterfly_out[4]_31 [22]));
  (* DONT_TOUCH *) 
  Butterfly__147 \Puf_Gen[4].Chain_Gen[22].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [22]),
        .Pre(\ArbOut2[4]_29 [22]),
        .Q(\Butterfly_out[4]_31 [22]));
  (* DONT_TOUCH *) 
  Arbys__295 \Puf_Gen[4].Chain_Gen[23].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [22]),
        .in1(\ArbOut4[4]_9 [22]),
        .in2(\ArbOut4[4]_9 [22]),
        .in3(\ArbOut3[4]_10 [22]),
        .out1(\ArbOut1[4]_30 [23]),
        .out2(\ArbOut2[4]_29 [23]),
        .sel(Challenge[23]));
  (* DONT_TOUCH *) 
  Arbys__296 \Puf_Gen[4].Chain_Gen[23].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [23]),
        .in1(\ArbOut2[4]_29 [23]),
        .in2(\ArbOut2[4]_29 [23]),
        .in3(\ArbOut1[4]_30 [23]),
        .out1(\ArbOut3[4]_10 [23]),
        .out2(\ArbOut4[4]_9 [23]),
        .sel(\Butterfly_out[4]_31 [23]));
  (* DONT_TOUCH *) 
  Butterfly__148 \Puf_Gen[4].Chain_Gen[23].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [23]),
        .Pre(\ArbOut2[4]_29 [23]),
        .Q(\Butterfly_out[4]_31 [23]));
  (* DONT_TOUCH *) 
  Arbys__297 \Puf_Gen[4].Chain_Gen[24].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [23]),
        .in1(\ArbOut4[4]_9 [23]),
        .in2(\ArbOut4[4]_9 [23]),
        .in3(\ArbOut3[4]_10 [23]),
        .out1(\ArbOut1[4]_30 [24]),
        .out2(\ArbOut2[4]_29 [24]),
        .sel(Challenge[24]));
  (* DONT_TOUCH *) 
  Arbys__298 \Puf_Gen[4].Chain_Gen[24].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [24]),
        .in1(\ArbOut2[4]_29 [24]),
        .in2(\ArbOut2[4]_29 [24]),
        .in3(\ArbOut1[4]_30 [24]),
        .out1(\ArbOut3[4]_10 [24]),
        .out2(\ArbOut4[4]_9 [24]),
        .sel(\Butterfly_out[4]_31 [24]));
  (* DONT_TOUCH *) 
  Butterfly__149 \Puf_Gen[4].Chain_Gen[24].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [24]),
        .Pre(\ArbOut2[4]_29 [24]),
        .Q(\Butterfly_out[4]_31 [24]));
  (* DONT_TOUCH *) 
  Arbys__299 \Puf_Gen[4].Chain_Gen[25].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [24]),
        .in1(\ArbOut4[4]_9 [24]),
        .in2(\ArbOut4[4]_9 [24]),
        .in3(\ArbOut3[4]_10 [24]),
        .out1(\ArbOut1[4]_30 [25]),
        .out2(\ArbOut2[4]_29 [25]),
        .sel(Challenge[25]));
  (* DONT_TOUCH *) 
  Arbys__300 \Puf_Gen[4].Chain_Gen[25].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [25]),
        .in1(\ArbOut2[4]_29 [25]),
        .in2(\ArbOut2[4]_29 [25]),
        .in3(\ArbOut1[4]_30 [25]),
        .out1(\ArbOut3[4]_10 [25]),
        .out2(\ArbOut4[4]_9 [25]),
        .sel(\Butterfly_out[4]_31 [25]));
  (* DONT_TOUCH *) 
  Butterfly__150 \Puf_Gen[4].Chain_Gen[25].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [25]),
        .Pre(\ArbOut2[4]_29 [25]),
        .Q(\Butterfly_out[4]_31 [25]));
  (* DONT_TOUCH *) 
  Arbys__301 \Puf_Gen[4].Chain_Gen[26].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [25]),
        .in1(\ArbOut4[4]_9 [25]),
        .in2(\ArbOut4[4]_9 [25]),
        .in3(\ArbOut3[4]_10 [25]),
        .out1(\ArbOut1[4]_30 [26]),
        .out2(\ArbOut2[4]_29 [26]),
        .sel(Challenge[26]));
  (* DONT_TOUCH *) 
  Arbys__302 \Puf_Gen[4].Chain_Gen[26].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [26]),
        .in1(\ArbOut2[4]_29 [26]),
        .in2(\ArbOut2[4]_29 [26]),
        .in3(\ArbOut1[4]_30 [26]),
        .out1(\ArbOut3[4]_10 [26]),
        .out2(\ArbOut4[4]_9 [26]),
        .sel(\Butterfly_out[4]_31 [26]));
  (* DONT_TOUCH *) 
  Butterfly__151 \Puf_Gen[4].Chain_Gen[26].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [26]),
        .Pre(\ArbOut2[4]_29 [26]),
        .Q(\Butterfly_out[4]_31 [26]));
  (* DONT_TOUCH *) 
  Arbys__303 \Puf_Gen[4].Chain_Gen[27].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [26]),
        .in1(\ArbOut4[4]_9 [26]),
        .in2(\ArbOut4[4]_9 [26]),
        .in3(\ArbOut3[4]_10 [26]),
        .out1(\ArbOut1[4]_30 [27]),
        .out2(\ArbOut2[4]_29 [27]),
        .sel(Challenge[27]));
  (* DONT_TOUCH *) 
  Arbys__304 \Puf_Gen[4].Chain_Gen[27].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [27]),
        .in1(\ArbOut2[4]_29 [27]),
        .in2(\ArbOut2[4]_29 [27]),
        .in3(\ArbOut1[4]_30 [27]),
        .out1(\ArbOut3[4]_10 [27]),
        .out2(\ArbOut4[4]_9 [27]),
        .sel(\Butterfly_out[4]_31 [27]));
  (* DONT_TOUCH *) 
  Butterfly__152 \Puf_Gen[4].Chain_Gen[27].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [27]),
        .Pre(\ArbOut2[4]_29 [27]),
        .Q(\Butterfly_out[4]_31 [27]));
  (* DONT_TOUCH *) 
  Arbys__305 \Puf_Gen[4].Chain_Gen[28].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [27]),
        .in1(\ArbOut4[4]_9 [27]),
        .in2(\ArbOut4[4]_9 [27]),
        .in3(\ArbOut3[4]_10 [27]),
        .out1(\ArbOut1[4]_30 [28]),
        .out2(\ArbOut2[4]_29 [28]),
        .sel(Challenge[28]));
  (* DONT_TOUCH *) 
  Arbys__306 \Puf_Gen[4].Chain_Gen[28].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [28]),
        .in1(\ArbOut2[4]_29 [28]),
        .in2(\ArbOut2[4]_29 [28]),
        .in3(\ArbOut1[4]_30 [28]),
        .out1(\ArbOut3[4]_10 [28]),
        .out2(\ArbOut4[4]_9 [28]),
        .sel(\Butterfly_out[4]_31 [28]));
  (* DONT_TOUCH *) 
  Butterfly__153 \Puf_Gen[4].Chain_Gen[28].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [28]),
        .Pre(\ArbOut2[4]_29 [28]),
        .Q(\Butterfly_out[4]_31 [28]));
  (* DONT_TOUCH *) 
  Arbys__307 \Puf_Gen[4].Chain_Gen[29].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [28]),
        .in1(\ArbOut4[4]_9 [28]),
        .in2(\ArbOut4[4]_9 [28]),
        .in3(\ArbOut3[4]_10 [28]),
        .out1(\ArbOut1[4]_30 [29]),
        .out2(\ArbOut2[4]_29 [29]),
        .sel(Challenge[29]));
  (* DONT_TOUCH *) 
  Arbys__308 \Puf_Gen[4].Chain_Gen[29].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [29]),
        .in1(\ArbOut2[4]_29 [29]),
        .in2(\ArbOut2[4]_29 [29]),
        .in3(\ArbOut1[4]_30 [29]),
        .out1(\ArbOut3[4]_10 [29]),
        .out2(\ArbOut4[4]_9 [29]),
        .sel(\Butterfly_out[4]_31 [29]));
  (* DONT_TOUCH *) 
  Butterfly__154 \Puf_Gen[4].Chain_Gen[29].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [29]),
        .Pre(\ArbOut2[4]_29 [29]),
        .Q(\Butterfly_out[4]_31 [29]));
  (* DONT_TOUCH *) 
  Arbys__253 \Puf_Gen[4].Chain_Gen[2].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [1]),
        .in1(\ArbOut4[4]_9 [1]),
        .in2(\ArbOut4[4]_9 [1]),
        .in3(\ArbOut3[4]_10 [1]),
        .out1(\ArbOut1[4]_30 [2]),
        .out2(\ArbOut2[4]_29 [2]),
        .sel(Challenge[2]));
  (* DONT_TOUCH *) 
  Arbys__254 \Puf_Gen[4].Chain_Gen[2].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [2]),
        .in1(\ArbOut2[4]_29 [2]),
        .in2(\ArbOut2[4]_29 [2]),
        .in3(\ArbOut1[4]_30 [2]),
        .out1(\ArbOut3[4]_10 [2]),
        .out2(\ArbOut4[4]_9 [2]),
        .sel(\Butterfly_out[4]_31 [2]));
  (* DONT_TOUCH *) 
  Butterfly__127 \Puf_Gen[4].Chain_Gen[2].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [2]),
        .Pre(\ArbOut2[4]_29 [2]),
        .Q(\Butterfly_out[4]_31 [2]));
  (* DONT_TOUCH *) 
  Arbys__309 \Puf_Gen[4].Chain_Gen[30].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [29]),
        .in1(\ArbOut4[4]_9 [29]),
        .in2(\ArbOut4[4]_9 [29]),
        .in3(\ArbOut3[4]_10 [29]),
        .out1(\ArbOut1[4]_30 [30]),
        .out2(\ArbOut2[4]_29 [30]),
        .sel(Challenge[30]));
  (* DONT_TOUCH *) 
  Arbys__310 \Puf_Gen[4].Chain_Gen[30].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [30]),
        .in1(\ArbOut2[4]_29 [30]),
        .in2(\ArbOut2[4]_29 [30]),
        .in3(\ArbOut1[4]_30 [30]),
        .out1(\ArbOut3[4]_10 [30]),
        .out2(\ArbOut4[4]_9 [30]),
        .sel(\Butterfly_out[4]_31 [30]));
  (* DONT_TOUCH *) 
  Butterfly__155 \Puf_Gen[4].Chain_Gen[30].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [30]),
        .Pre(\ArbOut2[4]_29 [30]),
        .Q(\Butterfly_out[4]_31 [30]));
  (* DONT_TOUCH *) 
  DFF__7 \Puf_Gen[4].Chain_Gen[31].Last_Stage.DFF_inst 
       (.CLK(\ArbOut3[4]_10 [30]),
        .CLR(1'b0),
        .D(\ArbOut4[4]_9 [30]),
        .Pre(1'b0),
        .Q(Response[4]));
  (* DONT_TOUCH *) 
  Arbys__255 \Puf_Gen[4].Chain_Gen[3].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [2]),
        .in1(\ArbOut4[4]_9 [2]),
        .in2(\ArbOut4[4]_9 [2]),
        .in3(\ArbOut3[4]_10 [2]),
        .out1(\ArbOut1[4]_30 [3]),
        .out2(\ArbOut2[4]_29 [3]),
        .sel(Challenge[3]));
  (* DONT_TOUCH *) 
  Arbys__256 \Puf_Gen[4].Chain_Gen[3].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [3]),
        .in1(\ArbOut2[4]_29 [3]),
        .in2(\ArbOut2[4]_29 [3]),
        .in3(\ArbOut1[4]_30 [3]),
        .out1(\ArbOut3[4]_10 [3]),
        .out2(\ArbOut4[4]_9 [3]),
        .sel(\Butterfly_out[4]_31 [3]));
  (* DONT_TOUCH *) 
  Butterfly__128 \Puf_Gen[4].Chain_Gen[3].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [3]),
        .Pre(\ArbOut2[4]_29 [3]),
        .Q(\Butterfly_out[4]_31 [3]));
  (* DONT_TOUCH *) 
  Arbys__257 \Puf_Gen[4].Chain_Gen[4].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [3]),
        .in1(\ArbOut4[4]_9 [3]),
        .in2(\ArbOut4[4]_9 [3]),
        .in3(\ArbOut3[4]_10 [3]),
        .out1(\ArbOut1[4]_30 [4]),
        .out2(\ArbOut2[4]_29 [4]),
        .sel(Challenge[4]));
  (* DONT_TOUCH *) 
  Arbys__258 \Puf_Gen[4].Chain_Gen[4].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [4]),
        .in1(\ArbOut2[4]_29 [4]),
        .in2(\ArbOut2[4]_29 [4]),
        .in3(\ArbOut1[4]_30 [4]),
        .out1(\ArbOut3[4]_10 [4]),
        .out2(\ArbOut4[4]_9 [4]),
        .sel(\Butterfly_out[4]_31 [4]));
  (* DONT_TOUCH *) 
  Butterfly__129 \Puf_Gen[4].Chain_Gen[4].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [4]),
        .Pre(\ArbOut2[4]_29 [4]),
        .Q(\Butterfly_out[4]_31 [4]));
  (* DONT_TOUCH *) 
  Arbys__259 \Puf_Gen[4].Chain_Gen[5].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [4]),
        .in1(\ArbOut4[4]_9 [4]),
        .in2(\ArbOut4[4]_9 [4]),
        .in3(\ArbOut3[4]_10 [4]),
        .out1(\ArbOut1[4]_30 [5]),
        .out2(\ArbOut2[4]_29 [5]),
        .sel(Challenge[5]));
  (* DONT_TOUCH *) 
  Arbys__260 \Puf_Gen[4].Chain_Gen[5].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [5]),
        .in1(\ArbOut2[4]_29 [5]),
        .in2(\ArbOut2[4]_29 [5]),
        .in3(\ArbOut1[4]_30 [5]),
        .out1(\ArbOut3[4]_10 [5]),
        .out2(\ArbOut4[4]_9 [5]),
        .sel(\Butterfly_out[4]_31 [5]));
  (* DONT_TOUCH *) 
  Butterfly__130 \Puf_Gen[4].Chain_Gen[5].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [5]),
        .Pre(\ArbOut2[4]_29 [5]),
        .Q(\Butterfly_out[4]_31 [5]));
  (* DONT_TOUCH *) 
  Arbys__261 \Puf_Gen[4].Chain_Gen[6].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [5]),
        .in1(\ArbOut4[4]_9 [5]),
        .in2(\ArbOut4[4]_9 [5]),
        .in3(\ArbOut3[4]_10 [5]),
        .out1(\ArbOut1[4]_30 [6]),
        .out2(\ArbOut2[4]_29 [6]),
        .sel(Challenge[6]));
  (* DONT_TOUCH *) 
  Arbys__262 \Puf_Gen[4].Chain_Gen[6].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [6]),
        .in1(\ArbOut2[4]_29 [6]),
        .in2(\ArbOut2[4]_29 [6]),
        .in3(\ArbOut1[4]_30 [6]),
        .out1(\ArbOut3[4]_10 [6]),
        .out2(\ArbOut4[4]_9 [6]),
        .sel(\Butterfly_out[4]_31 [6]));
  (* DONT_TOUCH *) 
  Butterfly__131 \Puf_Gen[4].Chain_Gen[6].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [6]),
        .Pre(\ArbOut2[4]_29 [6]),
        .Q(\Butterfly_out[4]_31 [6]));
  (* DONT_TOUCH *) 
  Arbys__263 \Puf_Gen[4].Chain_Gen[7].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [6]),
        .in1(\ArbOut4[4]_9 [6]),
        .in2(\ArbOut4[4]_9 [6]),
        .in3(\ArbOut3[4]_10 [6]),
        .out1(\ArbOut1[4]_30 [7]),
        .out2(\ArbOut2[4]_29 [7]),
        .sel(Challenge[7]));
  (* DONT_TOUCH *) 
  Arbys__264 \Puf_Gen[4].Chain_Gen[7].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [7]),
        .in1(\ArbOut2[4]_29 [7]),
        .in2(\ArbOut2[4]_29 [7]),
        .in3(\ArbOut1[4]_30 [7]),
        .out1(\ArbOut3[4]_10 [7]),
        .out2(\ArbOut4[4]_9 [7]),
        .sel(\Butterfly_out[4]_31 [7]));
  (* DONT_TOUCH *) 
  Butterfly__132 \Puf_Gen[4].Chain_Gen[7].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [7]),
        .Pre(\ArbOut2[4]_29 [7]),
        .Q(\Butterfly_out[4]_31 [7]));
  (* DONT_TOUCH *) 
  Arbys__265 \Puf_Gen[4].Chain_Gen[8].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [7]),
        .in1(\ArbOut4[4]_9 [7]),
        .in2(\ArbOut4[4]_9 [7]),
        .in3(\ArbOut3[4]_10 [7]),
        .out1(\ArbOut1[4]_30 [8]),
        .out2(\ArbOut2[4]_29 [8]),
        .sel(Challenge[8]));
  (* DONT_TOUCH *) 
  Arbys__266 \Puf_Gen[4].Chain_Gen[8].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [8]),
        .in1(\ArbOut2[4]_29 [8]),
        .in2(\ArbOut2[4]_29 [8]),
        .in3(\ArbOut1[4]_30 [8]),
        .out1(\ArbOut3[4]_10 [8]),
        .out2(\ArbOut4[4]_9 [8]),
        .sel(\Butterfly_out[4]_31 [8]));
  (* DONT_TOUCH *) 
  Butterfly__133 \Puf_Gen[4].Chain_Gen[8].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [8]),
        .Pre(\ArbOut2[4]_29 [8]),
        .Q(\Butterfly_out[4]_31 [8]));
  (* DONT_TOUCH *) 
  Arbys__267 \Puf_Gen[4].Chain_Gen[9].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[4]_10 [8]),
        .in1(\ArbOut4[4]_9 [8]),
        .in2(\ArbOut4[4]_9 [8]),
        .in3(\ArbOut3[4]_10 [8]),
        .out1(\ArbOut1[4]_30 [9]),
        .out2(\ArbOut2[4]_29 [9]),
        .sel(Challenge[9]));
  (* DONT_TOUCH *) 
  Arbys__268 \Puf_Gen[4].Chain_Gen[9].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[4]_30 [9]),
        .in1(\ArbOut2[4]_29 [9]),
        .in2(\ArbOut2[4]_29 [9]),
        .in3(\ArbOut1[4]_30 [9]),
        .out1(\ArbOut3[4]_10 [9]),
        .out2(\ArbOut4[4]_9 [9]),
        .sel(\Butterfly_out[4]_31 [9]));
  (* DONT_TOUCH *) 
  Butterfly__134 \Puf_Gen[4].Chain_Gen[9].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[4]_30 [9]),
        .Pre(\ArbOut2[4]_29 [9]),
        .Q(\Butterfly_out[4]_31 [9]));
  (* DONT_TOUCH *) 
  Arbys__311 \Puf_Gen[5].Chain_Gen[0].First_ChainLink.ArbiterL1_inst 
       (.in0(en_puf),
        .in1(en_puf),
        .in2(en_puf),
        .in3(en_puf),
        .out1(\ArbOut1[5]_33 [0]),
        .out2(\ArbOut2[5]_32 [0]),
        .sel(Challenge[0]));
  (* DONT_TOUCH *) 
  Arbys__312 \Puf_Gen[5].Chain_Gen[0].First_ChainLink.ArbiterL2_inst 
       (.in0(\ArbOut1[5]_33 [0]),
        .in1(\ArbOut2[5]_32 [0]),
        .in2(\ArbOut2[5]_32 [0]),
        .in3(\ArbOut1[5]_33 [0]),
        .out1(\ArbOut3[5]_12 [0]),
        .out2(\ArbOut4[5]_11 [0]),
        .sel(\Butterfly_out[5]_34 [0]));
  (* DONT_TOUCH *) 
  Butterfly__156 \Puf_Gen[5].Chain_Gen[0].First_ChainLink.Butterfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [0]),
        .Pre(\ArbOut2[5]_32 [0]),
        .Q(\Butterfly_out[5]_34 [0]));
  (* DONT_TOUCH *) 
  Arbys__331 \Puf_Gen[5].Chain_Gen[10].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [9]),
        .in1(\ArbOut4[5]_11 [9]),
        .in2(\ArbOut4[5]_11 [9]),
        .in3(\ArbOut3[5]_12 [9]),
        .out1(\ArbOut1[5]_33 [10]),
        .out2(\ArbOut2[5]_32 [10]),
        .sel(Challenge[10]));
  (* DONT_TOUCH *) 
  Arbys__332 \Puf_Gen[5].Chain_Gen[10].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [10]),
        .in1(\ArbOut2[5]_32 [10]),
        .in2(\ArbOut2[5]_32 [10]),
        .in3(\ArbOut1[5]_33 [10]),
        .out1(\ArbOut3[5]_12 [10]),
        .out2(\ArbOut4[5]_11 [10]),
        .sel(\Butterfly_out[5]_34 [10]));
  (* DONT_TOUCH *) 
  Butterfly__166 \Puf_Gen[5].Chain_Gen[10].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [10]),
        .Pre(\ArbOut2[5]_32 [10]),
        .Q(\Butterfly_out[5]_34 [10]));
  (* DONT_TOUCH *) 
  Arbys__333 \Puf_Gen[5].Chain_Gen[11].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [10]),
        .in1(\ArbOut4[5]_11 [10]),
        .in2(\ArbOut4[5]_11 [10]),
        .in3(\ArbOut3[5]_12 [10]),
        .out1(\ArbOut1[5]_33 [11]),
        .out2(\ArbOut2[5]_32 [11]),
        .sel(Challenge[11]));
  (* DONT_TOUCH *) 
  Arbys__334 \Puf_Gen[5].Chain_Gen[11].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [11]),
        .in1(\ArbOut2[5]_32 [11]),
        .in2(\ArbOut2[5]_32 [11]),
        .in3(\ArbOut1[5]_33 [11]),
        .out1(\ArbOut3[5]_12 [11]),
        .out2(\ArbOut4[5]_11 [11]),
        .sel(\Butterfly_out[5]_34 [11]));
  (* DONT_TOUCH *) 
  Butterfly__167 \Puf_Gen[5].Chain_Gen[11].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [11]),
        .Pre(\ArbOut2[5]_32 [11]),
        .Q(\Butterfly_out[5]_34 [11]));
  (* DONT_TOUCH *) 
  Arbys__335 \Puf_Gen[5].Chain_Gen[12].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [11]),
        .in1(\ArbOut4[5]_11 [11]),
        .in2(\ArbOut4[5]_11 [11]),
        .in3(\ArbOut3[5]_12 [11]),
        .out1(\ArbOut1[5]_33 [12]),
        .out2(\ArbOut2[5]_32 [12]),
        .sel(Challenge[12]));
  (* DONT_TOUCH *) 
  Arbys__336 \Puf_Gen[5].Chain_Gen[12].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [12]),
        .in1(\ArbOut2[5]_32 [12]),
        .in2(\ArbOut2[5]_32 [12]),
        .in3(\ArbOut1[5]_33 [12]),
        .out1(\ArbOut3[5]_12 [12]),
        .out2(\ArbOut4[5]_11 [12]),
        .sel(\Butterfly_out[5]_34 [12]));
  (* DONT_TOUCH *) 
  Butterfly__168 \Puf_Gen[5].Chain_Gen[12].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [12]),
        .Pre(\ArbOut2[5]_32 [12]),
        .Q(\Butterfly_out[5]_34 [12]));
  (* DONT_TOUCH *) 
  Arbys__337 \Puf_Gen[5].Chain_Gen[13].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [12]),
        .in1(\ArbOut4[5]_11 [12]),
        .in2(\ArbOut4[5]_11 [12]),
        .in3(\ArbOut3[5]_12 [12]),
        .out1(\ArbOut1[5]_33 [13]),
        .out2(\ArbOut2[5]_32 [13]),
        .sel(Challenge[13]));
  (* DONT_TOUCH *) 
  Arbys__338 \Puf_Gen[5].Chain_Gen[13].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [13]),
        .in1(\ArbOut2[5]_32 [13]),
        .in2(\ArbOut2[5]_32 [13]),
        .in3(\ArbOut1[5]_33 [13]),
        .out1(\ArbOut3[5]_12 [13]),
        .out2(\ArbOut4[5]_11 [13]),
        .sel(\Butterfly_out[5]_34 [13]));
  (* DONT_TOUCH *) 
  Butterfly__169 \Puf_Gen[5].Chain_Gen[13].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [13]),
        .Pre(\ArbOut2[5]_32 [13]),
        .Q(\Butterfly_out[5]_34 [13]));
  (* DONT_TOUCH *) 
  Arbys__339 \Puf_Gen[5].Chain_Gen[14].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [13]),
        .in1(\ArbOut4[5]_11 [13]),
        .in2(\ArbOut4[5]_11 [13]),
        .in3(\ArbOut3[5]_12 [13]),
        .out1(\ArbOut1[5]_33 [14]),
        .out2(\ArbOut2[5]_32 [14]),
        .sel(Challenge[14]));
  (* DONT_TOUCH *) 
  Arbys__340 \Puf_Gen[5].Chain_Gen[14].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [14]),
        .in1(\ArbOut2[5]_32 [14]),
        .in2(\ArbOut2[5]_32 [14]),
        .in3(\ArbOut1[5]_33 [14]),
        .out1(\ArbOut3[5]_12 [14]),
        .out2(\ArbOut4[5]_11 [14]),
        .sel(\Butterfly_out[5]_34 [14]));
  (* DONT_TOUCH *) 
  Butterfly__170 \Puf_Gen[5].Chain_Gen[14].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [14]),
        .Pre(\ArbOut2[5]_32 [14]),
        .Q(\Butterfly_out[5]_34 [14]));
  (* DONT_TOUCH *) 
  Arbys__341 \Puf_Gen[5].Chain_Gen[15].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [14]),
        .in1(\ArbOut4[5]_11 [14]),
        .in2(\ArbOut4[5]_11 [14]),
        .in3(\ArbOut3[5]_12 [14]),
        .out1(\ArbOut1[5]_33 [15]),
        .out2(\ArbOut2[5]_32 [15]),
        .sel(Challenge[15]));
  (* DONT_TOUCH *) 
  Arbys__342 \Puf_Gen[5].Chain_Gen[15].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [15]),
        .in1(\ArbOut2[5]_32 [15]),
        .in2(\ArbOut2[5]_32 [15]),
        .in3(\ArbOut1[5]_33 [15]),
        .out1(\ArbOut3[5]_12 [15]),
        .out2(\ArbOut4[5]_11 [15]),
        .sel(\Butterfly_out[5]_34 [15]));
  (* DONT_TOUCH *) 
  Butterfly__171 \Puf_Gen[5].Chain_Gen[15].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [15]),
        .Pre(\ArbOut2[5]_32 [15]),
        .Q(\Butterfly_out[5]_34 [15]));
  (* DONT_TOUCH *) 
  Arbys__343 \Puf_Gen[5].Chain_Gen[16].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [15]),
        .in1(\ArbOut4[5]_11 [15]),
        .in2(\ArbOut4[5]_11 [15]),
        .in3(\ArbOut3[5]_12 [15]),
        .out1(\ArbOut1[5]_33 [16]),
        .out2(\ArbOut2[5]_32 [16]),
        .sel(Challenge[16]));
  (* DONT_TOUCH *) 
  Arbys__344 \Puf_Gen[5].Chain_Gen[16].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [16]),
        .in1(\ArbOut2[5]_32 [16]),
        .in2(\ArbOut2[5]_32 [16]),
        .in3(\ArbOut1[5]_33 [16]),
        .out1(\ArbOut3[5]_12 [16]),
        .out2(\ArbOut4[5]_11 [16]),
        .sel(\Butterfly_out[5]_34 [16]));
  (* DONT_TOUCH *) 
  Butterfly__172 \Puf_Gen[5].Chain_Gen[16].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [16]),
        .Pre(\ArbOut2[5]_32 [16]),
        .Q(\Butterfly_out[5]_34 [16]));
  (* DONT_TOUCH *) 
  Arbys__345 \Puf_Gen[5].Chain_Gen[17].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [16]),
        .in1(\ArbOut4[5]_11 [16]),
        .in2(\ArbOut4[5]_11 [16]),
        .in3(\ArbOut3[5]_12 [16]),
        .out1(\ArbOut1[5]_33 [17]),
        .out2(\ArbOut2[5]_32 [17]),
        .sel(Challenge[17]));
  (* DONT_TOUCH *) 
  Arbys__346 \Puf_Gen[5].Chain_Gen[17].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [17]),
        .in1(\ArbOut2[5]_32 [17]),
        .in2(\ArbOut2[5]_32 [17]),
        .in3(\ArbOut1[5]_33 [17]),
        .out1(\ArbOut3[5]_12 [17]),
        .out2(\ArbOut4[5]_11 [17]),
        .sel(\Butterfly_out[5]_34 [17]));
  (* DONT_TOUCH *) 
  Butterfly__173 \Puf_Gen[5].Chain_Gen[17].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [17]),
        .Pre(\ArbOut2[5]_32 [17]),
        .Q(\Butterfly_out[5]_34 [17]));
  (* DONT_TOUCH *) 
  Arbys__347 \Puf_Gen[5].Chain_Gen[18].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [17]),
        .in1(\ArbOut4[5]_11 [17]),
        .in2(\ArbOut4[5]_11 [17]),
        .in3(\ArbOut3[5]_12 [17]),
        .out1(\ArbOut1[5]_33 [18]),
        .out2(\ArbOut2[5]_32 [18]),
        .sel(Challenge[18]));
  (* DONT_TOUCH *) 
  Arbys__348 \Puf_Gen[5].Chain_Gen[18].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [18]),
        .in1(\ArbOut2[5]_32 [18]),
        .in2(\ArbOut2[5]_32 [18]),
        .in3(\ArbOut1[5]_33 [18]),
        .out1(\ArbOut3[5]_12 [18]),
        .out2(\ArbOut4[5]_11 [18]),
        .sel(\Butterfly_out[5]_34 [18]));
  (* DONT_TOUCH *) 
  Butterfly__174 \Puf_Gen[5].Chain_Gen[18].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [18]),
        .Pre(\ArbOut2[5]_32 [18]),
        .Q(\Butterfly_out[5]_34 [18]));
  (* DONT_TOUCH *) 
  Arbys__349 \Puf_Gen[5].Chain_Gen[19].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [18]),
        .in1(\ArbOut4[5]_11 [18]),
        .in2(\ArbOut4[5]_11 [18]),
        .in3(\ArbOut3[5]_12 [18]),
        .out1(\ArbOut1[5]_33 [19]),
        .out2(\ArbOut2[5]_32 [19]),
        .sel(Challenge[19]));
  (* DONT_TOUCH *) 
  Arbys__350 \Puf_Gen[5].Chain_Gen[19].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [19]),
        .in1(\ArbOut2[5]_32 [19]),
        .in2(\ArbOut2[5]_32 [19]),
        .in3(\ArbOut1[5]_33 [19]),
        .out1(\ArbOut3[5]_12 [19]),
        .out2(\ArbOut4[5]_11 [19]),
        .sel(\Butterfly_out[5]_34 [19]));
  (* DONT_TOUCH *) 
  Butterfly__175 \Puf_Gen[5].Chain_Gen[19].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [19]),
        .Pre(\ArbOut2[5]_32 [19]),
        .Q(\Butterfly_out[5]_34 [19]));
  (* DONT_TOUCH *) 
  Arbys__313 \Puf_Gen[5].Chain_Gen[1].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [0]),
        .in1(\ArbOut4[5]_11 [0]),
        .in2(\ArbOut4[5]_11 [0]),
        .in3(\ArbOut3[5]_12 [0]),
        .out1(\ArbOut1[5]_33 [1]),
        .out2(\ArbOut2[5]_32 [1]),
        .sel(Challenge[1]));
  (* DONT_TOUCH *) 
  Arbys__314 \Puf_Gen[5].Chain_Gen[1].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [1]),
        .in1(\ArbOut2[5]_32 [1]),
        .in2(\ArbOut2[5]_32 [1]),
        .in3(\ArbOut1[5]_33 [1]),
        .out1(\ArbOut3[5]_12 [1]),
        .out2(\ArbOut4[5]_11 [1]),
        .sel(\Butterfly_out[5]_34 [1]));
  (* DONT_TOUCH *) 
  Butterfly__157 \Puf_Gen[5].Chain_Gen[1].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [1]),
        .Pre(\ArbOut2[5]_32 [1]),
        .Q(\Butterfly_out[5]_34 [1]));
  (* DONT_TOUCH *) 
  Arbys__351 \Puf_Gen[5].Chain_Gen[20].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [19]),
        .in1(\ArbOut4[5]_11 [19]),
        .in2(\ArbOut4[5]_11 [19]),
        .in3(\ArbOut3[5]_12 [19]),
        .out1(\ArbOut1[5]_33 [20]),
        .out2(\ArbOut2[5]_32 [20]),
        .sel(Challenge[20]));
  (* DONT_TOUCH *) 
  Arbys__352 \Puf_Gen[5].Chain_Gen[20].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [20]),
        .in1(\ArbOut2[5]_32 [20]),
        .in2(\ArbOut2[5]_32 [20]),
        .in3(\ArbOut1[5]_33 [20]),
        .out1(\ArbOut3[5]_12 [20]),
        .out2(\ArbOut4[5]_11 [20]),
        .sel(\Butterfly_out[5]_34 [20]));
  (* DONT_TOUCH *) 
  Butterfly__176 \Puf_Gen[5].Chain_Gen[20].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [20]),
        .Pre(\ArbOut2[5]_32 [20]),
        .Q(\Butterfly_out[5]_34 [20]));
  (* DONT_TOUCH *) 
  Arbys__353 \Puf_Gen[5].Chain_Gen[21].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [20]),
        .in1(\ArbOut4[5]_11 [20]),
        .in2(\ArbOut4[5]_11 [20]),
        .in3(\ArbOut3[5]_12 [20]),
        .out1(\ArbOut1[5]_33 [21]),
        .out2(\ArbOut2[5]_32 [21]),
        .sel(Challenge[21]));
  (* DONT_TOUCH *) 
  Arbys__354 \Puf_Gen[5].Chain_Gen[21].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [21]),
        .in1(\ArbOut2[5]_32 [21]),
        .in2(\ArbOut2[5]_32 [21]),
        .in3(\ArbOut1[5]_33 [21]),
        .out1(\ArbOut3[5]_12 [21]),
        .out2(\ArbOut4[5]_11 [21]),
        .sel(\Butterfly_out[5]_34 [21]));
  (* DONT_TOUCH *) 
  Butterfly__177 \Puf_Gen[5].Chain_Gen[21].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [21]),
        .Pre(\ArbOut2[5]_32 [21]),
        .Q(\Butterfly_out[5]_34 [21]));
  (* DONT_TOUCH *) 
  Arbys__355 \Puf_Gen[5].Chain_Gen[22].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [21]),
        .in1(\ArbOut4[5]_11 [21]),
        .in2(\ArbOut4[5]_11 [21]),
        .in3(\ArbOut3[5]_12 [21]),
        .out1(\ArbOut1[5]_33 [22]),
        .out2(\ArbOut2[5]_32 [22]),
        .sel(Challenge[22]));
  (* DONT_TOUCH *) 
  Arbys__356 \Puf_Gen[5].Chain_Gen[22].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [22]),
        .in1(\ArbOut2[5]_32 [22]),
        .in2(\ArbOut2[5]_32 [22]),
        .in3(\ArbOut1[5]_33 [22]),
        .out1(\ArbOut3[5]_12 [22]),
        .out2(\ArbOut4[5]_11 [22]),
        .sel(\Butterfly_out[5]_34 [22]));
  (* DONT_TOUCH *) 
  Butterfly__178 \Puf_Gen[5].Chain_Gen[22].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [22]),
        .Pre(\ArbOut2[5]_32 [22]),
        .Q(\Butterfly_out[5]_34 [22]));
  (* DONT_TOUCH *) 
  Arbys__357 \Puf_Gen[5].Chain_Gen[23].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [22]),
        .in1(\ArbOut4[5]_11 [22]),
        .in2(\ArbOut4[5]_11 [22]),
        .in3(\ArbOut3[5]_12 [22]),
        .out1(\ArbOut1[5]_33 [23]),
        .out2(\ArbOut2[5]_32 [23]),
        .sel(Challenge[23]));
  (* DONT_TOUCH *) 
  Arbys__358 \Puf_Gen[5].Chain_Gen[23].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [23]),
        .in1(\ArbOut2[5]_32 [23]),
        .in2(\ArbOut2[5]_32 [23]),
        .in3(\ArbOut1[5]_33 [23]),
        .out1(\ArbOut3[5]_12 [23]),
        .out2(\ArbOut4[5]_11 [23]),
        .sel(\Butterfly_out[5]_34 [23]));
  (* DONT_TOUCH *) 
  Butterfly__179 \Puf_Gen[5].Chain_Gen[23].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [23]),
        .Pre(\ArbOut2[5]_32 [23]),
        .Q(\Butterfly_out[5]_34 [23]));
  (* DONT_TOUCH *) 
  Arbys__359 \Puf_Gen[5].Chain_Gen[24].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [23]),
        .in1(\ArbOut4[5]_11 [23]),
        .in2(\ArbOut4[5]_11 [23]),
        .in3(\ArbOut3[5]_12 [23]),
        .out1(\ArbOut1[5]_33 [24]),
        .out2(\ArbOut2[5]_32 [24]),
        .sel(Challenge[24]));
  (* DONT_TOUCH *) 
  Arbys__360 \Puf_Gen[5].Chain_Gen[24].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [24]),
        .in1(\ArbOut2[5]_32 [24]),
        .in2(\ArbOut2[5]_32 [24]),
        .in3(\ArbOut1[5]_33 [24]),
        .out1(\ArbOut3[5]_12 [24]),
        .out2(\ArbOut4[5]_11 [24]),
        .sel(\Butterfly_out[5]_34 [24]));
  (* DONT_TOUCH *) 
  Butterfly__180 \Puf_Gen[5].Chain_Gen[24].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [24]),
        .Pre(\ArbOut2[5]_32 [24]),
        .Q(\Butterfly_out[5]_34 [24]));
  (* DONT_TOUCH *) 
  Arbys__361 \Puf_Gen[5].Chain_Gen[25].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [24]),
        .in1(\ArbOut4[5]_11 [24]),
        .in2(\ArbOut4[5]_11 [24]),
        .in3(\ArbOut3[5]_12 [24]),
        .out1(\ArbOut1[5]_33 [25]),
        .out2(\ArbOut2[5]_32 [25]),
        .sel(Challenge[25]));
  (* DONT_TOUCH *) 
  Arbys__362 \Puf_Gen[5].Chain_Gen[25].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [25]),
        .in1(\ArbOut2[5]_32 [25]),
        .in2(\ArbOut2[5]_32 [25]),
        .in3(\ArbOut1[5]_33 [25]),
        .out1(\ArbOut3[5]_12 [25]),
        .out2(\ArbOut4[5]_11 [25]),
        .sel(\Butterfly_out[5]_34 [25]));
  (* DONT_TOUCH *) 
  Butterfly__181 \Puf_Gen[5].Chain_Gen[25].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [25]),
        .Pre(\ArbOut2[5]_32 [25]),
        .Q(\Butterfly_out[5]_34 [25]));
  (* DONT_TOUCH *) 
  Arbys__363 \Puf_Gen[5].Chain_Gen[26].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [25]),
        .in1(\ArbOut4[5]_11 [25]),
        .in2(\ArbOut4[5]_11 [25]),
        .in3(\ArbOut3[5]_12 [25]),
        .out1(\ArbOut1[5]_33 [26]),
        .out2(\ArbOut2[5]_32 [26]),
        .sel(Challenge[26]));
  (* DONT_TOUCH *) 
  Arbys__364 \Puf_Gen[5].Chain_Gen[26].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [26]),
        .in1(\ArbOut2[5]_32 [26]),
        .in2(\ArbOut2[5]_32 [26]),
        .in3(\ArbOut1[5]_33 [26]),
        .out1(\ArbOut3[5]_12 [26]),
        .out2(\ArbOut4[5]_11 [26]),
        .sel(\Butterfly_out[5]_34 [26]));
  (* DONT_TOUCH *) 
  Butterfly__182 \Puf_Gen[5].Chain_Gen[26].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [26]),
        .Pre(\ArbOut2[5]_32 [26]),
        .Q(\Butterfly_out[5]_34 [26]));
  (* DONT_TOUCH *) 
  Arbys__365 \Puf_Gen[5].Chain_Gen[27].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [26]),
        .in1(\ArbOut4[5]_11 [26]),
        .in2(\ArbOut4[5]_11 [26]),
        .in3(\ArbOut3[5]_12 [26]),
        .out1(\ArbOut1[5]_33 [27]),
        .out2(\ArbOut2[5]_32 [27]),
        .sel(Challenge[27]));
  (* DONT_TOUCH *) 
  Arbys__366 \Puf_Gen[5].Chain_Gen[27].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [27]),
        .in1(\ArbOut2[5]_32 [27]),
        .in2(\ArbOut2[5]_32 [27]),
        .in3(\ArbOut1[5]_33 [27]),
        .out1(\ArbOut3[5]_12 [27]),
        .out2(\ArbOut4[5]_11 [27]),
        .sel(\Butterfly_out[5]_34 [27]));
  (* DONT_TOUCH *) 
  Butterfly__183 \Puf_Gen[5].Chain_Gen[27].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [27]),
        .Pre(\ArbOut2[5]_32 [27]),
        .Q(\Butterfly_out[5]_34 [27]));
  (* DONT_TOUCH *) 
  Arbys__367 \Puf_Gen[5].Chain_Gen[28].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [27]),
        .in1(\ArbOut4[5]_11 [27]),
        .in2(\ArbOut4[5]_11 [27]),
        .in3(\ArbOut3[5]_12 [27]),
        .out1(\ArbOut1[5]_33 [28]),
        .out2(\ArbOut2[5]_32 [28]),
        .sel(Challenge[28]));
  (* DONT_TOUCH *) 
  Arbys__368 \Puf_Gen[5].Chain_Gen[28].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [28]),
        .in1(\ArbOut2[5]_32 [28]),
        .in2(\ArbOut2[5]_32 [28]),
        .in3(\ArbOut1[5]_33 [28]),
        .out1(\ArbOut3[5]_12 [28]),
        .out2(\ArbOut4[5]_11 [28]),
        .sel(\Butterfly_out[5]_34 [28]));
  (* DONT_TOUCH *) 
  Butterfly__184 \Puf_Gen[5].Chain_Gen[28].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [28]),
        .Pre(\ArbOut2[5]_32 [28]),
        .Q(\Butterfly_out[5]_34 [28]));
  (* DONT_TOUCH *) 
  Arbys__369 \Puf_Gen[5].Chain_Gen[29].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [28]),
        .in1(\ArbOut4[5]_11 [28]),
        .in2(\ArbOut4[5]_11 [28]),
        .in3(\ArbOut3[5]_12 [28]),
        .out1(\ArbOut1[5]_33 [29]),
        .out2(\ArbOut2[5]_32 [29]),
        .sel(Challenge[29]));
  (* DONT_TOUCH *) 
  Arbys__370 \Puf_Gen[5].Chain_Gen[29].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [29]),
        .in1(\ArbOut2[5]_32 [29]),
        .in2(\ArbOut2[5]_32 [29]),
        .in3(\ArbOut1[5]_33 [29]),
        .out1(\ArbOut3[5]_12 [29]),
        .out2(\ArbOut4[5]_11 [29]),
        .sel(\Butterfly_out[5]_34 [29]));
  (* DONT_TOUCH *) 
  Butterfly__185 \Puf_Gen[5].Chain_Gen[29].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [29]),
        .Pre(\ArbOut2[5]_32 [29]),
        .Q(\Butterfly_out[5]_34 [29]));
  (* DONT_TOUCH *) 
  Arbys__315 \Puf_Gen[5].Chain_Gen[2].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [1]),
        .in1(\ArbOut4[5]_11 [1]),
        .in2(\ArbOut4[5]_11 [1]),
        .in3(\ArbOut3[5]_12 [1]),
        .out1(\ArbOut1[5]_33 [2]),
        .out2(\ArbOut2[5]_32 [2]),
        .sel(Challenge[2]));
  (* DONT_TOUCH *) 
  Arbys__316 \Puf_Gen[5].Chain_Gen[2].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [2]),
        .in1(\ArbOut2[5]_32 [2]),
        .in2(\ArbOut2[5]_32 [2]),
        .in3(\ArbOut1[5]_33 [2]),
        .out1(\ArbOut3[5]_12 [2]),
        .out2(\ArbOut4[5]_11 [2]),
        .sel(\Butterfly_out[5]_34 [2]));
  (* DONT_TOUCH *) 
  Butterfly__158 \Puf_Gen[5].Chain_Gen[2].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [2]),
        .Pre(\ArbOut2[5]_32 [2]),
        .Q(\Butterfly_out[5]_34 [2]));
  (* DONT_TOUCH *) 
  Arbys__371 \Puf_Gen[5].Chain_Gen[30].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [29]),
        .in1(\ArbOut4[5]_11 [29]),
        .in2(\ArbOut4[5]_11 [29]),
        .in3(\ArbOut3[5]_12 [29]),
        .out1(\ArbOut1[5]_33 [30]),
        .out2(\ArbOut2[5]_32 [30]),
        .sel(Challenge[30]));
  (* DONT_TOUCH *) 
  Arbys__372 \Puf_Gen[5].Chain_Gen[30].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [30]),
        .in1(\ArbOut2[5]_32 [30]),
        .in2(\ArbOut2[5]_32 [30]),
        .in3(\ArbOut1[5]_33 [30]),
        .out1(\ArbOut3[5]_12 [30]),
        .out2(\ArbOut4[5]_11 [30]),
        .sel(\Butterfly_out[5]_34 [30]));
  (* DONT_TOUCH *) 
  Butterfly__186 \Puf_Gen[5].Chain_Gen[30].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [30]),
        .Pre(\ArbOut2[5]_32 [30]),
        .Q(\Butterfly_out[5]_34 [30]));
  (* DONT_TOUCH *) 
  DFF__8 \Puf_Gen[5].Chain_Gen[31].Last_Stage.DFF_inst 
       (.CLK(\ArbOut3[5]_12 [30]),
        .CLR(1'b0),
        .D(\ArbOut4[5]_11 [30]),
        .Pre(1'b0),
        .Q(Response[5]));
  (* DONT_TOUCH *) 
  Arbys__317 \Puf_Gen[5].Chain_Gen[3].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [2]),
        .in1(\ArbOut4[5]_11 [2]),
        .in2(\ArbOut4[5]_11 [2]),
        .in3(\ArbOut3[5]_12 [2]),
        .out1(\ArbOut1[5]_33 [3]),
        .out2(\ArbOut2[5]_32 [3]),
        .sel(Challenge[3]));
  (* DONT_TOUCH *) 
  Arbys__318 \Puf_Gen[5].Chain_Gen[3].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [3]),
        .in1(\ArbOut2[5]_32 [3]),
        .in2(\ArbOut2[5]_32 [3]),
        .in3(\ArbOut1[5]_33 [3]),
        .out1(\ArbOut3[5]_12 [3]),
        .out2(\ArbOut4[5]_11 [3]),
        .sel(\Butterfly_out[5]_34 [3]));
  (* DONT_TOUCH *) 
  Butterfly__159 \Puf_Gen[5].Chain_Gen[3].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [3]),
        .Pre(\ArbOut2[5]_32 [3]),
        .Q(\Butterfly_out[5]_34 [3]));
  (* DONT_TOUCH *) 
  Arbys__319 \Puf_Gen[5].Chain_Gen[4].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [3]),
        .in1(\ArbOut4[5]_11 [3]),
        .in2(\ArbOut4[5]_11 [3]),
        .in3(\ArbOut3[5]_12 [3]),
        .out1(\ArbOut1[5]_33 [4]),
        .out2(\ArbOut2[5]_32 [4]),
        .sel(Challenge[4]));
  (* DONT_TOUCH *) 
  Arbys__320 \Puf_Gen[5].Chain_Gen[4].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [4]),
        .in1(\ArbOut2[5]_32 [4]),
        .in2(\ArbOut2[5]_32 [4]),
        .in3(\ArbOut1[5]_33 [4]),
        .out1(\ArbOut3[5]_12 [4]),
        .out2(\ArbOut4[5]_11 [4]),
        .sel(\Butterfly_out[5]_34 [4]));
  (* DONT_TOUCH *) 
  Butterfly__160 \Puf_Gen[5].Chain_Gen[4].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [4]),
        .Pre(\ArbOut2[5]_32 [4]),
        .Q(\Butterfly_out[5]_34 [4]));
  (* DONT_TOUCH *) 
  Arbys__321 \Puf_Gen[5].Chain_Gen[5].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [4]),
        .in1(\ArbOut4[5]_11 [4]),
        .in2(\ArbOut4[5]_11 [4]),
        .in3(\ArbOut3[5]_12 [4]),
        .out1(\ArbOut1[5]_33 [5]),
        .out2(\ArbOut2[5]_32 [5]),
        .sel(Challenge[5]));
  (* DONT_TOUCH *) 
  Arbys__322 \Puf_Gen[5].Chain_Gen[5].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [5]),
        .in1(\ArbOut2[5]_32 [5]),
        .in2(\ArbOut2[5]_32 [5]),
        .in3(\ArbOut1[5]_33 [5]),
        .out1(\ArbOut3[5]_12 [5]),
        .out2(\ArbOut4[5]_11 [5]),
        .sel(\Butterfly_out[5]_34 [5]));
  (* DONT_TOUCH *) 
  Butterfly__161 \Puf_Gen[5].Chain_Gen[5].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [5]),
        .Pre(\ArbOut2[5]_32 [5]),
        .Q(\Butterfly_out[5]_34 [5]));
  (* DONT_TOUCH *) 
  Arbys__323 \Puf_Gen[5].Chain_Gen[6].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [5]),
        .in1(\ArbOut4[5]_11 [5]),
        .in2(\ArbOut4[5]_11 [5]),
        .in3(\ArbOut3[5]_12 [5]),
        .out1(\ArbOut1[5]_33 [6]),
        .out2(\ArbOut2[5]_32 [6]),
        .sel(Challenge[6]));
  (* DONT_TOUCH *) 
  Arbys__324 \Puf_Gen[5].Chain_Gen[6].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [6]),
        .in1(\ArbOut2[5]_32 [6]),
        .in2(\ArbOut2[5]_32 [6]),
        .in3(\ArbOut1[5]_33 [6]),
        .out1(\ArbOut3[5]_12 [6]),
        .out2(\ArbOut4[5]_11 [6]),
        .sel(\Butterfly_out[5]_34 [6]));
  (* DONT_TOUCH *) 
  Butterfly__162 \Puf_Gen[5].Chain_Gen[6].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [6]),
        .Pre(\ArbOut2[5]_32 [6]),
        .Q(\Butterfly_out[5]_34 [6]));
  (* DONT_TOUCH *) 
  Arbys__325 \Puf_Gen[5].Chain_Gen[7].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [6]),
        .in1(\ArbOut4[5]_11 [6]),
        .in2(\ArbOut4[5]_11 [6]),
        .in3(\ArbOut3[5]_12 [6]),
        .out1(\ArbOut1[5]_33 [7]),
        .out2(\ArbOut2[5]_32 [7]),
        .sel(Challenge[7]));
  (* DONT_TOUCH *) 
  Arbys__326 \Puf_Gen[5].Chain_Gen[7].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [7]),
        .in1(\ArbOut2[5]_32 [7]),
        .in2(\ArbOut2[5]_32 [7]),
        .in3(\ArbOut1[5]_33 [7]),
        .out1(\ArbOut3[5]_12 [7]),
        .out2(\ArbOut4[5]_11 [7]),
        .sel(\Butterfly_out[5]_34 [7]));
  (* DONT_TOUCH *) 
  Butterfly__163 \Puf_Gen[5].Chain_Gen[7].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [7]),
        .Pre(\ArbOut2[5]_32 [7]),
        .Q(\Butterfly_out[5]_34 [7]));
  (* DONT_TOUCH *) 
  Arbys__327 \Puf_Gen[5].Chain_Gen[8].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [7]),
        .in1(\ArbOut4[5]_11 [7]),
        .in2(\ArbOut4[5]_11 [7]),
        .in3(\ArbOut3[5]_12 [7]),
        .out1(\ArbOut1[5]_33 [8]),
        .out2(\ArbOut2[5]_32 [8]),
        .sel(Challenge[8]));
  (* DONT_TOUCH *) 
  Arbys__328 \Puf_Gen[5].Chain_Gen[8].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [8]),
        .in1(\ArbOut2[5]_32 [8]),
        .in2(\ArbOut2[5]_32 [8]),
        .in3(\ArbOut1[5]_33 [8]),
        .out1(\ArbOut3[5]_12 [8]),
        .out2(\ArbOut4[5]_11 [8]),
        .sel(\Butterfly_out[5]_34 [8]));
  (* DONT_TOUCH *) 
  Butterfly__164 \Puf_Gen[5].Chain_Gen[8].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [8]),
        .Pre(\ArbOut2[5]_32 [8]),
        .Q(\Butterfly_out[5]_34 [8]));
  (* DONT_TOUCH *) 
  Arbys__329 \Puf_Gen[5].Chain_Gen[9].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[5]_12 [8]),
        .in1(\ArbOut4[5]_11 [8]),
        .in2(\ArbOut4[5]_11 [8]),
        .in3(\ArbOut3[5]_12 [8]),
        .out1(\ArbOut1[5]_33 [9]),
        .out2(\ArbOut2[5]_32 [9]),
        .sel(Challenge[9]));
  (* DONT_TOUCH *) 
  Arbys__330 \Puf_Gen[5].Chain_Gen[9].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[5]_33 [9]),
        .in1(\ArbOut2[5]_32 [9]),
        .in2(\ArbOut2[5]_32 [9]),
        .in3(\ArbOut1[5]_33 [9]),
        .out1(\ArbOut3[5]_12 [9]),
        .out2(\ArbOut4[5]_11 [9]),
        .sel(\Butterfly_out[5]_34 [9]));
  (* DONT_TOUCH *) 
  Butterfly__165 \Puf_Gen[5].Chain_Gen[9].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[5]_33 [9]),
        .Pre(\ArbOut2[5]_32 [9]),
        .Q(\Butterfly_out[5]_34 [9]));
  (* DONT_TOUCH *) 
  Arbys__373 \Puf_Gen[6].Chain_Gen[0].First_ChainLink.ArbiterL1_inst 
       (.in0(en_puf),
        .in1(en_puf),
        .in2(en_puf),
        .in3(en_puf),
        .out1(\ArbOut1[6]_36 [0]),
        .out2(\ArbOut2[6]_35 [0]),
        .sel(Challenge[0]));
  (* DONT_TOUCH *) 
  Arbys__374 \Puf_Gen[6].Chain_Gen[0].First_ChainLink.ArbiterL2_inst 
       (.in0(\ArbOut1[6]_36 [0]),
        .in1(\ArbOut2[6]_35 [0]),
        .in2(\ArbOut2[6]_35 [0]),
        .in3(\ArbOut1[6]_36 [0]),
        .out1(\ArbOut3[6]_14 [0]),
        .out2(\ArbOut4[6]_13 [0]),
        .sel(\Butterfly_out[6]_37 [0]));
  (* DONT_TOUCH *) 
  Butterfly__187 \Puf_Gen[6].Chain_Gen[0].First_ChainLink.Butterfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [0]),
        .Pre(\ArbOut2[6]_35 [0]),
        .Q(\Butterfly_out[6]_37 [0]));
  (* DONT_TOUCH *) 
  Arbys__393 \Puf_Gen[6].Chain_Gen[10].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [9]),
        .in1(\ArbOut4[6]_13 [9]),
        .in2(\ArbOut4[6]_13 [9]),
        .in3(\ArbOut3[6]_14 [9]),
        .out1(\ArbOut1[6]_36 [10]),
        .out2(\ArbOut2[6]_35 [10]),
        .sel(Challenge[10]));
  (* DONT_TOUCH *) 
  Arbys__394 \Puf_Gen[6].Chain_Gen[10].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [10]),
        .in1(\ArbOut2[6]_35 [10]),
        .in2(\ArbOut2[6]_35 [10]),
        .in3(\ArbOut1[6]_36 [10]),
        .out1(\ArbOut3[6]_14 [10]),
        .out2(\ArbOut4[6]_13 [10]),
        .sel(\Butterfly_out[6]_37 [10]));
  (* DONT_TOUCH *) 
  Butterfly__197 \Puf_Gen[6].Chain_Gen[10].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [10]),
        .Pre(\ArbOut2[6]_35 [10]),
        .Q(\Butterfly_out[6]_37 [10]));
  (* DONT_TOUCH *) 
  Arbys__395 \Puf_Gen[6].Chain_Gen[11].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [10]),
        .in1(\ArbOut4[6]_13 [10]),
        .in2(\ArbOut4[6]_13 [10]),
        .in3(\ArbOut3[6]_14 [10]),
        .out1(\ArbOut1[6]_36 [11]),
        .out2(\ArbOut2[6]_35 [11]),
        .sel(Challenge[11]));
  (* DONT_TOUCH *) 
  Arbys__396 \Puf_Gen[6].Chain_Gen[11].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [11]),
        .in1(\ArbOut2[6]_35 [11]),
        .in2(\ArbOut2[6]_35 [11]),
        .in3(\ArbOut1[6]_36 [11]),
        .out1(\ArbOut3[6]_14 [11]),
        .out2(\ArbOut4[6]_13 [11]),
        .sel(\Butterfly_out[6]_37 [11]));
  (* DONT_TOUCH *) 
  Butterfly__198 \Puf_Gen[6].Chain_Gen[11].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [11]),
        .Pre(\ArbOut2[6]_35 [11]),
        .Q(\Butterfly_out[6]_37 [11]));
  (* DONT_TOUCH *) 
  Arbys__397 \Puf_Gen[6].Chain_Gen[12].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [11]),
        .in1(\ArbOut4[6]_13 [11]),
        .in2(\ArbOut4[6]_13 [11]),
        .in3(\ArbOut3[6]_14 [11]),
        .out1(\ArbOut1[6]_36 [12]),
        .out2(\ArbOut2[6]_35 [12]),
        .sel(Challenge[12]));
  (* DONT_TOUCH *) 
  Arbys__398 \Puf_Gen[6].Chain_Gen[12].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [12]),
        .in1(\ArbOut2[6]_35 [12]),
        .in2(\ArbOut2[6]_35 [12]),
        .in3(\ArbOut1[6]_36 [12]),
        .out1(\ArbOut3[6]_14 [12]),
        .out2(\ArbOut4[6]_13 [12]),
        .sel(\Butterfly_out[6]_37 [12]));
  (* DONT_TOUCH *) 
  Butterfly__199 \Puf_Gen[6].Chain_Gen[12].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [12]),
        .Pre(\ArbOut2[6]_35 [12]),
        .Q(\Butterfly_out[6]_37 [12]));
  (* DONT_TOUCH *) 
  Arbys__399 \Puf_Gen[6].Chain_Gen[13].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [12]),
        .in1(\ArbOut4[6]_13 [12]),
        .in2(\ArbOut4[6]_13 [12]),
        .in3(\ArbOut3[6]_14 [12]),
        .out1(\ArbOut1[6]_36 [13]),
        .out2(\ArbOut2[6]_35 [13]),
        .sel(Challenge[13]));
  (* DONT_TOUCH *) 
  Arbys__400 \Puf_Gen[6].Chain_Gen[13].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [13]),
        .in1(\ArbOut2[6]_35 [13]),
        .in2(\ArbOut2[6]_35 [13]),
        .in3(\ArbOut1[6]_36 [13]),
        .out1(\ArbOut3[6]_14 [13]),
        .out2(\ArbOut4[6]_13 [13]),
        .sel(\Butterfly_out[6]_37 [13]));
  (* DONT_TOUCH *) 
  Butterfly__200 \Puf_Gen[6].Chain_Gen[13].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [13]),
        .Pre(\ArbOut2[6]_35 [13]),
        .Q(\Butterfly_out[6]_37 [13]));
  (* DONT_TOUCH *) 
  Arbys__401 \Puf_Gen[6].Chain_Gen[14].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [13]),
        .in1(\ArbOut4[6]_13 [13]),
        .in2(\ArbOut4[6]_13 [13]),
        .in3(\ArbOut3[6]_14 [13]),
        .out1(\ArbOut1[6]_36 [14]),
        .out2(\ArbOut2[6]_35 [14]),
        .sel(Challenge[14]));
  (* DONT_TOUCH *) 
  Arbys__402 \Puf_Gen[6].Chain_Gen[14].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [14]),
        .in1(\ArbOut2[6]_35 [14]),
        .in2(\ArbOut2[6]_35 [14]),
        .in3(\ArbOut1[6]_36 [14]),
        .out1(\ArbOut3[6]_14 [14]),
        .out2(\ArbOut4[6]_13 [14]),
        .sel(\Butterfly_out[6]_37 [14]));
  (* DONT_TOUCH *) 
  Butterfly__201 \Puf_Gen[6].Chain_Gen[14].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [14]),
        .Pre(\ArbOut2[6]_35 [14]),
        .Q(\Butterfly_out[6]_37 [14]));
  (* DONT_TOUCH *) 
  Arbys__403 \Puf_Gen[6].Chain_Gen[15].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [14]),
        .in1(\ArbOut4[6]_13 [14]),
        .in2(\ArbOut4[6]_13 [14]),
        .in3(\ArbOut3[6]_14 [14]),
        .out1(\ArbOut1[6]_36 [15]),
        .out2(\ArbOut2[6]_35 [15]),
        .sel(Challenge[15]));
  (* DONT_TOUCH *) 
  Arbys__404 \Puf_Gen[6].Chain_Gen[15].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [15]),
        .in1(\ArbOut2[6]_35 [15]),
        .in2(\ArbOut2[6]_35 [15]),
        .in3(\ArbOut1[6]_36 [15]),
        .out1(\ArbOut3[6]_14 [15]),
        .out2(\ArbOut4[6]_13 [15]),
        .sel(\Butterfly_out[6]_37 [15]));
  (* DONT_TOUCH *) 
  Butterfly__202 \Puf_Gen[6].Chain_Gen[15].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [15]),
        .Pre(\ArbOut2[6]_35 [15]),
        .Q(\Butterfly_out[6]_37 [15]));
  (* DONT_TOUCH *) 
  Arbys__405 \Puf_Gen[6].Chain_Gen[16].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [15]),
        .in1(\ArbOut4[6]_13 [15]),
        .in2(\ArbOut4[6]_13 [15]),
        .in3(\ArbOut3[6]_14 [15]),
        .out1(\ArbOut1[6]_36 [16]),
        .out2(\ArbOut2[6]_35 [16]),
        .sel(Challenge[16]));
  (* DONT_TOUCH *) 
  Arbys__406 \Puf_Gen[6].Chain_Gen[16].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [16]),
        .in1(\ArbOut2[6]_35 [16]),
        .in2(\ArbOut2[6]_35 [16]),
        .in3(\ArbOut1[6]_36 [16]),
        .out1(\ArbOut3[6]_14 [16]),
        .out2(\ArbOut4[6]_13 [16]),
        .sel(\Butterfly_out[6]_37 [16]));
  (* DONT_TOUCH *) 
  Butterfly__203 \Puf_Gen[6].Chain_Gen[16].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [16]),
        .Pre(\ArbOut2[6]_35 [16]),
        .Q(\Butterfly_out[6]_37 [16]));
  (* DONT_TOUCH *) 
  Arbys__407 \Puf_Gen[6].Chain_Gen[17].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [16]),
        .in1(\ArbOut4[6]_13 [16]),
        .in2(\ArbOut4[6]_13 [16]),
        .in3(\ArbOut3[6]_14 [16]),
        .out1(\ArbOut1[6]_36 [17]),
        .out2(\ArbOut2[6]_35 [17]),
        .sel(Challenge[17]));
  (* DONT_TOUCH *) 
  Arbys__408 \Puf_Gen[6].Chain_Gen[17].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [17]),
        .in1(\ArbOut2[6]_35 [17]),
        .in2(\ArbOut2[6]_35 [17]),
        .in3(\ArbOut1[6]_36 [17]),
        .out1(\ArbOut3[6]_14 [17]),
        .out2(\ArbOut4[6]_13 [17]),
        .sel(\Butterfly_out[6]_37 [17]));
  (* DONT_TOUCH *) 
  Butterfly__204 \Puf_Gen[6].Chain_Gen[17].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [17]),
        .Pre(\ArbOut2[6]_35 [17]),
        .Q(\Butterfly_out[6]_37 [17]));
  (* DONT_TOUCH *) 
  Arbys__409 \Puf_Gen[6].Chain_Gen[18].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [17]),
        .in1(\ArbOut4[6]_13 [17]),
        .in2(\ArbOut4[6]_13 [17]),
        .in3(\ArbOut3[6]_14 [17]),
        .out1(\ArbOut1[6]_36 [18]),
        .out2(\ArbOut2[6]_35 [18]),
        .sel(Challenge[18]));
  (* DONT_TOUCH *) 
  Arbys__410 \Puf_Gen[6].Chain_Gen[18].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [18]),
        .in1(\ArbOut2[6]_35 [18]),
        .in2(\ArbOut2[6]_35 [18]),
        .in3(\ArbOut1[6]_36 [18]),
        .out1(\ArbOut3[6]_14 [18]),
        .out2(\ArbOut4[6]_13 [18]),
        .sel(\Butterfly_out[6]_37 [18]));
  (* DONT_TOUCH *) 
  Butterfly__205 \Puf_Gen[6].Chain_Gen[18].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [18]),
        .Pre(\ArbOut2[6]_35 [18]),
        .Q(\Butterfly_out[6]_37 [18]));
  (* DONT_TOUCH *) 
  Arbys__411 \Puf_Gen[6].Chain_Gen[19].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [18]),
        .in1(\ArbOut4[6]_13 [18]),
        .in2(\ArbOut4[6]_13 [18]),
        .in3(\ArbOut3[6]_14 [18]),
        .out1(\ArbOut1[6]_36 [19]),
        .out2(\ArbOut2[6]_35 [19]),
        .sel(Challenge[19]));
  (* DONT_TOUCH *) 
  Arbys__412 \Puf_Gen[6].Chain_Gen[19].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [19]),
        .in1(\ArbOut2[6]_35 [19]),
        .in2(\ArbOut2[6]_35 [19]),
        .in3(\ArbOut1[6]_36 [19]),
        .out1(\ArbOut3[6]_14 [19]),
        .out2(\ArbOut4[6]_13 [19]),
        .sel(\Butterfly_out[6]_37 [19]));
  (* DONT_TOUCH *) 
  Butterfly__206 \Puf_Gen[6].Chain_Gen[19].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [19]),
        .Pre(\ArbOut2[6]_35 [19]),
        .Q(\Butterfly_out[6]_37 [19]));
  (* DONT_TOUCH *) 
  Arbys__375 \Puf_Gen[6].Chain_Gen[1].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [0]),
        .in1(\ArbOut4[6]_13 [0]),
        .in2(\ArbOut4[6]_13 [0]),
        .in3(\ArbOut3[6]_14 [0]),
        .out1(\ArbOut1[6]_36 [1]),
        .out2(\ArbOut2[6]_35 [1]),
        .sel(Challenge[1]));
  (* DONT_TOUCH *) 
  Arbys__376 \Puf_Gen[6].Chain_Gen[1].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [1]),
        .in1(\ArbOut2[6]_35 [1]),
        .in2(\ArbOut2[6]_35 [1]),
        .in3(\ArbOut1[6]_36 [1]),
        .out1(\ArbOut3[6]_14 [1]),
        .out2(\ArbOut4[6]_13 [1]),
        .sel(\Butterfly_out[6]_37 [1]));
  (* DONT_TOUCH *) 
  Butterfly__188 \Puf_Gen[6].Chain_Gen[1].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [1]),
        .Pre(\ArbOut2[6]_35 [1]),
        .Q(\Butterfly_out[6]_37 [1]));
  (* DONT_TOUCH *) 
  Arbys__413 \Puf_Gen[6].Chain_Gen[20].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [19]),
        .in1(\ArbOut4[6]_13 [19]),
        .in2(\ArbOut4[6]_13 [19]),
        .in3(\ArbOut3[6]_14 [19]),
        .out1(\ArbOut1[6]_36 [20]),
        .out2(\ArbOut2[6]_35 [20]),
        .sel(Challenge[20]));
  (* DONT_TOUCH *) 
  Arbys__414 \Puf_Gen[6].Chain_Gen[20].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [20]),
        .in1(\ArbOut2[6]_35 [20]),
        .in2(\ArbOut2[6]_35 [20]),
        .in3(\ArbOut1[6]_36 [20]),
        .out1(\ArbOut3[6]_14 [20]),
        .out2(\ArbOut4[6]_13 [20]),
        .sel(\Butterfly_out[6]_37 [20]));
  (* DONT_TOUCH *) 
  Butterfly__207 \Puf_Gen[6].Chain_Gen[20].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [20]),
        .Pre(\ArbOut2[6]_35 [20]),
        .Q(\Butterfly_out[6]_37 [20]));
  (* DONT_TOUCH *) 
  Arbys__415 \Puf_Gen[6].Chain_Gen[21].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [20]),
        .in1(\ArbOut4[6]_13 [20]),
        .in2(\ArbOut4[6]_13 [20]),
        .in3(\ArbOut3[6]_14 [20]),
        .out1(\ArbOut1[6]_36 [21]),
        .out2(\ArbOut2[6]_35 [21]),
        .sel(Challenge[21]));
  (* DONT_TOUCH *) 
  Arbys__416 \Puf_Gen[6].Chain_Gen[21].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [21]),
        .in1(\ArbOut2[6]_35 [21]),
        .in2(\ArbOut2[6]_35 [21]),
        .in3(\ArbOut1[6]_36 [21]),
        .out1(\ArbOut3[6]_14 [21]),
        .out2(\ArbOut4[6]_13 [21]),
        .sel(\Butterfly_out[6]_37 [21]));
  (* DONT_TOUCH *) 
  Butterfly__208 \Puf_Gen[6].Chain_Gen[21].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [21]),
        .Pre(\ArbOut2[6]_35 [21]),
        .Q(\Butterfly_out[6]_37 [21]));
  (* DONT_TOUCH *) 
  Arbys__417 \Puf_Gen[6].Chain_Gen[22].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [21]),
        .in1(\ArbOut4[6]_13 [21]),
        .in2(\ArbOut4[6]_13 [21]),
        .in3(\ArbOut3[6]_14 [21]),
        .out1(\ArbOut1[6]_36 [22]),
        .out2(\ArbOut2[6]_35 [22]),
        .sel(Challenge[22]));
  (* DONT_TOUCH *) 
  Arbys__418 \Puf_Gen[6].Chain_Gen[22].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [22]),
        .in1(\ArbOut2[6]_35 [22]),
        .in2(\ArbOut2[6]_35 [22]),
        .in3(\ArbOut1[6]_36 [22]),
        .out1(\ArbOut3[6]_14 [22]),
        .out2(\ArbOut4[6]_13 [22]),
        .sel(\Butterfly_out[6]_37 [22]));
  (* DONT_TOUCH *) 
  Butterfly__209 \Puf_Gen[6].Chain_Gen[22].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [22]),
        .Pre(\ArbOut2[6]_35 [22]),
        .Q(\Butterfly_out[6]_37 [22]));
  (* DONT_TOUCH *) 
  Arbys__419 \Puf_Gen[6].Chain_Gen[23].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [22]),
        .in1(\ArbOut4[6]_13 [22]),
        .in2(\ArbOut4[6]_13 [22]),
        .in3(\ArbOut3[6]_14 [22]),
        .out1(\ArbOut1[6]_36 [23]),
        .out2(\ArbOut2[6]_35 [23]),
        .sel(Challenge[23]));
  (* DONT_TOUCH *) 
  Arbys__420 \Puf_Gen[6].Chain_Gen[23].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [23]),
        .in1(\ArbOut2[6]_35 [23]),
        .in2(\ArbOut2[6]_35 [23]),
        .in3(\ArbOut1[6]_36 [23]),
        .out1(\ArbOut3[6]_14 [23]),
        .out2(\ArbOut4[6]_13 [23]),
        .sel(\Butterfly_out[6]_37 [23]));
  (* DONT_TOUCH *) 
  Butterfly__210 \Puf_Gen[6].Chain_Gen[23].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [23]),
        .Pre(\ArbOut2[6]_35 [23]),
        .Q(\Butterfly_out[6]_37 [23]));
  (* DONT_TOUCH *) 
  Arbys__421 \Puf_Gen[6].Chain_Gen[24].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [23]),
        .in1(\ArbOut4[6]_13 [23]),
        .in2(\ArbOut4[6]_13 [23]),
        .in3(\ArbOut3[6]_14 [23]),
        .out1(\ArbOut1[6]_36 [24]),
        .out2(\ArbOut2[6]_35 [24]),
        .sel(Challenge[24]));
  (* DONT_TOUCH *) 
  Arbys__422 \Puf_Gen[6].Chain_Gen[24].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [24]),
        .in1(\ArbOut2[6]_35 [24]),
        .in2(\ArbOut2[6]_35 [24]),
        .in3(\ArbOut1[6]_36 [24]),
        .out1(\ArbOut3[6]_14 [24]),
        .out2(\ArbOut4[6]_13 [24]),
        .sel(\Butterfly_out[6]_37 [24]));
  (* DONT_TOUCH *) 
  Butterfly__211 \Puf_Gen[6].Chain_Gen[24].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [24]),
        .Pre(\ArbOut2[6]_35 [24]),
        .Q(\Butterfly_out[6]_37 [24]));
  (* DONT_TOUCH *) 
  Arbys__423 \Puf_Gen[6].Chain_Gen[25].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [24]),
        .in1(\ArbOut4[6]_13 [24]),
        .in2(\ArbOut4[6]_13 [24]),
        .in3(\ArbOut3[6]_14 [24]),
        .out1(\ArbOut1[6]_36 [25]),
        .out2(\ArbOut2[6]_35 [25]),
        .sel(Challenge[25]));
  (* DONT_TOUCH *) 
  Arbys__424 \Puf_Gen[6].Chain_Gen[25].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [25]),
        .in1(\ArbOut2[6]_35 [25]),
        .in2(\ArbOut2[6]_35 [25]),
        .in3(\ArbOut1[6]_36 [25]),
        .out1(\ArbOut3[6]_14 [25]),
        .out2(\ArbOut4[6]_13 [25]),
        .sel(\Butterfly_out[6]_37 [25]));
  (* DONT_TOUCH *) 
  Butterfly__212 \Puf_Gen[6].Chain_Gen[25].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [25]),
        .Pre(\ArbOut2[6]_35 [25]),
        .Q(\Butterfly_out[6]_37 [25]));
  (* DONT_TOUCH *) 
  Arbys__425 \Puf_Gen[6].Chain_Gen[26].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [25]),
        .in1(\ArbOut4[6]_13 [25]),
        .in2(\ArbOut4[6]_13 [25]),
        .in3(\ArbOut3[6]_14 [25]),
        .out1(\ArbOut1[6]_36 [26]),
        .out2(\ArbOut2[6]_35 [26]),
        .sel(Challenge[26]));
  (* DONT_TOUCH *) 
  Arbys__426 \Puf_Gen[6].Chain_Gen[26].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [26]),
        .in1(\ArbOut2[6]_35 [26]),
        .in2(\ArbOut2[6]_35 [26]),
        .in3(\ArbOut1[6]_36 [26]),
        .out1(\ArbOut3[6]_14 [26]),
        .out2(\ArbOut4[6]_13 [26]),
        .sel(\Butterfly_out[6]_37 [26]));
  (* DONT_TOUCH *) 
  Butterfly__213 \Puf_Gen[6].Chain_Gen[26].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [26]),
        .Pre(\ArbOut2[6]_35 [26]),
        .Q(\Butterfly_out[6]_37 [26]));
  (* DONT_TOUCH *) 
  Arbys__427 \Puf_Gen[6].Chain_Gen[27].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [26]),
        .in1(\ArbOut4[6]_13 [26]),
        .in2(\ArbOut4[6]_13 [26]),
        .in3(\ArbOut3[6]_14 [26]),
        .out1(\ArbOut1[6]_36 [27]),
        .out2(\ArbOut2[6]_35 [27]),
        .sel(Challenge[27]));
  (* DONT_TOUCH *) 
  Arbys__428 \Puf_Gen[6].Chain_Gen[27].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [27]),
        .in1(\ArbOut2[6]_35 [27]),
        .in2(\ArbOut2[6]_35 [27]),
        .in3(\ArbOut1[6]_36 [27]),
        .out1(\ArbOut3[6]_14 [27]),
        .out2(\ArbOut4[6]_13 [27]),
        .sel(\Butterfly_out[6]_37 [27]));
  (* DONT_TOUCH *) 
  Butterfly__214 \Puf_Gen[6].Chain_Gen[27].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [27]),
        .Pre(\ArbOut2[6]_35 [27]),
        .Q(\Butterfly_out[6]_37 [27]));
  (* DONT_TOUCH *) 
  Arbys__429 \Puf_Gen[6].Chain_Gen[28].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [27]),
        .in1(\ArbOut4[6]_13 [27]),
        .in2(\ArbOut4[6]_13 [27]),
        .in3(\ArbOut3[6]_14 [27]),
        .out1(\ArbOut1[6]_36 [28]),
        .out2(\ArbOut2[6]_35 [28]),
        .sel(Challenge[28]));
  (* DONT_TOUCH *) 
  Arbys__430 \Puf_Gen[6].Chain_Gen[28].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [28]),
        .in1(\ArbOut2[6]_35 [28]),
        .in2(\ArbOut2[6]_35 [28]),
        .in3(\ArbOut1[6]_36 [28]),
        .out1(\ArbOut3[6]_14 [28]),
        .out2(\ArbOut4[6]_13 [28]),
        .sel(\Butterfly_out[6]_37 [28]));
  (* DONT_TOUCH *) 
  Butterfly__215 \Puf_Gen[6].Chain_Gen[28].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [28]),
        .Pre(\ArbOut2[6]_35 [28]),
        .Q(\Butterfly_out[6]_37 [28]));
  (* DONT_TOUCH *) 
  Arbys__431 \Puf_Gen[6].Chain_Gen[29].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [28]),
        .in1(\ArbOut4[6]_13 [28]),
        .in2(\ArbOut4[6]_13 [28]),
        .in3(\ArbOut3[6]_14 [28]),
        .out1(\ArbOut1[6]_36 [29]),
        .out2(\ArbOut2[6]_35 [29]),
        .sel(Challenge[29]));
  (* DONT_TOUCH *) 
  Arbys__432 \Puf_Gen[6].Chain_Gen[29].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [29]),
        .in1(\ArbOut2[6]_35 [29]),
        .in2(\ArbOut2[6]_35 [29]),
        .in3(\ArbOut1[6]_36 [29]),
        .out1(\ArbOut3[6]_14 [29]),
        .out2(\ArbOut4[6]_13 [29]),
        .sel(\Butterfly_out[6]_37 [29]));
  (* DONT_TOUCH *) 
  Butterfly__216 \Puf_Gen[6].Chain_Gen[29].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [29]),
        .Pre(\ArbOut2[6]_35 [29]),
        .Q(\Butterfly_out[6]_37 [29]));
  (* DONT_TOUCH *) 
  Arbys__377 \Puf_Gen[6].Chain_Gen[2].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [1]),
        .in1(\ArbOut4[6]_13 [1]),
        .in2(\ArbOut4[6]_13 [1]),
        .in3(\ArbOut3[6]_14 [1]),
        .out1(\ArbOut1[6]_36 [2]),
        .out2(\ArbOut2[6]_35 [2]),
        .sel(Challenge[2]));
  (* DONT_TOUCH *) 
  Arbys__378 \Puf_Gen[6].Chain_Gen[2].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [2]),
        .in1(\ArbOut2[6]_35 [2]),
        .in2(\ArbOut2[6]_35 [2]),
        .in3(\ArbOut1[6]_36 [2]),
        .out1(\ArbOut3[6]_14 [2]),
        .out2(\ArbOut4[6]_13 [2]),
        .sel(\Butterfly_out[6]_37 [2]));
  (* DONT_TOUCH *) 
  Butterfly__189 \Puf_Gen[6].Chain_Gen[2].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [2]),
        .Pre(\ArbOut2[6]_35 [2]),
        .Q(\Butterfly_out[6]_37 [2]));
  (* DONT_TOUCH *) 
  Arbys__433 \Puf_Gen[6].Chain_Gen[30].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [29]),
        .in1(\ArbOut4[6]_13 [29]),
        .in2(\ArbOut4[6]_13 [29]),
        .in3(\ArbOut3[6]_14 [29]),
        .out1(\ArbOut1[6]_36 [30]),
        .out2(\ArbOut2[6]_35 [30]),
        .sel(Challenge[30]));
  (* DONT_TOUCH *) 
  Arbys__434 \Puf_Gen[6].Chain_Gen[30].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [30]),
        .in1(\ArbOut2[6]_35 [30]),
        .in2(\ArbOut2[6]_35 [30]),
        .in3(\ArbOut1[6]_36 [30]),
        .out1(\ArbOut3[6]_14 [30]),
        .out2(\ArbOut4[6]_13 [30]),
        .sel(\Butterfly_out[6]_37 [30]));
  (* DONT_TOUCH *) 
  Butterfly__217 \Puf_Gen[6].Chain_Gen[30].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [30]),
        .Pre(\ArbOut2[6]_35 [30]),
        .Q(\Butterfly_out[6]_37 [30]));
  (* DONT_TOUCH *) 
  DFF__9 \Puf_Gen[6].Chain_Gen[31].Last_Stage.DFF_inst 
       (.CLK(\ArbOut3[6]_14 [30]),
        .CLR(1'b0),
        .D(\ArbOut4[6]_13 [30]),
        .Pre(1'b0),
        .Q(Response[6]));
  (* DONT_TOUCH *) 
  Arbys__379 \Puf_Gen[6].Chain_Gen[3].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [2]),
        .in1(\ArbOut4[6]_13 [2]),
        .in2(\ArbOut4[6]_13 [2]),
        .in3(\ArbOut3[6]_14 [2]),
        .out1(\ArbOut1[6]_36 [3]),
        .out2(\ArbOut2[6]_35 [3]),
        .sel(Challenge[3]));
  (* DONT_TOUCH *) 
  Arbys__380 \Puf_Gen[6].Chain_Gen[3].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [3]),
        .in1(\ArbOut2[6]_35 [3]),
        .in2(\ArbOut2[6]_35 [3]),
        .in3(\ArbOut1[6]_36 [3]),
        .out1(\ArbOut3[6]_14 [3]),
        .out2(\ArbOut4[6]_13 [3]),
        .sel(\Butterfly_out[6]_37 [3]));
  (* DONT_TOUCH *) 
  Butterfly__190 \Puf_Gen[6].Chain_Gen[3].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [3]),
        .Pre(\ArbOut2[6]_35 [3]),
        .Q(\Butterfly_out[6]_37 [3]));
  (* DONT_TOUCH *) 
  Arbys__381 \Puf_Gen[6].Chain_Gen[4].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [3]),
        .in1(\ArbOut4[6]_13 [3]),
        .in2(\ArbOut4[6]_13 [3]),
        .in3(\ArbOut3[6]_14 [3]),
        .out1(\ArbOut1[6]_36 [4]),
        .out2(\ArbOut2[6]_35 [4]),
        .sel(Challenge[4]));
  (* DONT_TOUCH *) 
  Arbys__382 \Puf_Gen[6].Chain_Gen[4].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [4]),
        .in1(\ArbOut2[6]_35 [4]),
        .in2(\ArbOut2[6]_35 [4]),
        .in3(\ArbOut1[6]_36 [4]),
        .out1(\ArbOut3[6]_14 [4]),
        .out2(\ArbOut4[6]_13 [4]),
        .sel(\Butterfly_out[6]_37 [4]));
  (* DONT_TOUCH *) 
  Butterfly__191 \Puf_Gen[6].Chain_Gen[4].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [4]),
        .Pre(\ArbOut2[6]_35 [4]),
        .Q(\Butterfly_out[6]_37 [4]));
  (* DONT_TOUCH *) 
  Arbys__383 \Puf_Gen[6].Chain_Gen[5].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [4]),
        .in1(\ArbOut4[6]_13 [4]),
        .in2(\ArbOut4[6]_13 [4]),
        .in3(\ArbOut3[6]_14 [4]),
        .out1(\ArbOut1[6]_36 [5]),
        .out2(\ArbOut2[6]_35 [5]),
        .sel(Challenge[5]));
  (* DONT_TOUCH *) 
  Arbys__384 \Puf_Gen[6].Chain_Gen[5].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [5]),
        .in1(\ArbOut2[6]_35 [5]),
        .in2(\ArbOut2[6]_35 [5]),
        .in3(\ArbOut1[6]_36 [5]),
        .out1(\ArbOut3[6]_14 [5]),
        .out2(\ArbOut4[6]_13 [5]),
        .sel(\Butterfly_out[6]_37 [5]));
  (* DONT_TOUCH *) 
  Butterfly__192 \Puf_Gen[6].Chain_Gen[5].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [5]),
        .Pre(\ArbOut2[6]_35 [5]),
        .Q(\Butterfly_out[6]_37 [5]));
  (* DONT_TOUCH *) 
  Arbys__385 \Puf_Gen[6].Chain_Gen[6].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [5]),
        .in1(\ArbOut4[6]_13 [5]),
        .in2(\ArbOut4[6]_13 [5]),
        .in3(\ArbOut3[6]_14 [5]),
        .out1(\ArbOut1[6]_36 [6]),
        .out2(\ArbOut2[6]_35 [6]),
        .sel(Challenge[6]));
  (* DONT_TOUCH *) 
  Arbys__386 \Puf_Gen[6].Chain_Gen[6].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [6]),
        .in1(\ArbOut2[6]_35 [6]),
        .in2(\ArbOut2[6]_35 [6]),
        .in3(\ArbOut1[6]_36 [6]),
        .out1(\ArbOut3[6]_14 [6]),
        .out2(\ArbOut4[6]_13 [6]),
        .sel(\Butterfly_out[6]_37 [6]));
  (* DONT_TOUCH *) 
  Butterfly__193 \Puf_Gen[6].Chain_Gen[6].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [6]),
        .Pre(\ArbOut2[6]_35 [6]),
        .Q(\Butterfly_out[6]_37 [6]));
  (* DONT_TOUCH *) 
  Arbys__387 \Puf_Gen[6].Chain_Gen[7].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [6]),
        .in1(\ArbOut4[6]_13 [6]),
        .in2(\ArbOut4[6]_13 [6]),
        .in3(\ArbOut3[6]_14 [6]),
        .out1(\ArbOut1[6]_36 [7]),
        .out2(\ArbOut2[6]_35 [7]),
        .sel(Challenge[7]));
  (* DONT_TOUCH *) 
  Arbys__388 \Puf_Gen[6].Chain_Gen[7].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [7]),
        .in1(\ArbOut2[6]_35 [7]),
        .in2(\ArbOut2[6]_35 [7]),
        .in3(\ArbOut1[6]_36 [7]),
        .out1(\ArbOut3[6]_14 [7]),
        .out2(\ArbOut4[6]_13 [7]),
        .sel(\Butterfly_out[6]_37 [7]));
  (* DONT_TOUCH *) 
  Butterfly__194 \Puf_Gen[6].Chain_Gen[7].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [7]),
        .Pre(\ArbOut2[6]_35 [7]),
        .Q(\Butterfly_out[6]_37 [7]));
  (* DONT_TOUCH *) 
  Arbys__389 \Puf_Gen[6].Chain_Gen[8].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [7]),
        .in1(\ArbOut4[6]_13 [7]),
        .in2(\ArbOut4[6]_13 [7]),
        .in3(\ArbOut3[6]_14 [7]),
        .out1(\ArbOut1[6]_36 [8]),
        .out2(\ArbOut2[6]_35 [8]),
        .sel(Challenge[8]));
  (* DONT_TOUCH *) 
  Arbys__390 \Puf_Gen[6].Chain_Gen[8].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [8]),
        .in1(\ArbOut2[6]_35 [8]),
        .in2(\ArbOut2[6]_35 [8]),
        .in3(\ArbOut1[6]_36 [8]),
        .out1(\ArbOut3[6]_14 [8]),
        .out2(\ArbOut4[6]_13 [8]),
        .sel(\Butterfly_out[6]_37 [8]));
  (* DONT_TOUCH *) 
  Butterfly__195 \Puf_Gen[6].Chain_Gen[8].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [8]),
        .Pre(\ArbOut2[6]_35 [8]),
        .Q(\Butterfly_out[6]_37 [8]));
  (* DONT_TOUCH *) 
  Arbys__391 \Puf_Gen[6].Chain_Gen[9].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[6]_14 [8]),
        .in1(\ArbOut4[6]_13 [8]),
        .in2(\ArbOut4[6]_13 [8]),
        .in3(\ArbOut3[6]_14 [8]),
        .out1(\ArbOut1[6]_36 [9]),
        .out2(\ArbOut2[6]_35 [9]),
        .sel(Challenge[9]));
  (* DONT_TOUCH *) 
  Arbys__392 \Puf_Gen[6].Chain_Gen[9].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[6]_36 [9]),
        .in1(\ArbOut2[6]_35 [9]),
        .in2(\ArbOut2[6]_35 [9]),
        .in3(\ArbOut1[6]_36 [9]),
        .out1(\ArbOut3[6]_14 [9]),
        .out2(\ArbOut4[6]_13 [9]),
        .sel(\Butterfly_out[6]_37 [9]));
  (* DONT_TOUCH *) 
  Butterfly__196 \Puf_Gen[6].Chain_Gen[9].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[6]_36 [9]),
        .Pre(\ArbOut2[6]_35 [9]),
        .Q(\Butterfly_out[6]_37 [9]));
  (* DONT_TOUCH *) 
  Arbys__435 \Puf_Gen[7].Chain_Gen[0].First_ChainLink.ArbiterL1_inst 
       (.in0(en_puf),
        .in1(en_puf),
        .in2(en_puf),
        .in3(en_puf),
        .out1(\ArbOut1[7]_39 [0]),
        .out2(\ArbOut2[7]_38 [0]),
        .sel(Challenge[0]));
  (* DONT_TOUCH *) 
  Arbys__436 \Puf_Gen[7].Chain_Gen[0].First_ChainLink.ArbiterL2_inst 
       (.in0(\ArbOut1[7]_39 [0]),
        .in1(\ArbOut2[7]_38 [0]),
        .in2(\ArbOut2[7]_38 [0]),
        .in3(\ArbOut1[7]_39 [0]),
        .out1(\ArbOut3[7]_16 [0]),
        .out2(\ArbOut4[7]_15 [0]),
        .sel(\Butterfly_out[7]_40 [0]));
  (* DONT_TOUCH *) 
  Butterfly__218 \Puf_Gen[7].Chain_Gen[0].First_ChainLink.Butterfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [0]),
        .Pre(\ArbOut2[7]_38 [0]),
        .Q(\Butterfly_out[7]_40 [0]));
  (* DONT_TOUCH *) 
  Arbys__455 \Puf_Gen[7].Chain_Gen[10].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [9]),
        .in1(\ArbOut4[7]_15 [9]),
        .in2(\ArbOut4[7]_15 [9]),
        .in3(\ArbOut3[7]_16 [9]),
        .out1(\ArbOut1[7]_39 [10]),
        .out2(\ArbOut2[7]_38 [10]),
        .sel(Challenge[10]));
  (* DONT_TOUCH *) 
  Arbys__456 \Puf_Gen[7].Chain_Gen[10].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [10]),
        .in1(\ArbOut2[7]_38 [10]),
        .in2(\ArbOut2[7]_38 [10]),
        .in3(\ArbOut1[7]_39 [10]),
        .out1(\ArbOut3[7]_16 [10]),
        .out2(\ArbOut4[7]_15 [10]),
        .sel(\Butterfly_out[7]_40 [10]));
  (* DONT_TOUCH *) 
  Butterfly__228 \Puf_Gen[7].Chain_Gen[10].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [10]),
        .Pre(\ArbOut2[7]_38 [10]),
        .Q(\Butterfly_out[7]_40 [10]));
  (* DONT_TOUCH *) 
  Arbys__457 \Puf_Gen[7].Chain_Gen[11].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [10]),
        .in1(\ArbOut4[7]_15 [10]),
        .in2(\ArbOut4[7]_15 [10]),
        .in3(\ArbOut3[7]_16 [10]),
        .out1(\ArbOut1[7]_39 [11]),
        .out2(\ArbOut2[7]_38 [11]),
        .sel(Challenge[11]));
  (* DONT_TOUCH *) 
  Arbys__458 \Puf_Gen[7].Chain_Gen[11].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [11]),
        .in1(\ArbOut2[7]_38 [11]),
        .in2(\ArbOut2[7]_38 [11]),
        .in3(\ArbOut1[7]_39 [11]),
        .out1(\ArbOut3[7]_16 [11]),
        .out2(\ArbOut4[7]_15 [11]),
        .sel(\Butterfly_out[7]_40 [11]));
  (* DONT_TOUCH *) 
  Butterfly__229 \Puf_Gen[7].Chain_Gen[11].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [11]),
        .Pre(\ArbOut2[7]_38 [11]),
        .Q(\Butterfly_out[7]_40 [11]));
  (* DONT_TOUCH *) 
  Arbys__459 \Puf_Gen[7].Chain_Gen[12].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [11]),
        .in1(\ArbOut4[7]_15 [11]),
        .in2(\ArbOut4[7]_15 [11]),
        .in3(\ArbOut3[7]_16 [11]),
        .out1(\ArbOut1[7]_39 [12]),
        .out2(\ArbOut2[7]_38 [12]),
        .sel(Challenge[12]));
  (* DONT_TOUCH *) 
  Arbys__460 \Puf_Gen[7].Chain_Gen[12].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [12]),
        .in1(\ArbOut2[7]_38 [12]),
        .in2(\ArbOut2[7]_38 [12]),
        .in3(\ArbOut1[7]_39 [12]),
        .out1(\ArbOut3[7]_16 [12]),
        .out2(\ArbOut4[7]_15 [12]),
        .sel(\Butterfly_out[7]_40 [12]));
  (* DONT_TOUCH *) 
  Butterfly__230 \Puf_Gen[7].Chain_Gen[12].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [12]),
        .Pre(\ArbOut2[7]_38 [12]),
        .Q(\Butterfly_out[7]_40 [12]));
  (* DONT_TOUCH *) 
  Arbys__461 \Puf_Gen[7].Chain_Gen[13].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [12]),
        .in1(\ArbOut4[7]_15 [12]),
        .in2(\ArbOut4[7]_15 [12]),
        .in3(\ArbOut3[7]_16 [12]),
        .out1(\ArbOut1[7]_39 [13]),
        .out2(\ArbOut2[7]_38 [13]),
        .sel(Challenge[13]));
  (* DONT_TOUCH *) 
  Arbys__462 \Puf_Gen[7].Chain_Gen[13].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [13]),
        .in1(\ArbOut2[7]_38 [13]),
        .in2(\ArbOut2[7]_38 [13]),
        .in3(\ArbOut1[7]_39 [13]),
        .out1(\ArbOut3[7]_16 [13]),
        .out2(\ArbOut4[7]_15 [13]),
        .sel(\Butterfly_out[7]_40 [13]));
  (* DONT_TOUCH *) 
  Butterfly__231 \Puf_Gen[7].Chain_Gen[13].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [13]),
        .Pre(\ArbOut2[7]_38 [13]),
        .Q(\Butterfly_out[7]_40 [13]));
  (* DONT_TOUCH *) 
  Arbys__463 \Puf_Gen[7].Chain_Gen[14].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [13]),
        .in1(\ArbOut4[7]_15 [13]),
        .in2(\ArbOut4[7]_15 [13]),
        .in3(\ArbOut3[7]_16 [13]),
        .out1(\ArbOut1[7]_39 [14]),
        .out2(\ArbOut2[7]_38 [14]),
        .sel(Challenge[14]));
  (* DONT_TOUCH *) 
  Arbys__464 \Puf_Gen[7].Chain_Gen[14].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [14]),
        .in1(\ArbOut2[7]_38 [14]),
        .in2(\ArbOut2[7]_38 [14]),
        .in3(\ArbOut1[7]_39 [14]),
        .out1(\ArbOut3[7]_16 [14]),
        .out2(\ArbOut4[7]_15 [14]),
        .sel(\Butterfly_out[7]_40 [14]));
  (* DONT_TOUCH *) 
  Butterfly__232 \Puf_Gen[7].Chain_Gen[14].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [14]),
        .Pre(\ArbOut2[7]_38 [14]),
        .Q(\Butterfly_out[7]_40 [14]));
  (* DONT_TOUCH *) 
  Arbys__465 \Puf_Gen[7].Chain_Gen[15].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [14]),
        .in1(\ArbOut4[7]_15 [14]),
        .in2(\ArbOut4[7]_15 [14]),
        .in3(\ArbOut3[7]_16 [14]),
        .out1(\ArbOut1[7]_39 [15]),
        .out2(\ArbOut2[7]_38 [15]),
        .sel(Challenge[15]));
  (* DONT_TOUCH *) 
  Arbys__466 \Puf_Gen[7].Chain_Gen[15].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [15]),
        .in1(\ArbOut2[7]_38 [15]),
        .in2(\ArbOut2[7]_38 [15]),
        .in3(\ArbOut1[7]_39 [15]),
        .out1(\ArbOut3[7]_16 [15]),
        .out2(\ArbOut4[7]_15 [15]),
        .sel(\Butterfly_out[7]_40 [15]));
  (* DONT_TOUCH *) 
  Butterfly__233 \Puf_Gen[7].Chain_Gen[15].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [15]),
        .Pre(\ArbOut2[7]_38 [15]),
        .Q(\Butterfly_out[7]_40 [15]));
  (* DONT_TOUCH *) 
  Arbys__467 \Puf_Gen[7].Chain_Gen[16].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [15]),
        .in1(\ArbOut4[7]_15 [15]),
        .in2(\ArbOut4[7]_15 [15]),
        .in3(\ArbOut3[7]_16 [15]),
        .out1(\ArbOut1[7]_39 [16]),
        .out2(\ArbOut2[7]_38 [16]),
        .sel(Challenge[16]));
  (* DONT_TOUCH *) 
  Arbys__468 \Puf_Gen[7].Chain_Gen[16].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [16]),
        .in1(\ArbOut2[7]_38 [16]),
        .in2(\ArbOut2[7]_38 [16]),
        .in3(\ArbOut1[7]_39 [16]),
        .out1(\ArbOut3[7]_16 [16]),
        .out2(\ArbOut4[7]_15 [16]),
        .sel(\Butterfly_out[7]_40 [16]));
  (* DONT_TOUCH *) 
  Butterfly__234 \Puf_Gen[7].Chain_Gen[16].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [16]),
        .Pre(\ArbOut2[7]_38 [16]),
        .Q(\Butterfly_out[7]_40 [16]));
  (* DONT_TOUCH *) 
  Arbys__469 \Puf_Gen[7].Chain_Gen[17].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [16]),
        .in1(\ArbOut4[7]_15 [16]),
        .in2(\ArbOut4[7]_15 [16]),
        .in3(\ArbOut3[7]_16 [16]),
        .out1(\ArbOut1[7]_39 [17]),
        .out2(\ArbOut2[7]_38 [17]),
        .sel(Challenge[17]));
  (* DONT_TOUCH *) 
  Arbys__470 \Puf_Gen[7].Chain_Gen[17].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [17]),
        .in1(\ArbOut2[7]_38 [17]),
        .in2(\ArbOut2[7]_38 [17]),
        .in3(\ArbOut1[7]_39 [17]),
        .out1(\ArbOut3[7]_16 [17]),
        .out2(\ArbOut4[7]_15 [17]),
        .sel(\Butterfly_out[7]_40 [17]));
  (* DONT_TOUCH *) 
  Butterfly__235 \Puf_Gen[7].Chain_Gen[17].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [17]),
        .Pre(\ArbOut2[7]_38 [17]),
        .Q(\Butterfly_out[7]_40 [17]));
  (* DONT_TOUCH *) 
  Arbys__471 \Puf_Gen[7].Chain_Gen[18].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [17]),
        .in1(\ArbOut4[7]_15 [17]),
        .in2(\ArbOut4[7]_15 [17]),
        .in3(\ArbOut3[7]_16 [17]),
        .out1(\ArbOut1[7]_39 [18]),
        .out2(\ArbOut2[7]_38 [18]),
        .sel(Challenge[18]));
  (* DONT_TOUCH *) 
  Arbys__472 \Puf_Gen[7].Chain_Gen[18].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [18]),
        .in1(\ArbOut2[7]_38 [18]),
        .in2(\ArbOut2[7]_38 [18]),
        .in3(\ArbOut1[7]_39 [18]),
        .out1(\ArbOut3[7]_16 [18]),
        .out2(\ArbOut4[7]_15 [18]),
        .sel(\Butterfly_out[7]_40 [18]));
  (* DONT_TOUCH *) 
  Butterfly__236 \Puf_Gen[7].Chain_Gen[18].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [18]),
        .Pre(\ArbOut2[7]_38 [18]),
        .Q(\Butterfly_out[7]_40 [18]));
  (* DONT_TOUCH *) 
  Arbys__473 \Puf_Gen[7].Chain_Gen[19].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [18]),
        .in1(\ArbOut4[7]_15 [18]),
        .in2(\ArbOut4[7]_15 [18]),
        .in3(\ArbOut3[7]_16 [18]),
        .out1(\ArbOut1[7]_39 [19]),
        .out2(\ArbOut2[7]_38 [19]),
        .sel(Challenge[19]));
  (* DONT_TOUCH *) 
  Arbys__474 \Puf_Gen[7].Chain_Gen[19].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [19]),
        .in1(\ArbOut2[7]_38 [19]),
        .in2(\ArbOut2[7]_38 [19]),
        .in3(\ArbOut1[7]_39 [19]),
        .out1(\ArbOut3[7]_16 [19]),
        .out2(\ArbOut4[7]_15 [19]),
        .sel(\Butterfly_out[7]_40 [19]));
  (* DONT_TOUCH *) 
  Butterfly__237 \Puf_Gen[7].Chain_Gen[19].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [19]),
        .Pre(\ArbOut2[7]_38 [19]),
        .Q(\Butterfly_out[7]_40 [19]));
  (* DONT_TOUCH *) 
  Arbys__437 \Puf_Gen[7].Chain_Gen[1].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [0]),
        .in1(\ArbOut4[7]_15 [0]),
        .in2(\ArbOut4[7]_15 [0]),
        .in3(\ArbOut3[7]_16 [0]),
        .out1(\ArbOut1[7]_39 [1]),
        .out2(\ArbOut2[7]_38 [1]),
        .sel(Challenge[1]));
  (* DONT_TOUCH *) 
  Arbys__438 \Puf_Gen[7].Chain_Gen[1].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [1]),
        .in1(\ArbOut2[7]_38 [1]),
        .in2(\ArbOut2[7]_38 [1]),
        .in3(\ArbOut1[7]_39 [1]),
        .out1(\ArbOut3[7]_16 [1]),
        .out2(\ArbOut4[7]_15 [1]),
        .sel(\Butterfly_out[7]_40 [1]));
  (* DONT_TOUCH *) 
  Butterfly__219 \Puf_Gen[7].Chain_Gen[1].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [1]),
        .Pre(\ArbOut2[7]_38 [1]),
        .Q(\Butterfly_out[7]_40 [1]));
  (* DONT_TOUCH *) 
  Arbys__475 \Puf_Gen[7].Chain_Gen[20].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [19]),
        .in1(\ArbOut4[7]_15 [19]),
        .in2(\ArbOut4[7]_15 [19]),
        .in3(\ArbOut3[7]_16 [19]),
        .out1(\ArbOut1[7]_39 [20]),
        .out2(\ArbOut2[7]_38 [20]),
        .sel(Challenge[20]));
  (* DONT_TOUCH *) 
  Arbys__476 \Puf_Gen[7].Chain_Gen[20].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [20]),
        .in1(\ArbOut2[7]_38 [20]),
        .in2(\ArbOut2[7]_38 [20]),
        .in3(\ArbOut1[7]_39 [20]),
        .out1(\ArbOut3[7]_16 [20]),
        .out2(\ArbOut4[7]_15 [20]),
        .sel(\Butterfly_out[7]_40 [20]));
  (* DONT_TOUCH *) 
  Butterfly__238 \Puf_Gen[7].Chain_Gen[20].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [20]),
        .Pre(\ArbOut2[7]_38 [20]),
        .Q(\Butterfly_out[7]_40 [20]));
  (* DONT_TOUCH *) 
  Arbys__477 \Puf_Gen[7].Chain_Gen[21].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [20]),
        .in1(\ArbOut4[7]_15 [20]),
        .in2(\ArbOut4[7]_15 [20]),
        .in3(\ArbOut3[7]_16 [20]),
        .out1(\ArbOut1[7]_39 [21]),
        .out2(\ArbOut2[7]_38 [21]),
        .sel(Challenge[21]));
  (* DONT_TOUCH *) 
  Arbys__478 \Puf_Gen[7].Chain_Gen[21].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [21]),
        .in1(\ArbOut2[7]_38 [21]),
        .in2(\ArbOut2[7]_38 [21]),
        .in3(\ArbOut1[7]_39 [21]),
        .out1(\ArbOut3[7]_16 [21]),
        .out2(\ArbOut4[7]_15 [21]),
        .sel(\Butterfly_out[7]_40 [21]));
  (* DONT_TOUCH *) 
  Butterfly__239 \Puf_Gen[7].Chain_Gen[21].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [21]),
        .Pre(\ArbOut2[7]_38 [21]),
        .Q(\Butterfly_out[7]_40 [21]));
  (* DONT_TOUCH *) 
  Arbys__479 \Puf_Gen[7].Chain_Gen[22].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [21]),
        .in1(\ArbOut4[7]_15 [21]),
        .in2(\ArbOut4[7]_15 [21]),
        .in3(\ArbOut3[7]_16 [21]),
        .out1(\ArbOut1[7]_39 [22]),
        .out2(\ArbOut2[7]_38 [22]),
        .sel(Challenge[22]));
  (* DONT_TOUCH *) 
  Arbys__480 \Puf_Gen[7].Chain_Gen[22].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [22]),
        .in1(\ArbOut2[7]_38 [22]),
        .in2(\ArbOut2[7]_38 [22]),
        .in3(\ArbOut1[7]_39 [22]),
        .out1(\ArbOut3[7]_16 [22]),
        .out2(\ArbOut4[7]_15 [22]),
        .sel(\Butterfly_out[7]_40 [22]));
  (* DONT_TOUCH *) 
  Butterfly__240 \Puf_Gen[7].Chain_Gen[22].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [22]),
        .Pre(\ArbOut2[7]_38 [22]),
        .Q(\Butterfly_out[7]_40 [22]));
  (* DONT_TOUCH *) 
  Arbys__481 \Puf_Gen[7].Chain_Gen[23].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [22]),
        .in1(\ArbOut4[7]_15 [22]),
        .in2(\ArbOut4[7]_15 [22]),
        .in3(\ArbOut3[7]_16 [22]),
        .out1(\ArbOut1[7]_39 [23]),
        .out2(\ArbOut2[7]_38 [23]),
        .sel(Challenge[23]));
  (* DONT_TOUCH *) 
  Arbys__482 \Puf_Gen[7].Chain_Gen[23].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [23]),
        .in1(\ArbOut2[7]_38 [23]),
        .in2(\ArbOut2[7]_38 [23]),
        .in3(\ArbOut1[7]_39 [23]),
        .out1(\ArbOut3[7]_16 [23]),
        .out2(\ArbOut4[7]_15 [23]),
        .sel(\Butterfly_out[7]_40 [23]));
  (* DONT_TOUCH *) 
  Butterfly__241 \Puf_Gen[7].Chain_Gen[23].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [23]),
        .Pre(\ArbOut2[7]_38 [23]),
        .Q(\Butterfly_out[7]_40 [23]));
  (* DONT_TOUCH *) 
  Arbys__483 \Puf_Gen[7].Chain_Gen[24].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [23]),
        .in1(\ArbOut4[7]_15 [23]),
        .in2(\ArbOut4[7]_15 [23]),
        .in3(\ArbOut3[7]_16 [23]),
        .out1(\ArbOut1[7]_39 [24]),
        .out2(\ArbOut2[7]_38 [24]),
        .sel(Challenge[24]));
  (* DONT_TOUCH *) 
  Arbys__484 \Puf_Gen[7].Chain_Gen[24].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [24]),
        .in1(\ArbOut2[7]_38 [24]),
        .in2(\ArbOut2[7]_38 [24]),
        .in3(\ArbOut1[7]_39 [24]),
        .out1(\ArbOut3[7]_16 [24]),
        .out2(\ArbOut4[7]_15 [24]),
        .sel(\Butterfly_out[7]_40 [24]));
  (* DONT_TOUCH *) 
  Butterfly__242 \Puf_Gen[7].Chain_Gen[24].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [24]),
        .Pre(\ArbOut2[7]_38 [24]),
        .Q(\Butterfly_out[7]_40 [24]));
  (* DONT_TOUCH *) 
  Arbys__485 \Puf_Gen[7].Chain_Gen[25].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [24]),
        .in1(\ArbOut4[7]_15 [24]),
        .in2(\ArbOut4[7]_15 [24]),
        .in3(\ArbOut3[7]_16 [24]),
        .out1(\ArbOut1[7]_39 [25]),
        .out2(\ArbOut2[7]_38 [25]),
        .sel(Challenge[25]));
  (* DONT_TOUCH *) 
  Arbys__486 \Puf_Gen[7].Chain_Gen[25].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [25]),
        .in1(\ArbOut2[7]_38 [25]),
        .in2(\ArbOut2[7]_38 [25]),
        .in3(\ArbOut1[7]_39 [25]),
        .out1(\ArbOut3[7]_16 [25]),
        .out2(\ArbOut4[7]_15 [25]),
        .sel(\Butterfly_out[7]_40 [25]));
  (* DONT_TOUCH *) 
  Butterfly__243 \Puf_Gen[7].Chain_Gen[25].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [25]),
        .Pre(\ArbOut2[7]_38 [25]),
        .Q(\Butterfly_out[7]_40 [25]));
  (* DONT_TOUCH *) 
  Arbys__487 \Puf_Gen[7].Chain_Gen[26].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [25]),
        .in1(\ArbOut4[7]_15 [25]),
        .in2(\ArbOut4[7]_15 [25]),
        .in3(\ArbOut3[7]_16 [25]),
        .out1(\ArbOut1[7]_39 [26]),
        .out2(\ArbOut2[7]_38 [26]),
        .sel(Challenge[26]));
  (* DONT_TOUCH *) 
  Arbys__488 \Puf_Gen[7].Chain_Gen[26].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [26]),
        .in1(\ArbOut2[7]_38 [26]),
        .in2(\ArbOut2[7]_38 [26]),
        .in3(\ArbOut1[7]_39 [26]),
        .out1(\ArbOut3[7]_16 [26]),
        .out2(\ArbOut4[7]_15 [26]),
        .sel(\Butterfly_out[7]_40 [26]));
  (* DONT_TOUCH *) 
  Butterfly__244 \Puf_Gen[7].Chain_Gen[26].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [26]),
        .Pre(\ArbOut2[7]_38 [26]),
        .Q(\Butterfly_out[7]_40 [26]));
  (* DONT_TOUCH *) 
  Arbys__489 \Puf_Gen[7].Chain_Gen[27].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [26]),
        .in1(\ArbOut4[7]_15 [26]),
        .in2(\ArbOut4[7]_15 [26]),
        .in3(\ArbOut3[7]_16 [26]),
        .out1(\ArbOut1[7]_39 [27]),
        .out2(\ArbOut2[7]_38 [27]),
        .sel(Challenge[27]));
  (* DONT_TOUCH *) 
  Arbys__490 \Puf_Gen[7].Chain_Gen[27].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [27]),
        .in1(\ArbOut2[7]_38 [27]),
        .in2(\ArbOut2[7]_38 [27]),
        .in3(\ArbOut1[7]_39 [27]),
        .out1(\ArbOut3[7]_16 [27]),
        .out2(\ArbOut4[7]_15 [27]),
        .sel(\Butterfly_out[7]_40 [27]));
  (* DONT_TOUCH *) 
  Butterfly__245 \Puf_Gen[7].Chain_Gen[27].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [27]),
        .Pre(\ArbOut2[7]_38 [27]),
        .Q(\Butterfly_out[7]_40 [27]));
  (* DONT_TOUCH *) 
  Arbys__491 \Puf_Gen[7].Chain_Gen[28].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [27]),
        .in1(\ArbOut4[7]_15 [27]),
        .in2(\ArbOut4[7]_15 [27]),
        .in3(\ArbOut3[7]_16 [27]),
        .out1(\ArbOut1[7]_39 [28]),
        .out2(\ArbOut2[7]_38 [28]),
        .sel(Challenge[28]));
  (* DONT_TOUCH *) 
  Arbys__492 \Puf_Gen[7].Chain_Gen[28].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [28]),
        .in1(\ArbOut2[7]_38 [28]),
        .in2(\ArbOut2[7]_38 [28]),
        .in3(\ArbOut1[7]_39 [28]),
        .out1(\ArbOut3[7]_16 [28]),
        .out2(\ArbOut4[7]_15 [28]),
        .sel(\Butterfly_out[7]_40 [28]));
  (* DONT_TOUCH *) 
  Butterfly__246 \Puf_Gen[7].Chain_Gen[28].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [28]),
        .Pre(\ArbOut2[7]_38 [28]),
        .Q(\Butterfly_out[7]_40 [28]));
  (* DONT_TOUCH *) 
  Arbys__493 \Puf_Gen[7].Chain_Gen[29].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [28]),
        .in1(\ArbOut4[7]_15 [28]),
        .in2(\ArbOut4[7]_15 [28]),
        .in3(\ArbOut3[7]_16 [28]),
        .out1(\ArbOut1[7]_39 [29]),
        .out2(\ArbOut2[7]_38 [29]),
        .sel(Challenge[29]));
  (* DONT_TOUCH *) 
  Arbys__494 \Puf_Gen[7].Chain_Gen[29].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [29]),
        .in1(\ArbOut2[7]_38 [29]),
        .in2(\ArbOut2[7]_38 [29]),
        .in3(\ArbOut1[7]_39 [29]),
        .out1(\ArbOut3[7]_16 [29]),
        .out2(\ArbOut4[7]_15 [29]),
        .sel(\Butterfly_out[7]_40 [29]));
  (* DONT_TOUCH *) 
  Butterfly__247 \Puf_Gen[7].Chain_Gen[29].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [29]),
        .Pre(\ArbOut2[7]_38 [29]),
        .Q(\Butterfly_out[7]_40 [29]));
  (* DONT_TOUCH *) 
  Arbys__439 \Puf_Gen[7].Chain_Gen[2].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [1]),
        .in1(\ArbOut4[7]_15 [1]),
        .in2(\ArbOut4[7]_15 [1]),
        .in3(\ArbOut3[7]_16 [1]),
        .out1(\ArbOut1[7]_39 [2]),
        .out2(\ArbOut2[7]_38 [2]),
        .sel(Challenge[2]));
  (* DONT_TOUCH *) 
  Arbys__440 \Puf_Gen[7].Chain_Gen[2].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [2]),
        .in1(\ArbOut2[7]_38 [2]),
        .in2(\ArbOut2[7]_38 [2]),
        .in3(\ArbOut1[7]_39 [2]),
        .out1(\ArbOut3[7]_16 [2]),
        .out2(\ArbOut4[7]_15 [2]),
        .sel(\Butterfly_out[7]_40 [2]));
  (* DONT_TOUCH *) 
  Butterfly__220 \Puf_Gen[7].Chain_Gen[2].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [2]),
        .Pre(\ArbOut2[7]_38 [2]),
        .Q(\Butterfly_out[7]_40 [2]));
  (* DONT_TOUCH *) 
  Arbys__495 \Puf_Gen[7].Chain_Gen[30].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [29]),
        .in1(\ArbOut4[7]_15 [29]),
        .in2(\ArbOut4[7]_15 [29]),
        .in3(\ArbOut3[7]_16 [29]),
        .out1(\ArbOut1[7]_39 [30]),
        .out2(\ArbOut2[7]_38 [30]),
        .sel(Challenge[30]));
  (* DONT_TOUCH *) 
  Arbys \Puf_Gen[7].Chain_Gen[30].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [30]),
        .in1(\ArbOut2[7]_38 [30]),
        .in2(\ArbOut2[7]_38 [30]),
        .in3(\ArbOut1[7]_39 [30]),
        .out1(\ArbOut3[7]_16 [30]),
        .out2(\ArbOut4[7]_15 [30]),
        .sel(\Butterfly_out[7]_40 [30]));
  (* DONT_TOUCH *) 
  Butterfly \Puf_Gen[7].Chain_Gen[30].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [30]),
        .Pre(\ArbOut2[7]_38 [30]),
        .Q(\Butterfly_out[7]_40 [30]));
  (* DONT_TOUCH *) 
  DFF \Puf_Gen[7].Chain_Gen[31].Last_Stage.DFF_inst 
       (.CLK(\ArbOut3[7]_16 [30]),
        .CLR(1'b0),
        .D(\ArbOut4[7]_15 [30]),
        .Pre(1'b0),
        .Q(Response[7]));
  (* DONT_TOUCH *) 
  Arbys__441 \Puf_Gen[7].Chain_Gen[3].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [2]),
        .in1(\ArbOut4[7]_15 [2]),
        .in2(\ArbOut4[7]_15 [2]),
        .in3(\ArbOut3[7]_16 [2]),
        .out1(\ArbOut1[7]_39 [3]),
        .out2(\ArbOut2[7]_38 [3]),
        .sel(Challenge[3]));
  (* DONT_TOUCH *) 
  Arbys__442 \Puf_Gen[7].Chain_Gen[3].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [3]),
        .in1(\ArbOut2[7]_38 [3]),
        .in2(\ArbOut2[7]_38 [3]),
        .in3(\ArbOut1[7]_39 [3]),
        .out1(\ArbOut3[7]_16 [3]),
        .out2(\ArbOut4[7]_15 [3]),
        .sel(\Butterfly_out[7]_40 [3]));
  (* DONT_TOUCH *) 
  Butterfly__221 \Puf_Gen[7].Chain_Gen[3].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [3]),
        .Pre(\ArbOut2[7]_38 [3]),
        .Q(\Butterfly_out[7]_40 [3]));
  (* DONT_TOUCH *) 
  Arbys__443 \Puf_Gen[7].Chain_Gen[4].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [3]),
        .in1(\ArbOut4[7]_15 [3]),
        .in2(\ArbOut4[7]_15 [3]),
        .in3(\ArbOut3[7]_16 [3]),
        .out1(\ArbOut1[7]_39 [4]),
        .out2(\ArbOut2[7]_38 [4]),
        .sel(Challenge[4]));
  (* DONT_TOUCH *) 
  Arbys__444 \Puf_Gen[7].Chain_Gen[4].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [4]),
        .in1(\ArbOut2[7]_38 [4]),
        .in2(\ArbOut2[7]_38 [4]),
        .in3(\ArbOut1[7]_39 [4]),
        .out1(\ArbOut3[7]_16 [4]),
        .out2(\ArbOut4[7]_15 [4]),
        .sel(\Butterfly_out[7]_40 [4]));
  (* DONT_TOUCH *) 
  Butterfly__222 \Puf_Gen[7].Chain_Gen[4].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [4]),
        .Pre(\ArbOut2[7]_38 [4]),
        .Q(\Butterfly_out[7]_40 [4]));
  (* DONT_TOUCH *) 
  Arbys__445 \Puf_Gen[7].Chain_Gen[5].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [4]),
        .in1(\ArbOut4[7]_15 [4]),
        .in2(\ArbOut4[7]_15 [4]),
        .in3(\ArbOut3[7]_16 [4]),
        .out1(\ArbOut1[7]_39 [5]),
        .out2(\ArbOut2[7]_38 [5]),
        .sel(Challenge[5]));
  (* DONT_TOUCH *) 
  Arbys__446 \Puf_Gen[7].Chain_Gen[5].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [5]),
        .in1(\ArbOut2[7]_38 [5]),
        .in2(\ArbOut2[7]_38 [5]),
        .in3(\ArbOut1[7]_39 [5]),
        .out1(\ArbOut3[7]_16 [5]),
        .out2(\ArbOut4[7]_15 [5]),
        .sel(\Butterfly_out[7]_40 [5]));
  (* DONT_TOUCH *) 
  Butterfly__223 \Puf_Gen[7].Chain_Gen[5].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [5]),
        .Pre(\ArbOut2[7]_38 [5]),
        .Q(\Butterfly_out[7]_40 [5]));
  (* DONT_TOUCH *) 
  Arbys__447 \Puf_Gen[7].Chain_Gen[6].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [5]),
        .in1(\ArbOut4[7]_15 [5]),
        .in2(\ArbOut4[7]_15 [5]),
        .in3(\ArbOut3[7]_16 [5]),
        .out1(\ArbOut1[7]_39 [6]),
        .out2(\ArbOut2[7]_38 [6]),
        .sel(Challenge[6]));
  (* DONT_TOUCH *) 
  Arbys__448 \Puf_Gen[7].Chain_Gen[6].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [6]),
        .in1(\ArbOut2[7]_38 [6]),
        .in2(\ArbOut2[7]_38 [6]),
        .in3(\ArbOut1[7]_39 [6]),
        .out1(\ArbOut3[7]_16 [6]),
        .out2(\ArbOut4[7]_15 [6]),
        .sel(\Butterfly_out[7]_40 [6]));
  (* DONT_TOUCH *) 
  Butterfly__224 \Puf_Gen[7].Chain_Gen[6].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [6]),
        .Pre(\ArbOut2[7]_38 [6]),
        .Q(\Butterfly_out[7]_40 [6]));
  (* DONT_TOUCH *) 
  Arbys__449 \Puf_Gen[7].Chain_Gen[7].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [6]),
        .in1(\ArbOut4[7]_15 [6]),
        .in2(\ArbOut4[7]_15 [6]),
        .in3(\ArbOut3[7]_16 [6]),
        .out1(\ArbOut1[7]_39 [7]),
        .out2(\ArbOut2[7]_38 [7]),
        .sel(Challenge[7]));
  (* DONT_TOUCH *) 
  Arbys__450 \Puf_Gen[7].Chain_Gen[7].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [7]),
        .in1(\ArbOut2[7]_38 [7]),
        .in2(\ArbOut2[7]_38 [7]),
        .in3(\ArbOut1[7]_39 [7]),
        .out1(\ArbOut3[7]_16 [7]),
        .out2(\ArbOut4[7]_15 [7]),
        .sel(\Butterfly_out[7]_40 [7]));
  (* DONT_TOUCH *) 
  Butterfly__225 \Puf_Gen[7].Chain_Gen[7].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [7]),
        .Pre(\ArbOut2[7]_38 [7]),
        .Q(\Butterfly_out[7]_40 [7]));
  (* DONT_TOUCH *) 
  Arbys__451 \Puf_Gen[7].Chain_Gen[8].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [7]),
        .in1(\ArbOut4[7]_15 [7]),
        .in2(\ArbOut4[7]_15 [7]),
        .in3(\ArbOut3[7]_16 [7]),
        .out1(\ArbOut1[7]_39 [8]),
        .out2(\ArbOut2[7]_38 [8]),
        .sel(Challenge[8]));
  (* DONT_TOUCH *) 
  Arbys__452 \Puf_Gen[7].Chain_Gen[8].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [8]),
        .in1(\ArbOut2[7]_38 [8]),
        .in2(\ArbOut2[7]_38 [8]),
        .in3(\ArbOut1[7]_39 [8]),
        .out1(\ArbOut3[7]_16 [8]),
        .out2(\ArbOut4[7]_15 [8]),
        .sel(\Butterfly_out[7]_40 [8]));
  (* DONT_TOUCH *) 
  Butterfly__226 \Puf_Gen[7].Chain_Gen[8].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [8]),
        .Pre(\ArbOut2[7]_38 [8]),
        .Q(\Butterfly_out[7]_40 [8]));
  (* DONT_TOUCH *) 
  Arbys__453 \Puf_Gen[7].Chain_Gen[9].Middle_arbiters.MidArbsL1_inst 
       (.in0(\ArbOut3[7]_16 [8]),
        .in1(\ArbOut4[7]_15 [8]),
        .in2(\ArbOut4[7]_15 [8]),
        .in3(\ArbOut3[7]_16 [8]),
        .out1(\ArbOut1[7]_39 [9]),
        .out2(\ArbOut2[7]_38 [9]),
        .sel(Challenge[9]));
  (* DONT_TOUCH *) 
  Arbys__454 \Puf_Gen[7].Chain_Gen[9].Middle_arbiters.MidArbsL2_inst 
       (.in0(\ArbOut1[7]_39 [9]),
        .in1(\ArbOut2[7]_38 [9]),
        .in2(\ArbOut2[7]_38 [9]),
        .in3(\ArbOut1[7]_39 [9]),
        .out1(\ArbOut3[7]_16 [9]),
        .out2(\ArbOut4[7]_15 [9]),
        .sel(\Butterfly_out[7]_40 [9]));
  (* DONT_TOUCH *) 
  Butterfly__227 \Puf_Gen[7].Chain_Gen[9].Middle_arbiters.MidBfly_inst 
       (.CLK(CLK),
        .Clr(\ArbOut1[7]_39 [9]),
        .Pre(\ArbOut2[7]_38 [9]),
        .Q(\Butterfly_out[7]_40 [9]));
endmodule

(* chal_size = "32" *) (* resp_size = "8" *) 
(* NotValidForBitStream *)
module top_puf
   (clk,
    clk_cycle_wait,
    enable,
    challenge,
    ready,
    response);
  input clk;
  input [7:0]clk_cycle_wait;
  input enable;
  (* dont_touch = "TRUE" *) input [31:0]challenge;
  output ready;
  output [7:0]response;

  wire \FSM_sequential_state[0]_i_2_n_0 ;
  wire \FSM_sequential_state[1]_i_1_n_0 ;
  wire \FSM_sequential_state[1]_i_4_n_0 ;
  wire \FSM_sequential_state[1]_i_5_n_0 ;
  wire \FSM_sequential_state[1]_i_6_n_0 ;
  wire \FSM_sequential_state[1]_i_7_n_0 ;
  wire \FSM_sequential_state[1]_i_8_n_0 ;
  wire [31:0]challenge;
  wire [30:0]challenge_IBUF;
  wire clk;
  wire clk_IBUF;
  wire clk_IBUF_BUFG;
  wire [7:0]clk_cycle_wait;
  wire [7:0]clk_cycle_wait_IBUF;
  wire [7:0]counter;
  wire counter__0;
  wire \counter_reg[0]_i_1_n_0 ;
  wire \counter_reg[1]_i_1_n_0 ;
  wire \counter_reg[2]_i_1_n_0 ;
  wire \counter_reg[3]_i_1_n_0 ;
  wire \counter_reg[3]_i_2_n_0 ;
  wire \counter_reg[4]_i_1_n_0 ;
  wire \counter_reg[4]_i_2_n_0 ;
  wire \counter_reg[5]_i_1_n_0 ;
  wire \counter_reg[5]_i_2_n_0 ;
  wire \counter_reg[6]_i_1_n_0 ;
  wire \counter_reg[7]_i_1_n_0 ;
  wire \counter_reg[7]_i_3_n_0 ;
  wire enable;
  wire enable_IBUF;
  wire [1:0]next_state;
  wire ready;
  wire ready_OBUF;
  wire reset;
  wire [7:0]response;
  wire [7:0]response_OBUF;
  wire [1:0]state;

initial begin
 $sdf_annotate("tb_top_puf_time_synth.sdf",,,,"tool_control");
end
  (* SOFT_HLUTNM = "soft_lutpair497" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_state[0]_i_1 
       (.I0(state[0]),
        .I1(\FSM_sequential_state[0]_i_2_n_0 ),
        .O(next_state[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA8)) 
    \FSM_sequential_state[0]_i_2 
       (.I0(state[1]),
        .I1(\FSM_sequential_state[1]_i_6_n_0 ),
        .I2(counter[6]),
        .I3(counter[5]),
        .I4(counter[7]),
        .I5(counter[2]),
        .O(\FSM_sequential_state[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h3AFC3A0C)) 
    \FSM_sequential_state[1]_i_1 
       (.I0(\FSM_sequential_state[1]_i_4_n_0 ),
        .I1(enable_IBUF),
        .I2(state[0]),
        .I3(state[1]),
        .I4(\FSM_sequential_state[1]_i_5_n_0 ),
        .O(\FSM_sequential_state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair500" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \FSM_sequential_state[1]_i_2 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(\FSM_sequential_state[1]_i_4_n_0 ),
        .O(next_state[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_state[1]_i_3 
       (.I0(enable_IBUF),
        .O(reset));
  LUT5 #(
    .INIT(32'h00000001)) 
    \FSM_sequential_state[1]_i_4 
       (.I0(counter[2]),
        .I1(counter[7]),
        .I2(counter[5]),
        .I3(counter[6]),
        .I4(\FSM_sequential_state[1]_i_6_n_0 ),
        .O(\FSM_sequential_state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000009009)) 
    \FSM_sequential_state[1]_i_5 
       (.I0(counter[6]),
        .I1(clk_cycle_wait_IBUF[6]),
        .I2(counter[7]),
        .I3(clk_cycle_wait_IBUF[7]),
        .I4(\FSM_sequential_state[1]_i_7_n_0 ),
        .I5(\FSM_sequential_state[1]_i_8_n_0 ),
        .O(\FSM_sequential_state[1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair499" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \FSM_sequential_state[1]_i_6 
       (.I0(counter[3]),
        .I1(counter[1]),
        .I2(counter[4]),
        .I3(counter[0]),
        .O(\FSM_sequential_state[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \FSM_sequential_state[1]_i_7 
       (.I0(clk_cycle_wait_IBUF[0]),
        .I1(counter[0]),
        .I2(counter[2]),
        .I3(clk_cycle_wait_IBUF[2]),
        .I4(counter[1]),
        .I5(clk_cycle_wait_IBUF[1]),
        .O(\FSM_sequential_state[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \FSM_sequential_state[1]_i_8 
       (.I0(clk_cycle_wait_IBUF[3]),
        .I1(counter[3]),
        .I2(counter[4]),
        .I3(clk_cycle_wait_IBUF[4]),
        .I4(counter[5]),
        .I5(clk_cycle_wait_IBUF[5]),
        .O(\FSM_sequential_state[1]_i_8_n_0 ));
  (* FSM_ENCODED_STATES = "pulse_up_s:01,pulse_down_s:10,reset_s:00,ready_s:11" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[0] 
       (.C(clk_IBUF_BUFG),
        .CE(\FSM_sequential_state[1]_i_1_n_0 ),
        .CLR(reset),
        .D(next_state[0]),
        .Q(state[0]));
  (* FSM_ENCODED_STATES = "pulse_up_s:01,pulse_down_s:10,reset_s:00,ready_s:11" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[1] 
       (.C(clk_IBUF_BUFG),
        .CE(\FSM_sequential_state[1]_i_1_n_0 ),
        .CLR(reset),
        .D(next_state[1]),
        .Q(state[1]));
  Puf PUF_ISNT
       (.CLK(clk_IBUF_BUFG),
        .Challenge({challenge[31],challenge_IBUF}),
        .Q(state),
        .Response(response_OBUF));
  (* DONT_TOUCH *) 
  IBUF_UNIQ_BASE_ \challenge_IBUF[0]_inst 
       (.I(challenge[0]),
        .O(challenge_IBUF[0]));
  (* DONT_TOUCH *) 
  IBUF_HD47 \challenge_IBUF[10]_inst 
       (.I(challenge[10]),
        .O(challenge_IBUF[10]));
  (* DONT_TOUCH *) 
  IBUF_HD48 \challenge_IBUF[11]_inst 
       (.I(challenge[11]),
        .O(challenge_IBUF[11]));
  (* DONT_TOUCH *) 
  IBUF_HD49 \challenge_IBUF[12]_inst 
       (.I(challenge[12]),
        .O(challenge_IBUF[12]));
  (* DONT_TOUCH *) 
  IBUF_HD50 \challenge_IBUF[13]_inst 
       (.I(challenge[13]),
        .O(challenge_IBUF[13]));
  (* DONT_TOUCH *) 
  IBUF_HD51 \challenge_IBUF[14]_inst 
       (.I(challenge[14]),
        .O(challenge_IBUF[14]));
  (* DONT_TOUCH *) 
  IBUF_HD52 \challenge_IBUF[15]_inst 
       (.I(challenge[15]),
        .O(challenge_IBUF[15]));
  (* DONT_TOUCH *) 
  IBUF_HD53 \challenge_IBUF[16]_inst 
       (.I(challenge[16]),
        .O(challenge_IBUF[16]));
  (* DONT_TOUCH *) 
  IBUF_HD54 \challenge_IBUF[17]_inst 
       (.I(challenge[17]),
        .O(challenge_IBUF[17]));
  (* DONT_TOUCH *) 
  IBUF_HD55 \challenge_IBUF[18]_inst 
       (.I(challenge[18]),
        .O(challenge_IBUF[18]));
  (* DONT_TOUCH *) 
  IBUF_HD56 \challenge_IBUF[19]_inst 
       (.I(challenge[19]),
        .O(challenge_IBUF[19]));
  (* DONT_TOUCH *) 
  IBUF_HD57 \challenge_IBUF[1]_inst 
       (.I(challenge[1]),
        .O(challenge_IBUF[1]));
  (* DONT_TOUCH *) 
  IBUF_HD58 \challenge_IBUF[20]_inst 
       (.I(challenge[20]),
        .O(challenge_IBUF[20]));
  (* DONT_TOUCH *) 
  IBUF_HD59 \challenge_IBUF[21]_inst 
       (.I(challenge[21]),
        .O(challenge_IBUF[21]));
  (* DONT_TOUCH *) 
  IBUF_HD60 \challenge_IBUF[22]_inst 
       (.I(challenge[22]),
        .O(challenge_IBUF[22]));
  (* DONT_TOUCH *) 
  IBUF_HD61 \challenge_IBUF[23]_inst 
       (.I(challenge[23]),
        .O(challenge_IBUF[23]));
  (* DONT_TOUCH *) 
  IBUF_HD62 \challenge_IBUF[24]_inst 
       (.I(challenge[24]),
        .O(challenge_IBUF[24]));
  (* DONT_TOUCH *) 
  IBUF_HD63 \challenge_IBUF[25]_inst 
       (.I(challenge[25]),
        .O(challenge_IBUF[25]));
  (* DONT_TOUCH *) 
  IBUF_HD64 \challenge_IBUF[26]_inst 
       (.I(challenge[26]),
        .O(challenge_IBUF[26]));
  (* DONT_TOUCH *) 
  IBUF_HD65 \challenge_IBUF[27]_inst 
       (.I(challenge[27]),
        .O(challenge_IBUF[27]));
  (* DONT_TOUCH *) 
  IBUF_HD66 \challenge_IBUF[28]_inst 
       (.I(challenge[28]),
        .O(challenge_IBUF[28]));
  (* DONT_TOUCH *) 
  IBUF_HD67 \challenge_IBUF[29]_inst 
       (.I(challenge[29]),
        .O(challenge_IBUF[29]));
  (* DONT_TOUCH *) 
  IBUF_HD68 \challenge_IBUF[2]_inst 
       (.I(challenge[2]),
        .O(challenge_IBUF[2]));
  (* DONT_TOUCH *) 
  IBUF_HD69 \challenge_IBUF[30]_inst 
       (.I(challenge[30]),
        .O(challenge_IBUF[30]));
  (* DONT_TOUCH *) 
  IBUF_HD70 \challenge_IBUF[3]_inst 
       (.I(challenge[3]),
        .O(challenge_IBUF[3]));
  (* DONT_TOUCH *) 
  IBUF_HD71 \challenge_IBUF[4]_inst 
       (.I(challenge[4]),
        .O(challenge_IBUF[4]));
  (* DONT_TOUCH *) 
  IBUF_HD72 \challenge_IBUF[5]_inst 
       (.I(challenge[5]),
        .O(challenge_IBUF[5]));
  (* DONT_TOUCH *) 
  IBUF_HD73 \challenge_IBUF[6]_inst 
       (.I(challenge[6]),
        .O(challenge_IBUF[6]));
  (* DONT_TOUCH *) 
  IBUF_HD74 \challenge_IBUF[7]_inst 
       (.I(challenge[7]),
        .O(challenge_IBUF[7]));
  (* DONT_TOUCH *) 
  IBUF_HD75 \challenge_IBUF[8]_inst 
       (.I(challenge[8]),
        .O(challenge_IBUF[8]));
  (* DONT_TOUCH *) 
  IBUF_HD76 \challenge_IBUF[9]_inst 
       (.I(challenge[9]),
        .O(challenge_IBUF[9]));
  (* XILINX_LEGACY_PRIM = "BUFG" *) 
  BUFGCE #(
    .CE_TYPE("ASYNC"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .STARTUP_SYNC("FALSE")) 
    clk_IBUF_BUFG_inst
       (.CE(1'b1),
        .I(clk_IBUF),
        .O(clk_IBUF_BUFG));
  IBUF_HD77 clk_IBUF_inst
       (.I(clk),
        .O(clk_IBUF));
  IBUF_HD78 \clk_cycle_wait_IBUF[0]_inst 
       (.I(clk_cycle_wait[0]),
        .O(clk_cycle_wait_IBUF[0]));
  IBUF_HD79 \clk_cycle_wait_IBUF[1]_inst 
       (.I(clk_cycle_wait[1]),
        .O(clk_cycle_wait_IBUF[1]));
  IBUF_HD80 \clk_cycle_wait_IBUF[2]_inst 
       (.I(clk_cycle_wait[2]),
        .O(clk_cycle_wait_IBUF[2]));
  IBUF_HD81 \clk_cycle_wait_IBUF[3]_inst 
       (.I(clk_cycle_wait[3]),
        .O(clk_cycle_wait_IBUF[3]));
  IBUF_HD82 \clk_cycle_wait_IBUF[4]_inst 
       (.I(clk_cycle_wait[4]),
        .O(clk_cycle_wait_IBUF[4]));
  IBUF_HD83 \clk_cycle_wait_IBUF[5]_inst 
       (.I(clk_cycle_wait[5]),
        .O(clk_cycle_wait_IBUF[5]));
  IBUF_HD84 \clk_cycle_wait_IBUF[6]_inst 
       (.I(clk_cycle_wait[6]),
        .O(clk_cycle_wait_IBUF[6]));
  IBUF_HD85 \clk_cycle_wait_IBUF[7]_inst 
       (.I(clk_cycle_wait[7]),
        .O(clk_cycle_wait_IBUF[7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \counter_reg[0] 
       (.CLR(1'b0),
        .D(\counter_reg[0]_i_1_n_0 ),
        .G(counter__0),
        .GE(1'b1),
        .Q(counter[0]));
  (* SOFT_HLUTNM = "soft_lutpair496" *) 
  LUT4 #(
    .INIT(16'h00DC)) 
    \counter_reg[0]_i_1 
       (.I0(\FSM_sequential_state[1]_i_5_n_0 ),
        .I1(\FSM_sequential_state[0]_i_2_n_0 ),
        .I2(state[0]),
        .I3(counter[0]),
        .O(\counter_reg[0]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \counter_reg[1] 
       (.CLR(1'b0),
        .D(\counter_reg[1]_i_1_n_0 ),
        .G(counter__0),
        .GE(1'b1),
        .Q(counter[1]));
  (* SOFT_HLUTNM = "soft_lutpair496" *) 
  LUT5 #(
    .INIT(32'h00DCDC00)) 
    \counter_reg[1]_i_1 
       (.I0(\FSM_sequential_state[1]_i_5_n_0 ),
        .I1(\FSM_sequential_state[0]_i_2_n_0 ),
        .I2(state[0]),
        .I3(counter[1]),
        .I4(counter[0]),
        .O(\counter_reg[1]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \counter_reg[2] 
       (.CLR(1'b0),
        .D(\counter_reg[2]_i_1_n_0 ),
        .G(counter__0),
        .GE(1'b1),
        .Q(counter[2]));
  LUT6 #(
    .INIT(64'h00DCDCDCDC000000)) 
    \counter_reg[2]_i_1 
       (.I0(\FSM_sequential_state[1]_i_5_n_0 ),
        .I1(\FSM_sequential_state[0]_i_2_n_0 ),
        .I2(state[0]),
        .I3(counter[0]),
        .I4(counter[1]),
        .I5(counter[2]),
        .O(\counter_reg[2]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \counter_reg[3] 
       (.CLR(1'b0),
        .D(\counter_reg[3]_i_1_n_0 ),
        .G(counter__0),
        .GE(1'b1),
        .Q(counter[3]));
  (* SOFT_HLUTNM = "soft_lutpair497" *) 
  LUT5 #(
    .INIT(32'hDC0000DC)) 
    \counter_reg[3]_i_1 
       (.I0(\FSM_sequential_state[1]_i_5_n_0 ),
        .I1(\FSM_sequential_state[0]_i_2_n_0 ),
        .I2(state[0]),
        .I3(\counter_reg[3]_i_2_n_0 ),
        .I4(counter[3]),
        .O(\counter_reg[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair499" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \counter_reg[3]_i_2 
       (.I0(counter[1]),
        .I1(counter[0]),
        .I2(counter[2]),
        .O(\counter_reg[3]_i_2_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \counter_reg[4] 
       (.CLR(1'b0),
        .D(\counter_reg[4]_i_1_n_0 ),
        .G(counter__0),
        .GE(1'b1),
        .Q(counter[4]));
  LUT5 #(
    .INIT(32'hDC0000DC)) 
    \counter_reg[4]_i_1 
       (.I0(\FSM_sequential_state[1]_i_5_n_0 ),
        .I1(\FSM_sequential_state[0]_i_2_n_0 ),
        .I2(state[0]),
        .I3(\counter_reg[4]_i_2_n_0 ),
        .I4(counter[4]),
        .O(\counter_reg[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair498" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \counter_reg[4]_i_2 
       (.I0(counter[2]),
        .I1(counter[0]),
        .I2(counter[1]),
        .I3(counter[3]),
        .O(\counter_reg[4]_i_2_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \counter_reg[5] 
       (.CLR(1'b0),
        .D(\counter_reg[5]_i_1_n_0 ),
        .G(counter__0),
        .GE(1'b1),
        .Q(counter[5]));
  LUT5 #(
    .INIT(32'hDC0000DC)) 
    \counter_reg[5]_i_1 
       (.I0(\FSM_sequential_state[1]_i_5_n_0 ),
        .I1(\FSM_sequential_state[0]_i_2_n_0 ),
        .I2(state[0]),
        .I3(\counter_reg[5]_i_2_n_0 ),
        .I4(counter[5]),
        .O(\counter_reg[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair498" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \counter_reg[5]_i_2 
       (.I0(counter[3]),
        .I1(counter[1]),
        .I2(counter[0]),
        .I3(counter[2]),
        .I4(counter[4]),
        .O(\counter_reg[5]_i_2_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \counter_reg[6] 
       (.CLR(1'b0),
        .D(\counter_reg[6]_i_1_n_0 ),
        .G(counter__0),
        .GE(1'b1),
        .Q(counter[6]));
  LUT5 #(
    .INIT(32'h00DCDC00)) 
    \counter_reg[6]_i_1 
       (.I0(\FSM_sequential_state[1]_i_5_n_0 ),
        .I1(\FSM_sequential_state[0]_i_2_n_0 ),
        .I2(state[0]),
        .I3(\counter_reg[7]_i_3_n_0 ),
        .I4(counter[6]),
        .O(\counter_reg[6]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \counter_reg[7] 
       (.CLR(1'b0),
        .D(\counter_reg[7]_i_1_n_0 ),
        .G(counter__0),
        .GE(1'b1),
        .Q(counter[7]));
  LUT6 #(
    .INIT(64'h7878007878780000)) 
    \counter_reg[7]_i_1 
       (.I0(\counter_reg[7]_i_3_n_0 ),
        .I1(counter[6]),
        .I2(counter[7]),
        .I3(\FSM_sequential_state[1]_i_5_n_0 ),
        .I4(\FSM_sequential_state[0]_i_2_n_0 ),
        .I5(state[0]),
        .O(\counter_reg[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \counter_reg[7]_i_2 
       (.I0(state[1]),
        .I1(state[0]),
        .O(counter__0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \counter_reg[7]_i_3 
       (.I0(counter[5]),
        .I1(counter[4]),
        .I2(counter[2]),
        .I3(counter[0]),
        .I4(counter[1]),
        .I5(counter[3]),
        .O(\counter_reg[7]_i_3_n_0 ));
  IBUF_HD86 enable_IBUF_inst
       (.I(enable),
        .O(enable_IBUF));
  OBUF ready_OBUF_inst
       (.I(ready_OBUF),
        .O(ready));
  (* SOFT_HLUTNM = "soft_lutpair500" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ready_OBUF_inst_i_1
       (.I0(state[0]),
        .I1(state[1]),
        .O(ready_OBUF));
  OBUF \response_OBUF[0]_inst 
       (.I(response_OBUF[0]),
        .O(response[0]));
  OBUF \response_OBUF[1]_inst 
       (.I(response_OBUF[1]),
        .O(response[1]));
  OBUF \response_OBUF[2]_inst 
       (.I(response_OBUF[2]),
        .O(response[2]));
  OBUF \response_OBUF[3]_inst 
       (.I(response_OBUF[3]),
        .O(response[3]));
  OBUF \response_OBUF[4]_inst 
       (.I(response_OBUF[4]),
        .O(response[4]));
  OBUF \response_OBUF[5]_inst 
       (.I(response_OBUF[5]),
        .O(response[5]));
  OBUF \response_OBUF[6]_inst 
       (.I(response_OBUF[6]),
        .O(response[6]));
  OBUF \response_OBUF[7]_inst 
       (.I(response_OBUF[7]),
        .O(response[7]));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
