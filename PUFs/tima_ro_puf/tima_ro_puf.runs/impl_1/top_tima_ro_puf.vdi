#-----------------------------------------------------------
# Vivado v2020.2 (64-bit)
# SW Build 3064766 on Wed Nov 18 09:12:47 MST 2020
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
# Start of session at: Thu Sep 12 16:51:22 2024
# Process ID: 5963
# Current directory: /home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.runs/impl_1
# Command line: vivado -log top_tima_ro_puf.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source top_tima_ro_puf.tcl -notrace
# Log file: /home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.runs/impl_1/top_tima_ro_puf.vdi
# Journal file: /home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.runs/impl_1/vivado.jou
#-----------------------------------------------------------
source top_tima_ro_puf.tcl -notrace
Command: link_design -top top_tima_ro_puf -part xczu3eg-sbva484-1-e
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xczu3eg-sbva484-1-e
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2565.328 ; gain = 0.000 ; free physical = 277 ; free virtual = 14498
INFO: [Netlist 29-17] Analyzing 132 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.srcs/constrs_1/new/constraints.xdc]
Finished Parsing XDC File [/home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.srcs/constrs_1/new/constraints.xdc]
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2611.012 ; gain = 0.000 ; free physical = 160 ; free virtual = 14351
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 13 instances were transformed.
  IBUF => IBUF (IBUFCTRL, INBUF): 13 instances

7 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:17 ; elapsed = 00:00:23 . Memory (MB): peak = 2611.012 ; gain = 287.027 ; free physical = 160 ; free virtual = 14351
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:04 ; elapsed = 00:00:02 . Memory (MB): peak = 2708.402 ; gain = 97.391 ; free physical = 130 ; free virtual = 14334

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 1ab43ed84

Time (s): cpu = 00:00:03 ; elapsed = 00:00:04 . Memory (MB): peak = 2915.652 ; gain = 207.250 ; free physical = 123 ; free virtual = 14167

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 3 inverter(s) to 68 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 2503131de

Time (s): cpu = 00:00:00.18 ; elapsed = 00:00:00.16 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 134 ; free virtual = 13998
INFO: [Opt 31-389] Phase Retarget created 0 cells and removed 3 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 2503131de

Time (s): cpu = 00:00:00.21 ; elapsed = 00:00:00.19 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 134 ; free virtual = 13998
INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 0 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 269779a1f

Time (s): cpu = 00:00:00.28 ; elapsed = 00:00:00.26 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 133 ; free virtual = 13998
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Sweep, 3584 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
INFO: [Opt 31-194] Inserted BUFG RO_PUF/RO_BLOCK_1/output_ro_BUFG_inst to drive 32 load(s) on clock net RO_PUF/RO_BLOCK_1/output_ro_BUFGCE
INFO: [Opt 31-194] Inserted BUFG RO_PUF/RO_BLOCK_2/output_ro_BUFG_inst to drive 32 load(s) on clock net RO_PUF/RO_BLOCK_2/output_ro_BUFGCE
INFO: [Opt 31-193] Inserted 2 BUFG(s) on clock nets
INFO: [Opt 31-1077] Phase BUFG optimization inserted 0 global clock buffer(s) for CLOCK_LOW_FANOUT.
Phase 4 BUFG optimization | Checksum: 1ef99e38c

Time (s): cpu = 00:00:00.33 ; elapsed = 00:00:00.30 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 133 ; free virtual = 13998
INFO: [Opt 31-662] Phase BUFG optimization created 2 cells of which 2 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 1ef99e38c

Time (s): cpu = 00:00:00.34 ; elapsed = 00:00:00.32 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 133 ; free virtual = 13998
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 1ef99e38c

Time (s): cpu = 00:00:00.37 ; elapsed = 00:00:00.36 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 133 ; free virtual = 13998
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |               0  |               3  |                                              0  |
|  Constant propagation         |               0  |               0  |                                              0  |
|  Sweep                        |               0  |               0  |                                           3584  |
|  BUFG optimization            |               2  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                              0  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00.02 ; elapsed = 00:00:00.02 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 133 ; free virtual = 13998
Ending Logic Optimization Task | Checksum: 17072c6a8

Time (s): cpu = 00:00:00.42 ; elapsed = 00:00:00.40 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 133 ; free virtual = 13998

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
Ending Power Optimization Task | Checksum: 17072c6a8

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 133 ; free virtual = 13998

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 17072c6a8

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 133 ; free virtual = 13998

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 133 ; free virtual = 13998
Ending Netlist Obfuscation Task | Checksum: 17072c6a8

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 3090.527 ; gain = 0.000 ; free physical = 133 ; free virtual = 13998
INFO: [Common 17-83] Releasing license: Implementation
29 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:10 ; elapsed = 00:00:09 . Memory (MB): peak = 3090.527 ; gain = 479.516 ; free physical = 133 ; free virtual = 13998
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.33 . Memory (MB): peak = 3130.547 ; gain = 0.000 ; free physical = 130 ; free virtual = 13990
INFO: [Common 17-1381] The checkpoint '/home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.runs/impl_1/top_tima_ro_puf_opt.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file top_tima_ro_puf_drc_opted.rpt -pb top_tima_ro_puf_drc_opted.pb -rpx top_tima_ro_puf_drc_opted.rpx
Command: report_drc -file top_tima_ro_puf_drc_opted.rpt -pb top_tima_ro_puf_drc_opted.pb -rpx top_tima_ro_puf_drc_opted.rpx
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/home/puftester/tools/Xilinx/Vivado/2020.2/data/ip'.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.runs/impl_1/top_tima_ro_puf_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:39 ; elapsed = 00:00:48 . Memory (MB): peak = 4379.809 ; gain = 1249.262 ; free physical = 139 ; free virtual = 13178
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
WARNING: [Vivado_Tcl 4-1400] -ultrathreads option currently only supported on multi-SLR devices. Continuing placement in regular mode.
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 4 threads
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/NAND_IN.
INFO: [Common 17-14] Message 'DRC LUTLP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors, 512 Critical Warnings
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 4 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 149 ; free virtual = 13166
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 974783df

Time (s): cpu = 00:00:00.04 ; elapsed = 00:00:00.07 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 148 ; free virtual = 13166
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 147 ; free virtual = 13165

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 3e4c1af9

Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 144 ; free virtual = 13153

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 6ca551d5

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 161 ; free virtual = 13160

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 6ca551d5

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 164 ; free virtual = 13164
Phase 1 Placer Initialization | Checksum: 6ca551d5

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 163 ; free virtual = 13163

Phase 2 Global Placement

Phase 2.1 Floorplanning

Phase 2.1.1 Partition Driven Placement

Phase 2.1.1.1 PBP: Partition Driven Placement
Phase 2.1.1.1 PBP: Partition Driven Placement | Checksum: afc63996

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 157 ; free virtual = 13162

Phase 2.1.1.2 PBP: Clock Region Placement
Phase 2.1.1.2 PBP: Clock Region Placement | Checksum: fc3cebb6

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 147 ; free virtual = 13160

Phase 2.1.1.3 PBP: Compute Congestion
Phase 2.1.1.3 PBP: Compute Congestion | Checksum: fc3cebb6

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 143 ; free virtual = 13156

Phase 2.1.1.4 PBP: Add part constraints
Phase 2.1.1.4 PBP: Add part constraints | Checksum: fc3cebb6

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 143 ; free virtual = 13156
Phase 2.1.1 Partition Driven Placement | Checksum: fc3cebb6

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 143 ; free virtual = 13156
Phase 2.1 Floorplanning | Checksum: fc3cebb6

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 143 ; free virtual = 13156

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: fc3cebb6

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 143 ; free virtual = 13156

Phase 2.3 Global Placement Core
WARNING: [Place 46-29] place_design is not in timing mode. Skip physical synthesis in placer
Phase 2.3 Global Placement Core | Checksum: cf5736e8

Time (s): cpu = 00:00:05 ; elapsed = 00:00:05 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 190 ; free virtual = 13157
Phase 2 Global Placement | Checksum: cf5736e8

Time (s): cpu = 00:00:05 ; elapsed = 00:00:05 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 190 ; free virtual = 13157

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: cf5736e8

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 193 ; free virtual = 13160

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: aa0fd58c

Time (s): cpu = 00:00:06 ; elapsed = 00:00:06 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 193 ; free virtual = 13161

Phase 3.3 Small Shape DP

Phase 3.3.1 Small Shape Clustering
Phase 3.3.1 Small Shape Clustering | Checksum: 147b68828

Time (s): cpu = 00:00:07 ; elapsed = 00:00:06 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 188 ; free virtual = 13157

Phase 3.3.2 Flow Legalize Slice Clusters
Phase 3.3.2 Flow Legalize Slice Clusters | Checksum: 6b08665c

Time (s): cpu = 00:00:07 ; elapsed = 00:00:06 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 192 ; free virtual = 13161

Phase 3.3.3 Slice Area Swap
Phase 3.3.3 Slice Area Swap | Checksum: bb9859d5

Time (s): cpu = 00:00:07 ; elapsed = 00:00:06 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 189 ; free virtual = 13159
Phase 3.3 Small Shape DP | Checksum: d3c3d1bf

Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 192 ; free virtual = 13165

Phase 3.4 Re-assign LUT pins
Phase 3.4 Re-assign LUT pins | Checksum: d3c3d1bf

Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 192 ; free virtual = 13164

Phase 3.5 Pipeline Register Optimization
Phase 3.5 Pipeline Register Optimization | Checksum: d3c3d1bf

Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 190 ; free virtual = 13164
Phase 3 Detail Placement | Checksum: d3c3d1bf

Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 190 ; free virtual = 13164

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
Phase 4.1 Post Commit Optimization | Checksum: d3c3d1bf

Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 190 ; free virtual = 13164
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 186 ; free virtual = 13162

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 1bb76e123

Time (s): cpu = 00:00:08 ; elapsed = 00:00:08 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 189 ; free virtual = 13166

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ________________________________________________________________________
|           | Global Congestion | Long Congestion   | Short Congestion  |
| Direction | Region Size       | Region Size       | Region Size       |
|___________|___________________|___________________|___________________|
|      North|                1x1|                1x1|                1x1|
|___________|___________________|___________________|___________________|
|      South|                1x1|                1x1|                1x1|
|___________|___________________|___________________|___________________|
|       East|                1x1|                1x1|                1x1|
|___________|___________________|___________________|___________________|
|       West|                1x1|                1x1|                1x1|
|___________|___________________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 1bb76e123

Time (s): cpu = 00:00:08 ; elapsed = 00:00:08 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 189 ; free virtual = 13166
Phase 4.3 Placer Reporting | Checksum: 1bb76e123

Time (s): cpu = 00:00:08 ; elapsed = 00:00:08 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 189 ; free virtual = 13166

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 189 ; free virtual = 13166

Time (s): cpu = 00:00:08 ; elapsed = 00:00:08 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 189 ; free virtual = 13166
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 1c08b53bb

Time (s): cpu = 00:00:08 ; elapsed = 00:00:08 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 189 ; free virtual = 13166
Ending Placer Task | Checksum: 1ac59c824

Time (s): cpu = 00:00:08 ; elapsed = 00:00:08 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 189 ; free virtual = 13166
INFO: [Common 17-83] Releasing license: Implementation
48 Infos, 2 Warnings, 100 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:00:14 ; elapsed = 00:00:10 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 219 ; free virtual = 13196
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.35 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 189 ; free virtual = 13192
INFO: [Common 17-1381] The checkpoint '/home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.runs/impl_1/top_tima_ro_puf_placed.dcp' has been generated.
INFO: [runtcl-4] Executing : report_io -file top_tima_ro_puf_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.15 ; elapsed = 00:00:00.30 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 143 ; free virtual = 13193
INFO: [runtcl-4] Executing : report_utilization -file top_tima_ro_puf_utilization_placed.rpt -pb top_tima_ro_puf_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file top_tima_ro_puf_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.06 ; elapsed = 00:00:00.17 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 152 ; free virtual = 13205
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Vivado_Tcl 4-235] No timing constraint found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
55 Infos, 2 Warnings, 100 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.36 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 131 ; free virtual = 13204
INFO: [Common 17-1381] The checkpoint '/home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.runs/impl_1/top_tima_ro_puf_physopt.dcp' has been generated.
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 4 threads
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[0].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[100].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[101].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[102].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[103].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[104].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[105].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[106].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[107].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[108].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[109].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[10].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[110].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[111].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[112].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[113].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[114].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[115].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[116].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[117].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[118].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[119].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[11].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[120].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[121].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[122].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[123].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[124].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[125].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[126].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[127].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[128].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[129].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[12].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[130].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[131].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[132].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[133].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[134].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[135].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[136].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[137].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[138].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[139].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[13].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[140].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[141].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[142].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[143].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[144].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[145].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[146].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[147].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[148].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[149].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[14].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[150].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[151].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[152].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[153].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[154].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[155].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[156].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[157].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[158].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[159].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[15].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[160].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[161].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[162].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[163].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[164].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[165].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[166].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[167].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[168].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[169].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[16].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[170].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[171].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[172].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[173].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[174].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[175].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[176].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[177].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[178].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[179].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[17].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[180].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[181].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[182].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[183].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[184].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[185].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[186].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[187].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[188].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[189].RO_INST/NAND_IN.
CRITICAL WARNING: [DRC LUTLP-1] Combinatorial Loop Alert: 7 LUT cells form a combinatorial loop. This can create a race condition. Timing analysis may not be accurate. The preferred resolution is to modify the design to remove combinatorial logic loops. If the loop is known and understood, this DRC can be bypassed by acknowledging the condition and setting the following XDC constraint on any one of the nets in the loop: 'set_property ALLOW_COMBINATORIAL_LOOPS TRUE [get_nets <myHier/myNet>]'. One net in the loop is RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/Inverters[1]. Please evaluate your design. The cells in the loop are: RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTERS_BLK[1].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTERS_BLK[2].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTERS_BLK[3].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTERS_BLK[4].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTERS_BLK[5].INVERTER, RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/INVERTER_0, and RO_PUF/RO_BLOCK_1/RING_OSCILLATOR[18].RO_INST/NAND_IN.
INFO: [Common 17-14] Message 'DRC LUTLP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors, 512 Critical Warnings
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 4 CPUs
Checksum: PlaceDB: 9c6f3182 ConstDB: 0 ShapeSum: 2837873e RouteDB: e7b30f64

Phase 1 Build RT Design
Nodegraph reading from file.  Time (s): cpu = 00:00:00.55 ; elapsed = 00:00:00.58 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 124 ; free virtual = 13128
Phase 1 Build RT Design | Checksum: 50ee8070

Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 141 ; free virtual = 13153
Post Restoration Checksum: NetGraph: d934a8ac NumContArr: 3ac561b Constraints: 95878b08 Timing: 0

Phase 2 Router Initialization
INFO: [Route 35-64] No timing constraints were detected. The router will operate in resource-optimization mode.

Phase 2.1 Fix Topology Constraints
Phase 2.1 Fix Topology Constraints | Checksum: 1726889cf

Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 115 ; free virtual = 13132

Phase 2.2 Pre Route Cleanup
Phase 2.2 Pre Route Cleanup | Checksum: 1726889cf

Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 115 ; free virtual = 13132

Phase 2.3 Global Clock Net Routing
 Number of Nodes with overlaps = 0
Phase 2.3 Global Clock Net Routing | Checksum: 1b6081db9

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 181 ; free virtual = 13138
Phase 2 Router Initialization | Checksum: 1b6081db9

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 181 ; free virtual = 13138

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 4360
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 251
  Number of Partially Routed Nets     = 4109
  Number of Node Overlaps             = 0


Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 1b6081db9

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 170 ; free virtual = 13138
Phase 3 Initial Routing | Checksum: 1f705c90a

Time (s): cpu = 00:00:09 ; elapsed = 00:00:06 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 207 ; free virtual = 13121

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 31
 Number of Nodes with overlaps = 0
Phase 4.1 Global Iteration 0 | Checksum: 19bbbb5b5

Time (s): cpu = 00:00:12 ; elapsed = 00:00:09 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 205 ; free virtual = 13119
Phase 4 Rip-up And Reroute | Checksum: 19bbbb5b5

Time (s): cpu = 00:00:12 ; elapsed = 00:00:09 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 205 ; free virtual = 13119

Phase 5 Delay and Skew Optimization
Phase 5 Delay and Skew Optimization | Checksum: 142b6e89a

Time (s): cpu = 00:00:12 ; elapsed = 00:00:09 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 206 ; free virtual = 13120

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter
Phase 6.1 Hold Fix Iter | Checksum: 142b6e89a

Time (s): cpu = 00:00:12 ; elapsed = 00:00:09 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 205 ; free virtual = 13120
Phase 6 Post Hold Fix | Checksum: 142b6e89a

Time (s): cpu = 00:00:12 ; elapsed = 00:00:09 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 205 ; free virtual = 13120

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 0.229731 %
  Global Horizontal Routing Utilization  = 0.36602 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Congestion Report
North Dir 1x1 Area, Max Cong = 30.3738%, No Congested Regions.
South Dir 1x1 Area, Max Cong = 22.7488%, No Congested Regions.
East Dir 1x1 Area, Max Cong = 15.3846%, No Congested Regions.
West Dir 1x1 Area, Max Cong = 34.6154%, No Congested Regions.

------------------------------
Reporting congestion hotspots
------------------------------
Direction: North
----------------
Congested clusters found at Level 0
Effective congestion level: 0 Aspect Ratio: 1 Sparse Ratio: 0
Direction: South
----------------
Congested clusters found at Level 0
Effective congestion level: 0 Aspect Ratio: 1 Sparse Ratio: 0
Direction: East
----------------
Congested clusters found at Level 0
Effective congestion level: 0 Aspect Ratio: 1 Sparse Ratio: 0
Direction: West
----------------
Congested clusters found at Level 0
Effective congestion level: 0 Aspect Ratio: 1 Sparse Ratio: 0

Phase 7 Route finalize | Checksum: 142b6e89a

Time (s): cpu = 00:00:13 ; elapsed = 00:00:09 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 204 ; free virtual = 13119

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 142b6e89a

Time (s): cpu = 00:00:13 ; elapsed = 00:00:09 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 203 ; free virtual = 13118

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 142b6e89a

Time (s): cpu = 00:00:13 ; elapsed = 00:00:09 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 196 ; free virtual = 13119
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:00:13 ; elapsed = 00:00:09 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 222 ; free virtual = 13145

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
65 Infos, 2 Warnings, 200 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:00:18 ; elapsed = 00:00:12 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 217 ; free virtual = 13146
INFO: [Common 17-600] The following parameters have non-default value.
general.maxThreads
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.42 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 191 ; free virtual = 13144
INFO: [Common 17-1381] The checkpoint '/home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.runs/impl_1/top_tima_ro_puf_routed.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file top_tima_ro_puf_drc_routed.rpt -pb top_tima_ro_puf_drc_routed.pb -rpx top_tima_ro_puf_drc_routed.rpx
Command: report_drc -file top_tima_ro_puf_drc_routed.rpt -pb top_tima_ro_puf_drc_routed.pb -rpx top_tima_ro_puf_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.runs/impl_1/top_tima_ro_puf_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:09 ; elapsed = 00:00:05 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 176 ; free virtual = 13135
INFO: [runtcl-4] Executing : report_methodology -file top_tima_ro_puf_methodology_drc_routed.rpt -pb top_tima_ro_puf_methodology_drc_routed.pb -rpx top_tima_ro_puf_methodology_drc_routed.rpx
Command: report_methodology -file top_tima_ro_puf_methodology_drc_routed.rpt -pb top_tima_ro_puf_methodology_drc_routed.pb -rpx top_tima_ro_puf_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 4 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /home/puftester/vivado_work/tima_ro_puf/tima_ro_puf.runs/impl_1/top_tima_ro_puf_methodology_drc_routed.rpt.
report_methodology completed successfully
INFO: [runtcl-4] Executing : report_power -file top_tima_ro_puf_power_routed.rpt -pb top_tima_ro_puf_power_summary_routed.pb -rpx top_tima_ro_puf_power_routed.rpx
Command: report_power -file top_tima_ro_puf_power_routed.rpt -pb top_tima_ro_puf_power_summary_routed.pb -rpx top_tima_ro_puf_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
WARNING: [Power 33-232] No user defined clocks were found in the design! Power estimation will be inaccurate until this is corrected.
Resolution: Please specify clocks using create_clock/create_generated_clock for sequential elements. For pure combinatorial circuits, please specify a virtual clock, otherwise the vectorless estimation might be inaccurate
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
77 Infos, 3 Warnings, 200 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:08 ; elapsed = 00:00:07 . Memory (MB): peak = 4379.809 ; gain = 0.000 ; free physical = 156 ; free virtual = 13106
INFO: [runtcl-4] Executing : report_route_status -file top_tima_ro_puf_route_status.rpt -pb top_tima_ro_puf_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file top_tima_ro_puf_timing_summary_routed.rpt -pb top_tima_ro_puf_timing_summary_routed.pb -rpx top_tima_ro_puf_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Temperature grade: E, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 4 CPUs
INFO: [Timing 38-273] Loop limit of 100 reached; Use -loop_limit switch to increase the number of loops reported
WARNING: [Timing 38-313] There are no user specified timing constraints. Timing constraints are needed for proper timing analysis.
INFO: [runtcl-4] Executing : report_incremental_reuse -file top_tima_ro_puf_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file top_tima_ro_puf_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file top_tima_ro_puf_bus_skew_routed.rpt -pb top_tima_ro_puf_bus_skew_routed.pb -rpx top_tima_ro_puf_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Temperature grade: E, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 4 CPUs
INFO: [Common 17-206] Exiting Vivado at Thu Sep 12 16:53:43 2024...
